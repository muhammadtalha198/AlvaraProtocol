{
	"id": "41f1c76b716dc73d5e39ea1c1dcf35e2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AlvaraDao.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"./interfaces/IERC20.sol\";\n\ncontract AlvaraDao is Initializable, OwnableUpgradeable, UUPSUpgradeable {\n    IERC20 public ALVA;\n    IERC20 public xALVA;\n\n    mapping(address => uint256) public userLockPeriod;\n    mapping(address => bool) public blackListAddress;\n\n    uint256 public lockedPeriod;\n\n    event Stake(address indexed staker, uint256 xALVAReceived);\n    event Unstake(address indexed unstaker, uint256 alvaReceived);\n    event BlackListUser(address _user, bool _status);\n    event UpdateLockPeriod(uint lockedPeriod, uint _lockedPeriod);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _alva,\n        address _xalva,\n        uint256 _lockedPeriod\n    ) public initializer {\n        __Ownable_init(msg.sender);\n        __UUPSUpgradeable_init();\n\n        require(_alva != address(0), \"Invalid alva address\");\n        require(_xalva != address(0), \"Invalid xALVA address\");\n\n        ALVA = IERC20(_alva);\n        xALVA = IERC20(_xalva);\n        lockedPeriod = _lockedPeriod;\n    }\n\n    // Enter the alvaDao. Pay some alvas. Earn some shares.\n    function enter(uint256 _amount) public {\n        require(blackListAddress[msg.sender] != true, \"BlackListed User\");\n        uint256 totalAlva = ALVA.balanceOf(address(this));\n        uint256 totalShares = xALVA.totalSupply();\n        if (totalShares == 0 || totalAlva == 0) {\n            xALVA.mint(_msgSender(), _amount);\n            emit Stake(_msgSender(), _amount);\n        } else {\n            uint256 _userShare = (_amount * totalShares) / totalAlva;\n            xALVA.mint(_msgSender(), _userShare);\n            emit Stake(_msgSender(), _userShare);\n        }\n        userLockPeriod[msg.sender] = block.timestamp;\n        ALVA.transferFrom(_msgSender(), address(this), _amount);\n    }\n\n    // Leave the alvaDao. Claim back your alvas.\n    function leave(uint256 _share) public {\n        require(blackListAddress[msg.sender] != true, \"BlackListed User\");\n        require(\n            block.timestamp >= (userLockPeriod[msg.sender] + lockedPeriod),\n            \"Can not unStake\"\n        );\n        uint256 totalShares = xALVA.totalSupply();\n        uint256 _userShare = (_share * ALVA.balanceOf(address(this))) /\n            totalShares;\n        xALVA.burnFrom(_msgSender(), _share);\n        ALVA.transfer(_msgSender(), _userShare);\n\n        emit Unstake(_msgSender(), _userShare);\n    }\n\n    /**\n     * @dev Used only by admin or owner, used to blacklist any user in any emergency case\n     *\n     * @param _user address of blacklistef user\n     * @param _status status of user\n     */\n    function blackListUser(address _user, bool _status) external onlyOwner {\n        require(blackListAddress[_user] != _status, \"Already in same status\");\n        blackListAddress[_user] = _status;\n\n        emit BlackListUser(_user, _status);\n    }\n\n    // Update lock period\n    function updateLockPeriod(uint256 _lockedPeriod) external onlyOwner {\n        emit UpdateLockPeriod(lockedPeriod, _lockedPeriod);\n\n        lockedPeriod = _lockedPeriod;\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        override\n        onlyOwner\n    {}\n}\n"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    function burn(uint256 amount) external; \n\n    function burnTokens(address account, uint256 amount) external;\n\n    function burnFrom(address account, uint256 amount) external;\n\n    function mint(address account, uint256 amount) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212207d731811109a6627c7235ab2c0b9dced5af6fe9a62d0e04bdde36851144b2c9664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207d731811109a6627c7235ab2c0b9dced5af6fe9a62d0e04bdde36851144b2c9664736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x731811109A6627C7235AB2C0B9DCED5AF6FE9A62D0E04BDDE36851144B2C SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "496:5741:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207d731811109a6627c7235ab2c0b9dced5af6fe9a62d0e04bdde36851144b2c9664736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x731811109A6627C7235AB2C0B9DCED5AF6FE9A62D0E04BDDE36851144B2C SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "496:5741:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d731811109a6627c7235ab2c0b9dced5af6fe9a62d0e04bdde36851144b2c9664736f6c634300081e0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/AlvaraDao.sol",
								"contracts/interfaces/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 TSTORE 0xEB MOD PUSH21 0xEACAC34DB943A4360B1CEBF380EA8B292180F7A117 LT SLT SLOAD PUSH19 0xEF5064736F6C634300081E0033000000000000 ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5815:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 TSTORE 0xEB MOD PUSH21 0xEACAC34DB943A4360B1CEBF380EA8B292180F7A117 LT SLT SLOAD PUSH19 0xEF5064736F6C634300081E0033000000000000 ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c55deb0674eacac34db943a4360b1cebf380ea8b292180f7a11710125472ef5064736f6c634300081e0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/AlvaraDao.sol",
								"contracts/interfaces/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E DUP4 0x2B 0xC7 CODESIZE SWAP12 SWAP12 PUSH2 0x6236 PUSH4 0xBF55EC6D REVERT JUMP 0xCB CREATE2 0xE8 MSTORE8 0x4C 0xDC PUSH12 0xEC8916C83A4E082D64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E DUP4 0x2B 0xC7 CODESIZE SWAP12 SWAP12 PUSH2 0x6236 PUSH4 0xBF55EC6D REVERT JUMP 0xCB CREATE2 0xE8 MSTORE8 0x4C 0xDC PUSH12 0xEC8916C83A4E082D64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/AlvaraDao.sol",
								"contracts/interfaces/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c5b25bc7e25b3a72f2d49562c0f1867acb24cd8f54fcb3e7733989e54e66433764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c5b25bc7e25b3a72f2d49562c0f1867acb24cd8f54fcb3e7733989e54e66433764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xB2 JUMPDEST 0xC7 0xE2 JUMPDEST GASPRICE PUSH19 0xF2D49562C0F1867ACB24CD8F54FCB3E7733989 JUMPF 0x4E66 NUMBER CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c5b25bc7e25b3a72f2d49562c0f1867acb24cd8f54fcb3e7733989e54e66433764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xB2 JUMPDEST 0xC7 0xE2 JUMPDEST GASPRICE PUSH19 0xF2D49562C0F1867ACB24CD8F54FCB3E7733989 JUMPF 0x4E66 NUMBER CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5b25bc7e25b3a72f2d49562c0f1867acb24cd8f54fcb3e7733989e54e66433764736f6c634300081e0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/AlvaraDao.sol",
								"contracts/interfaces/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AlvaraDao.sol": {
				"AlvaraDao": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_status",
									"type": "bool"
								}
							],
							"name": "BlackListUser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "xALVAReceived",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "unstaker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "alvaReceived",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_lockedPeriod",
									"type": "uint256"
								}
							],
							"name": "UpdateLockPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ALVA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blackListAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_status",
									"type": "bool"
								}
							],
							"name": "blackListUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_alva",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_xalva",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_lockedPeriod",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_share",
									"type": "uint256"
								}
							],
							"name": "leave",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockedPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lockedPeriod",
									"type": "uint256"
								}
							],
							"name": "updateLockPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLockPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xALVA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"blackListUser(address,bool)": {
								"details": "Used only by admin or owner, used to blacklist any user in any emergency case",
								"params": {
									"_status": "status of user",
									"_user": "address of blacklistef user"
								}
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AlvaraDao.sol\":323:3522  contract AlvaraDao is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"contracts/AlvaraDao.sol\":902:955  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/AlvaraDao.sol\":926:948  _disableInitializers() */\n  tag_4\n    /* \"contracts/AlvaraDao.sol\":926:946  _disableInitializers */\n  tag_5\n    /* \"contracts/AlvaraDao.sol\":926:948  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"contracts/AlvaraDao.sol\":323:3522  contract AlvaraDao is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7709:8131  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7898:7913  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7894:7970  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7936:7959  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7894:7970  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7983:7997  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7983:8017  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7979:8125  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8033:8066  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8085:8114  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8085:8114  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8085:8114  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7979:8125  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7758:8131  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7709:8131  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_18:\n    /* \"contracts/AlvaraDao.sol\":323:3522  contract AlvaraDao is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/AlvaraDao.sol\":323:3522  contract AlvaraDao is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb3d6e119\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe0cef1b0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91db7b0d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa59f3e0c\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      dup1\n      0x4f1ef286\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x67dfd4c9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6ac10901\n      eq\n      tag_9\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x0c8e32d2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1794bb3c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x323bf9f0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3b0e0133\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"contracts/AlvaraDao.sol\":452:501  mapping(address => uint256) public userLockPeriod */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/AlvaraDao.sol\":452:501  mapping(address => uint256) public userLockPeriod */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AlvaraDao.sol\":961:1389  function initialize(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/AlvaraDao.sol\":402:420  IERC20 public ALVA */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      sload(0x00)\n      tag_34\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1123:1155   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1105:1156   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1093:1095   */\n      0x20\n        /* \"#utility.yul\":1078:1096   */\n      add\n        /* \"contracts/AlvaraDao.sol\":402:420  IERC20 public ALVA */\n      tag_26\n        /* \"#utility.yul\":944:1162   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":507:555  mapping(address => bool) public blackListAddress */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_40:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":1332:1346   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1325:1347   */\n      iszero\n        /* \"#utility.yul\":1307:1348   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1295:1297   */\n      0x20\n        /* \"#utility.yul\":1280:1298   */\n      add\n        /* \"contracts/AlvaraDao.sol\":507:555  mapping(address => bool) public blackListAddress */\n      tag_26\n        /* \"#utility.yul\":1167:1354   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_6:\n      tag_29\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      revert(0x00, 0x00)\n    tag_48:\n      pop\n      tag_22\n      tag_50\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":2201:2747  function leave(uint256 _share) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      revert(0x00, 0x00)\n    tag_53:\n      pop\n      tag_29\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":426:445  IERC20 public xALVA */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      revert(0x00, 0x00)\n    tag_58:\n      pop\n      sload(0x01)\n      tag_34\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      revert(0x00, 0x00)\n    tag_62:\n      pop\n      tag_29\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump(tag_34)\n        /* \"contracts/AlvaraDao.sol\":3228:3402  function updateLockPeriod(uint256 _lockedPeriod) external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      revert(0x00, 0x00)\n    tag_70:\n      pop\n      tag_29\n      tag_72\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":1455:2146  function enter(uint256 _amount) public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n      pop\n      tag_29\n      tag_76\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      revert(0x00, 0x00)\n    tag_78:\n      pop\n      tag_79\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_79:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":562:589  uint256 public lockedPeriod */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      revert(0x00, 0x00)\n    tag_83:\n      pop\n      tag_22\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/AlvaraDao.sol\":2951:3196  function blackListUser(address _user, bool _status) external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      revert(0x00, 0x00)\n    tag_87:\n      pop\n      tag_29\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_29\n      tag_94\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":961:1389  function initialize(... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0xff\n      shl(0x40, 0x01)\n      dup3\n      div\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_99\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_100\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_101\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_103:\n        /* \"contracts/AlvaraDao.sol\":1094:1120  __Ownable_init(msg.sender) */\n      tag_105\n        /* \"contracts/AlvaraDao.sol\":1109:1119  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":1094:1108  __Ownable_init */\n      tag_106\n        /* \"contracts/AlvaraDao.sol\":1094:1120  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/AlvaraDao.sol\":1130:1154  __UUPSUpgradeable_init() */\n      tag_107\n        /* \"contracts/AlvaraDao.sol\":1130:1152  __UUPSUpgradeable_init */\n      tag_108\n        /* \"contracts/AlvaraDao.sol\":1130:1154  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1173:1192  _alva != address(0) */\n      dup9\n      and\n        /* \"contracts/AlvaraDao.sol\":1165:1217  require(_alva != address(0), \"Invalid alva address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4203:4205   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":1165:1217  require(_alva != address(0), \"Invalid alva address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4185:4206   */\n      mstore\n        /* \"#utility.yul\":4242:4244   */\n      0x14\n        /* \"#utility.yul\":4222:4240   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4215:4245   */\n      mstore\n      shl(0x60, 0x496e76616c696420616c76612061646472657373)\n        /* \"#utility.yul\":4261:4279   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4254:4304   */\n      mstore\n        /* \"#utility.yul\":4321:4339   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":1165:1217  require(_alva != address(0), \"Invalid alva address\") */\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1235:1255  _xalva != address(0) */\n      dup8\n      and\n        /* \"contracts/AlvaraDao.sol\":1227:1281  require(_xalva != address(0), \"Invalid xALVA address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4552:4554   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":1227:1281  require(_xalva != address(0), \"Invalid xALVA address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4534:4555   */\n      mstore\n        /* \"#utility.yul\":4591:4593   */\n      0x15\n        /* \"#utility.yul\":4571:4589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4564:4594   */\n      mstore\n      shl(0x58, 0x496e76616c69642078414c56412061646472657373)\n        /* \"#utility.yul\":4610:4628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4603:4654   */\n      mstore\n        /* \"#utility.yul\":4671:4689   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":1227:1281  require(_xalva != address(0), \"Invalid xALVA address\") */\n      tag_110\n        /* \"#utility.yul\":4350:4695   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1227:1281  require(_xalva != address(0), \"Invalid xALVA address\") */\n    tag_112:\n        /* \"contracts/AlvaraDao.sol\":1292:1296  ALVA */\n      0x00\n        /* \"contracts/AlvaraDao.sol\":1292:1312  ALVA = IERC20(_alva) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup12\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n      0x01\n        /* \"contracts/AlvaraDao.sol\":1322:1344  xALVA = IERC20(_xalva) */\n      dup1\n      sload\n      swap3\n      dup11\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/AlvaraDao.sol\":1354:1366  lockedPeriod */\n      0x04\n        /* \"contracts/AlvaraDao.sol\":1354:1382  lockedPeriod = _lockedPeriod */\n      dup7\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":4853:4903   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":4841:4843   */\n      0x20\n        /* \"#utility.yul\":4826:4844   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AlvaraDao.sol\":961:1389  function initialize(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_125\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_127:\n      pop\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AlvaraDao.sol\":2201:2747  function leave(uint256 _share) public {... */\n    tag_57:\n        /* \"contracts/AlvaraDao.sol\":2274:2284  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":2257:2285  blackListAddress[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2257:2273  blackListAddress */\n      0x03\n        /* \"contracts/AlvaraDao.sol\":2257:2285  blackListAddress[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/AlvaraDao.sol\":2257:2293  blackListAddress[msg.sender] != true */\n      iszero\n      iszero\n        /* \"contracts/AlvaraDao.sol\":2257:2285  blackListAddress[msg.sender] */\n      0x01\n        /* \"contracts/AlvaraDao.sol\":2257:2293  blackListAddress[msg.sender] != true */\n      sub\n        /* \"contracts/AlvaraDao.sol\":2249:2314  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5116:5118   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":2249:2314  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5098:5119   */\n      mstore\n        /* \"#utility.yul\":5155:5157   */\n      0x10\n        /* \"#utility.yul\":5135:5153   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5128:5158   */\n      mstore\n      shl(0x81, 0x213630b1b5a634b9ba32b2102ab9b2b9)\n        /* \"#utility.yul\":5174:5192   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5167:5213   */\n      mstore\n        /* \"#utility.yul\":5230:5248   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":2249:2314  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      tag_110\n        /* \"#utility.yul\":4914:5254   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":2249:2314  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n    tag_131:\n        /* \"contracts/AlvaraDao.sol\":2394:2406  lockedPeriod */\n      sload(0x04)\n        /* \"contracts/AlvaraDao.sol\":2380:2390  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":2365:2391  userLockPeriod[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2365:2379  userLockPeriod */\n      0x02\n        /* \"contracts/AlvaraDao.sol\":2365:2391  userLockPeriod[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/AlvaraDao.sol\":2365:2406  userLockPeriod[msg.sender] + lockedPeriod */\n      tag_134\n      swap2\n        /* \"contracts/AlvaraDao.sol\":2394:2406  lockedPeriod */\n      swap1\n        /* \"contracts/AlvaraDao.sol\":2365:2406  userLockPeriod[msg.sender] + lockedPeriod */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/AlvaraDao.sol\":2345:2360  block.timestamp */\n      timestamp\n        /* \"contracts/AlvaraDao.sol\":2345:2407  block.timestamp >= (userLockPeriod[msg.sender] + lockedPeriod) */\n      lt\n      iszero\n        /* \"contracts/AlvaraDao.sol\":2324:2448  require(... */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5723:5725   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":2324:2448  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5705:5726   */\n      mstore\n        /* \"#utility.yul\":5762:5764   */\n      0x0f\n        /* \"#utility.yul\":5742:5760   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5735:5765   */\n      mstore\n      shl(0x88, 0x43616e206e6f7420756e5374616b65)\n        /* \"#utility.yul\":5781:5799   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5774:5819   */\n      mstore\n        /* \"#utility.yul\":5836:5854   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":2324:2448  require(... */\n      tag_110\n        /* \"#utility.yul\":5521:5860   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":2324:2448  require(... */\n    tag_136:\n        /* \"contracts/AlvaraDao.sol\":2480:2485  xALVA */\n      sload(0x01)\n        /* \"contracts/AlvaraDao.sol\":2480:2499  xALVA.totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/AlvaraDao.sol\":2458:2477  uint256 totalShares */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":2480:2485  xALVA */\n      and\n      swap2\n        /* \"contracts/AlvaraDao.sol\":2480:2497  xALVA.totalSupply */\n      0x18160ddd\n      swap2\n        /* \"contracts/AlvaraDao.sol\":2480:2499  xALVA.totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/AlvaraDao.sol\":2480:2485  xALVA */\n      dup7\n        /* \"contracts/AlvaraDao.sol\":2480:2499  xALVA.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"contracts/AlvaraDao.sol\":2509:2527  uint256 _userShare */\n      0x00\n        /* \"contracts/AlvaraDao.sol\":2540:2544  ALVA */\n      dup1\n      sload\n        /* \"contracts/AlvaraDao.sol\":2540:2569  ALVA.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2563:2567  this */\n      address\n        /* \"contracts/AlvaraDao.sol\":2540:2569  ALVA.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1105:1156   */\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2458:2499  uint256 totalShares = xALVA.totalSupply() */\n      swap3\n      swap4\n      pop\n        /* \"contracts/AlvaraDao.sol\":2509:2527  uint256 _userShare */\n      swap1\n      swap2\n        /* \"contracts/AlvaraDao.sol\":2458:2499  uint256 totalShares = xALVA.totalSupply() */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":2540:2544  ALVA */\n      and\n      swap1\n        /* \"contracts/AlvaraDao.sol\":2540:2554  ALVA.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1078:1096   */\n      0x24\n      add\n        /* \"contracts/AlvaraDao.sol\":2540:2569  ALVA.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_146:\n        /* \"contracts/AlvaraDao.sol\":2531:2569  _share * ALVA.balanceOf(address(this)) */\n      tag_147\n      swap1\n        /* \"contracts/AlvaraDao.sol\":2531:2537  _share */\n      dup6\n        /* \"contracts/AlvaraDao.sol\":2531:2569  _share * ALVA.balanceOf(address(this)) */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"contracts/AlvaraDao.sol\":2530:2596  (_share * ALVA.balanceOf(address(this))) /... */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"contracts/AlvaraDao.sol\":2606:2611  xALVA */\n      sload(0x01)\n        /* \"contracts/AlvaraDao.sol\":2509:2596  uint256 _userShare = (_share * ALVA.balanceOf(address(this))) /... */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":2606:2611  xALVA */\n      and\n        /* \"contracts/AlvaraDao.sol\":2606:2620  xALVA.burnFrom */\n      0x79cc6790\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":2606:2642  xALVA.burnFrom(_msgSender(), _share) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6641:6673   */\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":2606:2642  xALVA.burnFrom(_msgSender(), _share) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6623:6674   */\n      mstore\n        /* \"#utility.yul\":6690:6708   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6683:6717   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":6596:6614   */\n      0x44\n      add\n        /* \"contracts/AlvaraDao.sol\":2606:2642  xALVA.burnFrom(_msgSender(), _share) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      revert(0x00, 0x00)\n    tag_155:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n        /* \"contracts/AlvaraDao.sol\":2652:2656  ALVA */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      swap2\n      pop\n        /* \"contracts/AlvaraDao.sol\":2652:2665  ALVA.transfer */\n      0xa9059cbb\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":2652:2691  ALVA.transfer(_msgSender(), _userShare) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6641:6673   */\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":2652:2691  ALVA.transfer(_msgSender(), _userShare) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6623:6674   */\n      mstore\n        /* \"#utility.yul\":6690:6708   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6683:6717   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6596:6614   */\n      0x44\n      add\n        /* \"contracts/AlvaraDao.sol\":2652:2691  ALVA.transfer(_msgSender(), _userShare) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      pop\n        /* \"contracts/AlvaraDao.sol\":2707:2740  Unstake(_msgSender(), _userShare) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AlvaraDao.sol\":2707:2740  Unstake(_msgSender(), _userShare) */\n      0x85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/AlvaraDao.sol\":2707:2740  Unstake(_msgSender(), _userShare) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AlvaraDao.sol\":2239:2747  {... */\n      pop\n      pop\n        /* \"contracts/AlvaraDao.sol\":2201:2747  function leave(uint256 _share) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_170\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/AlvaraDao.sol\":3228:3402  function updateLockPeriod(uint256 _lockedPeriod) external onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/AlvaraDao.sol\":3328:3340  lockedPeriod */\n      sload(0x04)\n        /* \"contracts/AlvaraDao.sol\":3311:3356  UpdateLockPeriod(lockedPeriod, _lockedPeriod) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7152:7177   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":7208:7210   */\n      0x20\n        /* \"#utility.yul\":7193:7211   */\n      dup3\n      add\n        /* \"#utility.yul\":7186:7220   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/AlvaraDao.sol\":3311:3356  UpdateLockPeriod(lockedPeriod, _lockedPeriod) */\n      0xf814eafa160e3546fc1ea6b8939a578ef5f64d31e04888bcd82e8cd9f9ec2909\n      swap2\n        /* \"#utility.yul\":7125:7143   */\n      add\n        /* \"contracts/AlvaraDao.sol\":3311:3356  UpdateLockPeriod(lockedPeriod, _lockedPeriod) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AlvaraDao.sol\":3367:3379  lockedPeriod */\n      0x04\n        /* \"contracts/AlvaraDao.sol\":3367:3395  lockedPeriod = _lockedPeriod */\n      sstore\n        /* \"contracts/AlvaraDao.sol\":3228:3402  function updateLockPeriod(uint256 _lockedPeriod) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/AlvaraDao.sol\":1455:2146  function enter(uint256 _amount) public {... */\n    tag_77:\n        /* \"contracts/AlvaraDao.sol\":1529:1539  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":1512:1540  blackListAddress[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":1512:1528  blackListAddress */\n      0x03\n        /* \"contracts/AlvaraDao.sol\":1512:1540  blackListAddress[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/AlvaraDao.sol\":1512:1548  blackListAddress[msg.sender] != true */\n      iszero\n      iszero\n        /* \"contracts/AlvaraDao.sol\":1512:1540  blackListAddress[msg.sender] */\n      0x01\n        /* \"contracts/AlvaraDao.sol\":1512:1548  blackListAddress[msg.sender] != true */\n      sub\n        /* \"contracts/AlvaraDao.sol\":1504:1569  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5116:5118   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":1504:1569  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5098:5119   */\n      mstore\n        /* \"#utility.yul\":5155:5157   */\n      0x10\n        /* \"#utility.yul\":5135:5153   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5128:5158   */\n      mstore\n      shl(0x81, 0x213630b1b5a634b9ba32b2102ab9b2b9)\n        /* \"#utility.yul\":5174:5192   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5167:5213   */\n      mstore\n        /* \"#utility.yul\":5230:5248   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":1504:1569  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      tag_110\n        /* \"#utility.yul\":4914:5254   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1504:1569  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n    tag_181:\n        /* \"contracts/AlvaraDao.sol\":1579:1596  uint256 totalAlva */\n      0x00\n        /* \"contracts/AlvaraDao.sol\":1599:1603  ALVA */\n      dup1\n      sload\n        /* \"contracts/AlvaraDao.sol\":1599:1628  ALVA.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":1622:1626  this */\n      address\n        /* \"contracts/AlvaraDao.sol\":1599:1628  ALVA.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1105:1156   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1599:1603  ALVA */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AlvaraDao.sol\":1599:1613  ALVA.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1078:1096   */\n      0x24\n      add\n        /* \"contracts/AlvaraDao.sol\":1599:1628  ALVA.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_186:\n        /* \"contracts/AlvaraDao.sol\":1579:1628  uint256 totalAlva = ALVA.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/AlvaraDao.sol\":1638:1657  uint256 totalShares */\n      0x00\n        /* \"contracts/AlvaraDao.sol\":1660:1665  xALVA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1660:1677  xALVA.totalSupply */\n      and\n      0x18160ddd\n        /* \"contracts/AlvaraDao.sol\":1660:1679  xALVA.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_189:\n        /* \"contracts/AlvaraDao.sol\":1638:1679  uint256 totalShares = xALVA.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/AlvaraDao.sol\":1693:1709  totalShares == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"contracts/AlvaraDao.sol\":1693:1727  totalShares == 0 || totalAlva == 0 */\n      tag_190\n      jumpi\n      pop\n        /* \"contracts/AlvaraDao.sol\":1713:1727  totalAlva == 0 */\n      dup2\n      iszero\n        /* \"contracts/AlvaraDao.sol\":1693:1727  totalShares == 0 || totalAlva == 0 */\n    tag_190:\n        /* \"contracts/AlvaraDao.sol\":1689:2021  if (totalShares == 0 || totalAlva == 0) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"contracts/AlvaraDao.sol\":1743:1748  xALVA */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/AlvaraDao.sol\":1743:1753  xALVA.mint */\n      0x40c10f19\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":1743:1776  xALVA.mint(_msgSender(), _amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6641:6673   */\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":1743:1776  xALVA.mint(_msgSender(), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6623:6674   */\n      mstore\n        /* \"#utility.yul\":6690:6708   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6683:6717   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":6596:6614   */\n      0x44\n      add\n        /* \"contracts/AlvaraDao.sol\":1743:1776  xALVA.mint(_msgSender(), _amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      revert(0x00, 0x00)\n    tag_194:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AlvaraDao.sol\":1801:1813  _msgSender() */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1801:1813  _msgSender() */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1795:1823  Stake(_msgSender(), _amount) */\n      and\n      0xebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a\n        /* \"contracts/AlvaraDao.sol\":1815:1822  _amount */\n      dup5\n        /* \"contracts/AlvaraDao.sol\":1795:1823  Stake(_msgSender(), _amount) */\n      mload(0x40)\n      tag_198\n      swap2\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1795:1823  Stake(_msgSender(), _amount) */\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AlvaraDao.sol\":1689:2021  if (totalShares == 0 || totalAlva == 0) {... */\n      jump(tag_199)\n    tag_191:\n        /* \"contracts/AlvaraDao.sol\":1854:1872  uint256 _userShare */\n      0x00\n        /* \"contracts/AlvaraDao.sol\":1901:1910  totalAlva */\n      dup3\n        /* \"contracts/AlvaraDao.sol\":1876:1897  _amount * totalShares */\n      tag_200\n        /* \"contracts/AlvaraDao.sol\":1886:1897  totalShares */\n      dup4\n        /* \"contracts/AlvaraDao.sol\":1876:1883  _amount */\n      dup7\n        /* \"contracts/AlvaraDao.sol\":1876:1897  _amount * totalShares */\n      tag_148\n      jump\t// in\n    tag_200:\n        /* \"contracts/AlvaraDao.sol\":1875:1910  (_amount * totalShares) / totalAlva */\n      tag_201\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_201:\n        /* \"contracts/AlvaraDao.sol\":1924:1929  xALVA */\n      sload(0x01)\n        /* \"contracts/AlvaraDao.sol\":1854:1910  uint256 _userShare = (_amount * totalShares) / totalAlva */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1924:1929  xALVA */\n      and\n        /* \"contracts/AlvaraDao.sol\":1924:1934  xALVA.mint */\n      0x40c10f19\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":1924:1960  xALVA.mint(_msgSender(), _userShare) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6641:6673   */\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":1924:1960  xALVA.mint(_msgSender(), _userShare) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6623:6674   */\n      mstore\n        /* \"#utility.yul\":6690:6708   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6683:6717   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6596:6614   */\n      0x44\n      add\n        /* \"contracts/AlvaraDao.sol\":1924:1960  xALVA.mint(_msgSender(), _userShare) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      revert(0x00, 0x00)\n    tag_204:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AlvaraDao.sol\":1985:1997  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1985:1997  _msgSender() */\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1979:2010  Stake(_msgSender(), _userShare) */\n      and\n      0xebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a\n        /* \"contracts/AlvaraDao.sol\":1999:2009  _userShare */\n      dup3\n        /* \"contracts/AlvaraDao.sol\":1979:2010  Stake(_msgSender(), _userShare) */\n      mload(0x40)\n      tag_208\n      swap2\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1979:2010  Stake(_msgSender(), _userShare) */\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AlvaraDao.sol\":1840:2021  {... */\n      pop\n        /* \"contracts/AlvaraDao.sol\":1689:2021  if (totalShares == 0 || totalAlva == 0) {... */\n    tag_199:\n        /* \"contracts/AlvaraDao.sol\":2045:2055  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":2030:2056  userLockPeriod[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2030:2044  userLockPeriod */\n      0x02\n        /* \"contracts/AlvaraDao.sol\":2030:2056  userLockPeriod[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/AlvaraDao.sol\":2059:2074  block.timestamp */\n      timestamp\n        /* \"contracts/AlvaraDao.sol\":2030:2074  userLockPeriod[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/AlvaraDao.sol\":2084:2088  ALVA */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/AlvaraDao.sol\":2084:2101  ALVA.transferFrom */\n      0x23b872dd\n        /* \"contracts/AlvaraDao.sol\":2102:2114  _msgSender() */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/AlvaraDao.sol\":2102:2114  _msgSender() */\n    tag_209:\n        /* \"contracts/AlvaraDao.sol\":2084:2139  ALVA.transferFrom(_msgSender(), address(this), _amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7451:7483   */\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":2084:2139  ALVA.transferFrom(_msgSender(), address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7433:7484   */\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2124:2128  this */\n      address\n        /* \"#utility.yul\":7500:7518   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7493:7553   */\n      mstore\n        /* \"#utility.yul\":7569:7587   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7562:7596   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":7406:7424   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":2084:2139  ALVA.transferFrom(_msgSender(), address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_214:\n      pop\n        /* \"contracts/AlvaraDao.sol\":1494:2146  {... */\n      pop\n      pop\n        /* \"contracts/AlvaraDao.sol\":1455:2146  function enter(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/AlvaraDao.sol\":2951:3196  function blackListUser(address _user, bool _status) external onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":3040:3063  blackListAddress[_user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":3040:3056  blackListAddress */\n      0x03\n        /* \"contracts/AlvaraDao.sol\":3040:3063  blackListAddress[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/AlvaraDao.sol\":3040:3074  blackListAddress[_user] != _status */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/AlvaraDao.sol\":3040:3063  blackListAddress[_user] */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":3040:3074  blackListAddress[_user] != _status */\n      iszero\n      iszero\n      sub\n        /* \"contracts/AlvaraDao.sol\":3032:3101  require(blackListAddress[_user] != _status, \"Already in same status\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7809:7811   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":3032:3101  require(blackListAddress[_user] != _status, \"Already in same status\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7791:7812   */\n      mstore\n        /* \"#utility.yul\":7848:7850   */\n      0x16\n        /* \"#utility.yul\":7828:7846   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7821:7851   */\n      mstore\n      shl(0x50, 0x416c726561647920696e2073616d6520737461747573)\n        /* \"#utility.yul\":7867:7885   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7860:7912   */\n      mstore\n        /* \"#utility.yul\":7929:7947   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":3032:3101  require(blackListAddress[_user] != _status, \"Already in same status\") */\n      tag_110\n        /* \"#utility.yul\":7607:7953   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":3032:3101  require(blackListAddress[_user] != _status, \"Already in same status\") */\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":3111:3134  blackListAddress[_user] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":3111:3127  blackListAddress */\n      0x03\n        /* \"contracts/AlvaraDao.sol\":3111:3134  blackListAddress[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/AlvaraDao.sol\":3111:3144  blackListAddress[_user] = _status */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/AlvaraDao.sol\":3160:3189  BlackListUser(_user, _status) */\n      dup3\n      mload\n        /* \"#utility.yul\":8126:8177   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":8193:8211   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":8186:8236   */\n      mstore\n        /* \"contracts/AlvaraDao.sol\":3160:3189  BlackListUser(_user, _status) */\n      0x2f2ea19e5340217456e8ecb94895965ba2afa084e4a94f9fc7c315b1478243b7\n      swap2\n        /* \"#utility.yul\":8099:8117   */\n      add\n        /* \"contracts/AlvaraDao.sol\":3160:3189  BlackListUser(_user, _status) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AlvaraDao.sol\":2951:3196  function blackListUser(address _user, bool _status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1105:1156   */\n      mstore\n        /* \"#utility.yul\":1078:1096   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_110\n        /* \"#utility.yul\":944:1162   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_170\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4662  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4667:4673  __self */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n      tag_242\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4764:4770  __self */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      tag_243\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4844:4873  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/AlvaraDao.sol\":3408:3520  function _authorizeUpgrade(address newImplementation)... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6149:6166  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6181  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6183  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_250\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_251\n      swap2\n      dup2\n      add\n      swap1\n      tag_142\n      jump\t// in\n    tag_251:\n      0x01\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1123:1155   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1105:1156   */\n      mstore\n        /* \"#utility.yul\":1078:1096   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_110\n        /* \"#utility.yul\":944:1162   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_253:\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6265  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":529:554   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":502:520   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      tag_110\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6384:6401  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6403:6407  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6383  ERC1967Utils.upgradeToAndCall */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6184:6419  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5081:5085  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5096  __self */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5174:5203  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1105:1156   */\n      mstore\n        /* \"#utility.yul\":1078:1096   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_110\n        /* \"#utility.yul\":944:1162   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_290\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_291\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_261\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_294\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_124\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_297\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_299\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1123:1155   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1105:1156   */\n      mstore\n        /* \"#utility.yul\":1078:1096   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      tag_110\n        /* \"#utility.yul\":944:1162   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_302:\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_306\n      swap2\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_310\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_309)\n    tag_310:\n      0x60\n      swap2\n      pop\n    tag_309:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_311\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_312\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_317\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_318\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_319)\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_320\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_320:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1123:1155   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1105:1156   */\n      mstore\n        /* \"#utility.yul\":1078:1096   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      tag_110\n        /* \"#utility.yul\":944:1162   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_321:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:187   */\n    tag_326:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      0x00\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_332:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_24:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_334:\n        /* \"#utility.yul\":343:372   */\n      tag_319\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":565:939   */\n    tag_31:\n        /* \"#utility.yul\":642:648   */\n      0x00\n        /* \"#utility.yul\":650:656   */\n      0x00\n        /* \"#utility.yul\":658:664   */\n      0x00\n        /* \"#utility.yul\":711:713   */\n      0x60\n        /* \"#utility.yul\":699:708   */\n      dup5\n        /* \"#utility.yul\":690:697   */\n      dup7\n        /* \"#utility.yul\":686:709   */\n      sub\n        /* \"#utility.yul\":682:714   */\n      slt\n        /* \"#utility.yul\":679:731   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":727:728   */\n      0x00\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":717:729   */\n      revert\n        /* \"#utility.yul\":679:731   */\n    tag_338:\n        /* \"#utility.yul\":750:779   */\n      tag_339\n        /* \"#utility.yul\":769:778   */\n      dup5\n        /* \"#utility.yul\":750:779   */\n      tag_326\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":740:779   */\n      swap3\n      pop\n        /* \"#utility.yul\":798:836   */\n      tag_340\n        /* \"#utility.yul\":832:834   */\n      0x20\n        /* \"#utility.yul\":821:830   */\n      dup6\n        /* \"#utility.yul\":817:835   */\n      add\n        /* \"#utility.yul\":798:836   */\n      tag_326\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":565:939   */\n      swap3\n      swap6\n        /* \"#utility.yul\":788:836   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":905:907   */\n      0x40\n        /* \"#utility.yul\":890:908   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":877:909   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":565:939   */\n      jump\t// out\n        /* \"#utility.yul\":1359:1486   */\n    tag_327:\n        /* \"#utility.yul\":1420:1430   */\n      0x4e487b71\n        /* \"#utility.yul\":1415:1418   */\n      0xe0\n        /* \"#utility.yul\":1411:1431   */\n      shl\n        /* \"#utility.yul\":1408:1409   */\n      0x00\n        /* \"#utility.yul\":1401:1432   */\n      mstore\n        /* \"#utility.yul\":1451:1455   */\n      0x41\n        /* \"#utility.yul\":1448:1449   */\n      0x04\n        /* \"#utility.yul\":1441:1456   */\n      mstore\n        /* \"#utility.yul\":1475:1479   */\n      0x24\n        /* \"#utility.yul\":1472:1473   */\n      0x00\n        /* \"#utility.yul\":1465:1480   */\n      revert\n        /* \"#utility.yul\":1491:2509   */\n    tag_46:\n        /* \"#utility.yul\":1568:1574   */\n      0x00\n        /* \"#utility.yul\":1576:1582   */\n      0x00\n        /* \"#utility.yul\":1629:1631   */\n      0x40\n        /* \"#utility.yul\":1617:1626   */\n      dup4\n        /* \"#utility.yul\":1608:1615   */\n      dup6\n        /* \"#utility.yul\":1604:1627   */\n      sub\n        /* \"#utility.yul\":1600:1632   */\n      slt\n        /* \"#utility.yul\":1597:1649   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":1645:1646   */\n      0x00\n        /* \"#utility.yul\":1642:1643   */\n      0x00\n        /* \"#utility.yul\":1635:1647   */\n      revert\n        /* \"#utility.yul\":1597:1649   */\n    tag_345:\n        /* \"#utility.yul\":1668:1697   */\n      tag_346\n        /* \"#utility.yul\":1687:1696   */\n      dup4\n        /* \"#utility.yul\":1668:1697   */\n      tag_326\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1658:1697   */\n      swap2\n      pop\n        /* \"#utility.yul\":1748:1750   */\n      0x20\n        /* \"#utility.yul\":1737:1746   */\n      dup4\n        /* \"#utility.yul\":1733:1751   */\n      add\n        /* \"#utility.yul\":1720:1752   */\n      calldataload\n        /* \"#utility.yul\":1775:1793   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1767:1773   */\n      dup2\n        /* \"#utility.yul\":1764:1794   */\n      gt\n        /* \"#utility.yul\":1761:1811   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":1807:1808   */\n      0x00\n        /* \"#utility.yul\":1804:1805   */\n      0x00\n        /* \"#utility.yul\":1797:1809   */\n      revert\n        /* \"#utility.yul\":1761:1811   */\n    tag_347:\n        /* \"#utility.yul\":1830:1852   */\n      dup4\n      add\n        /* \"#utility.yul\":1883:1887   */\n      0x1f\n        /* \"#utility.yul\":1875:1888   */\n      dup2\n      add\n        /* \"#utility.yul\":1871:1898   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1861:1916   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1902:1914   */\n      revert\n        /* \"#utility.yul\":1861:1916   */\n    tag_348:\n        /* \"#utility.yul\":1952:1954   */\n      dup1\n        /* \"#utility.yul\":1939:1955   */\n      calldataload\n        /* \"#utility.yul\":1978:1996   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1970:1976   */\n      dup2\n        /* \"#utility.yul\":1967:1997   */\n      gt\n        /* \"#utility.yul\":1964:2020   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":2000:2018   */\n      tag_350\n      tag_327\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2049:2051   */\n      0x40\n        /* \"#utility.yul\":2043:2052   */\n      mload\n        /* \"#utility.yul\":2141:2143   */\n      0x1f\n        /* \"#utility.yul\":2103:2120   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2099:2130   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2132:2134   */\n      0x3f\n        /* \"#utility.yul\":2095:2135   */\n      add\n        /* \"#utility.yul\":2091:2145   */\n      and\n        /* \"#utility.yul\":2079:2146   */\n      dup2\n      add\n        /* \"#utility.yul\":2176:2194   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2161:2195   */\n      dup2\n      gt\n        /* \"#utility.yul\":2197:2219   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2158:2220   */\n      or\n        /* \"#utility.yul\":2155:2243   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2223:2241   */\n      tag_352\n      tag_327\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2259:2261   */\n      0x40\n        /* \"#utility.yul\":2252:2274   */\n      mstore\n        /* \"#utility.yul\":2283:2305   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":2324:2339   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2320:2344   */\n      add\n        /* \"#utility.yul\":2317:2354   */\n      dup8\n      lt\n        /* \"#utility.yul\":2314:2371   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":2367:2368   */\n      0x00\n        /* \"#utility.yul\":2364:2365   */\n      0x00\n        /* \"#utility.yul\":2357:2369   */\n      revert\n        /* \"#utility.yul\":2314:2371   */\n    tag_353:\n        /* \"#utility.yul\":2423:2429   */\n      dup2\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2414:2416   */\n      dup5\n        /* \"#utility.yul\":2410:2421   */\n      add\n        /* \"#utility.yul\":2405:2407   */\n      0x20\n        /* \"#utility.yul\":2397:2403   */\n      dup4\n        /* \"#utility.yul\":2393:2408   */\n      add\n        /* \"#utility.yul\":2380:2430   */\n      calldatacopy\n        /* \"#utility.yul\":2476:2477   */\n      0x00\n        /* \"#utility.yul\":2471:2473   */\n      0x20\n        /* \"#utility.yul\":2462:2468   */\n      dup4\n        /* \"#utility.yul\":2454:2460   */\n      dup4\n        /* \"#utility.yul\":2450:2469   */\n      add\n        /* \"#utility.yul\":2446:2474   */\n      add\n        /* \"#utility.yul\":2439:2478   */\n      mstore\n        /* \"#utility.yul\":2497:2503   */\n      dup1\n        /* \"#utility.yul\":2487:2503   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1491:2509   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2696:2922   */\n    tag_56:\n        /* \"#utility.yul\":2755:2761   */\n      0x00\n        /* \"#utility.yul\":2808:2810   */\n      0x20\n        /* \"#utility.yul\":2796:2805   */\n      dup3\n        /* \"#utility.yul\":2787:2794   */\n      dup5\n        /* \"#utility.yul\":2783:2806   */\n      sub\n        /* \"#utility.yul\":2779:2811   */\n      slt\n        /* \"#utility.yul\":2776:2828   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":2824:2825   */\n      0x00\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2814:2826   */\n      revert\n        /* \"#utility.yul\":2776:2828   */\n    tag_356:\n      pop\n        /* \"#utility.yul\":2869:2892   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2696:2922   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3135:3553   */\n    tag_82:\n        /* \"#utility.yul\":3284:3286   */\n      0x20\n        /* \"#utility.yul\":3273:3282   */\n      dup2\n        /* \"#utility.yul\":3266:3287   */\n      mstore\n        /* \"#utility.yul\":3247:3251   */\n      0x00\n        /* \"#utility.yul\":3316:3322   */\n      dup3\n        /* \"#utility.yul\":3310:3323   */\n      mload\n        /* \"#utility.yul\":3359:3365   */\n      dup1\n        /* \"#utility.yul\":3354:3356   */\n      0x20\n        /* \"#utility.yul\":3343:3352   */\n      dup5\n        /* \"#utility.yul\":3339:3357   */\n      add\n        /* \"#utility.yul\":3332:3366   */\n      mstore\n        /* \"#utility.yul\":3418:3424   */\n      dup1\n        /* \"#utility.yul\":3413:3415   */\n      0x20\n        /* \"#utility.yul\":3405:3411   */\n      dup6\n        /* \"#utility.yul\":3401:3416   */\n      add\n        /* \"#utility.yul\":3396:3398   */\n      0x40\n        /* \"#utility.yul\":3385:3394   */\n      dup6\n        /* \"#utility.yul\":3381:3399   */\n      add\n        /* \"#utility.yul\":3375:3425   */\n      mcopy\n        /* \"#utility.yul\":3474:3475   */\n      0x00\n        /* \"#utility.yul\":3469:3471   */\n      0x40\n        /* \"#utility.yul\":3460:3466   */\n      dup3\n        /* \"#utility.yul\":3449:3458   */\n      dup6\n        /* \"#utility.yul\":3445:3467   */\n      add\n        /* \"#utility.yul\":3441:3472   */\n      add\n        /* \"#utility.yul\":3434:3476   */\n      mstore\n        /* \"#utility.yul\":3544:3546   */\n      0x40\n        /* \"#utility.yul\":3537:3539   */\n      0x1f\n        /* \"#utility.yul\":3533:3540   */\n      not\n        /* \"#utility.yul\":3528:3530   */\n      0x1f\n        /* \"#utility.yul\":3520:3526   */\n      dup4\n        /* \"#utility.yul\":3516:3531   */\n      add\n        /* \"#utility.yul\":3512:3541   */\n      and\n        /* \"#utility.yul\":3501:3510   */\n      dup5\n        /* \"#utility.yul\":3497:3542   */\n      add\n        /* \"#utility.yul\":3493:3547   */\n      add\n        /* \"#utility.yul\":3485:3547   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3135:3553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3558:3676   */\n    tag_328:\n        /* \"#utility.yul\":3644:3649   */\n      dup1\n        /* \"#utility.yul\":3637:3650   */\n      iszero\n        /* \"#utility.yul\":3630:3651   */\n      iszero\n        /* \"#utility.yul\":3623:3628   */\n      dup2\n        /* \"#utility.yul\":3620:3652   */\n      eq\n        /* \"#utility.yul\":3610:3670   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":3666:3667   */\n      0x00\n        /* \"#utility.yul\":3663:3664   */\n      0x00\n        /* \"#utility.yul\":3656:3668   */\n      revert\n        /* \"#utility.yul\":3681:3996   */\n    tag_90:\n        /* \"#utility.yul\":3746:3752   */\n      0x00\n        /* \"#utility.yul\":3754:3760   */\n      0x00\n        /* \"#utility.yul\":3807:3809   */\n      0x40\n        /* \"#utility.yul\":3795:3804   */\n      dup4\n        /* \"#utility.yul\":3786:3793   */\n      dup6\n        /* \"#utility.yul\":3782:3805   */\n      sub\n        /* \"#utility.yul\":3778:3810   */\n      slt\n        /* \"#utility.yul\":3775:3827   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":3823:3824   */\n      0x00\n        /* \"#utility.yul\":3820:3821   */\n      0x00\n        /* \"#utility.yul\":3813:3825   */\n      revert\n        /* \"#utility.yul\":3775:3827   */\n    tag_362:\n        /* \"#utility.yul\":3846:3875   */\n      tag_363\n        /* \"#utility.yul\":3865:3874   */\n      dup4\n        /* \"#utility.yul\":3846:3875   */\n      tag_326\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3836:3875   */\n      swap2\n      pop\n        /* \"#utility.yul\":3925:3927   */\n      0x20\n        /* \"#utility.yul\":3914:3923   */\n      dup4\n        /* \"#utility.yul\":3910:3928   */\n      add\n        /* \"#utility.yul\":3897:3929   */\n      calldataload\n        /* \"#utility.yul\":3938:3966   */\n      tag_364\n        /* \"#utility.yul\":3960:3965   */\n      dup2\n        /* \"#utility.yul\":3938:3966   */\n      tag_328\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3985:3990   */\n      dup1\n        /* \"#utility.yul\":3975:3990   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3681:3996   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5259:5386   */\n    tag_329:\n        /* \"#utility.yul\":5320:5330   */\n      0x4e487b71\n        /* \"#utility.yul\":5315:5318   */\n      0xe0\n        /* \"#utility.yul\":5311:5331   */\n      shl\n        /* \"#utility.yul\":5308:5309   */\n      0x00\n        /* \"#utility.yul\":5301:5332   */\n      mstore\n        /* \"#utility.yul\":5351:5355   */\n      0x11\n        /* \"#utility.yul\":5348:5349   */\n      0x04\n        /* \"#utility.yul\":5341:5356   */\n      mstore\n        /* \"#utility.yul\":5375:5379   */\n      0x24\n        /* \"#utility.yul\":5372:5373   */\n      0x00\n        /* \"#utility.yul\":5365:5380   */\n      revert\n        /* \"#utility.yul\":5391:5516   */\n    tag_135:\n        /* \"#utility.yul\":5456:5465   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5477:5487   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5474:5510   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":5490:5508   */\n      tag_230\n      tag_329\n      jump\t// in\n        /* \"#utility.yul\":5865:6049   */\n    tag_142:\n        /* \"#utility.yul\":5935:5941   */\n      0x00\n        /* \"#utility.yul\":5988:5990   */\n      0x20\n        /* \"#utility.yul\":5976:5985   */\n      dup3\n        /* \"#utility.yul\":5967:5974   */\n      dup5\n        /* \"#utility.yul\":5963:5986   */\n      sub\n        /* \"#utility.yul\":5959:5991   */\n      slt\n        /* \"#utility.yul\":5956:6008   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":6004:6005   */\n      0x00\n        /* \"#utility.yul\":6001:6002   */\n      0x00\n        /* \"#utility.yul\":5994:6006   */\n      revert\n        /* \"#utility.yul\":5956:6008   */\n    tag_375:\n      pop\n        /* \"#utility.yul\":6027:6043   */\n      mload\n      swap2\n        /* \"#utility.yul\":5865:6049   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6054:6222   */\n    tag_148:\n        /* \"#utility.yul\":6127:6136   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6158:6167   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6175:6190   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6169:6191   */\n      dup5\n      eq\n        /* \"#utility.yul\":6155:6192   */\n      or\n        /* \"#utility.yul\":6145:6216   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":6196:6214   */\n      tag_230\n      tag_329\n      jump\t// in\n        /* \"#utility.yul\":6227:6444   */\n    tag_150:\n        /* \"#utility.yul\":6267:6268   */\n      0x00\n        /* \"#utility.yul\":6293:6294   */\n      dup3\n        /* \"#utility.yul\":6283:6415   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6337:6347   */\n      0x4e487b71\n        /* \"#utility.yul\":6332:6335   */\n      0xe0\n        /* \"#utility.yul\":6328:6348   */\n      shl\n        /* \"#utility.yul\":6325:6326   */\n      0x00\n        /* \"#utility.yul\":6318:6349   */\n      mstore\n        /* \"#utility.yul\":6372:6376   */\n      0x12\n        /* \"#utility.yul\":6369:6370   */\n      0x04\n        /* \"#utility.yul\":6362:6377   */\n      mstore\n        /* \"#utility.yul\":6400:6404   */\n      0x24\n        /* \"#utility.yul\":6397:6398   */\n      0x00\n        /* \"#utility.yul\":6390:6405   */\n      revert\n        /* \"#utility.yul\":6283:6415   */\n    tag_380:\n      pop\n        /* \"#utility.yul\":6429:6438   */\n      div\n      swap1\n        /* \"#utility.yul\":6227:6444   */\n      jump\t// out\n        /* \"#utility.yul\":6728:6973   */\n    tag_163:\n        /* \"#utility.yul\":6795:6801   */\n      0x00\n        /* \"#utility.yul\":6848:6850   */\n      0x20\n        /* \"#utility.yul\":6836:6845   */\n      dup3\n        /* \"#utility.yul\":6827:6834   */\n      dup5\n        /* \"#utility.yul\":6823:6846   */\n      sub\n        /* \"#utility.yul\":6819:6851   */\n      slt\n        /* \"#utility.yul\":6816:6868   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":6864:6865   */\n      0x00\n        /* \"#utility.yul\":6861:6862   */\n      0x00\n        /* \"#utility.yul\":6854:6866   */\n      revert\n        /* \"#utility.yul\":6816:6868   */\n    tag_383:\n        /* \"#utility.yul\":6896:6905   */\n      dup2\n        /* \"#utility.yul\":6890:6906   */\n      mload\n        /* \"#utility.yul\":6915:6943   */\n      tag_319\n        /* \"#utility.yul\":6937:6942   */\n      dup2\n        /* \"#utility.yul\":6915:6943   */\n      tag_328\n      jump\t// in\n        /* \"#utility.yul\":8436:8737   */\n    tag_307:\n        /* \"#utility.yul\":8565:8568   */\n      0x00\n        /* \"#utility.yul\":8603:8609   */\n      dup3\n        /* \"#utility.yul\":8597:8610   */\n      mload\n        /* \"#utility.yul\":8649:8655   */\n      dup1\n        /* \"#utility.yul\":8642:8646   */\n      0x20\n        /* \"#utility.yul\":8634:8640   */\n      dup6\n        /* \"#utility.yul\":8630:8647   */\n      add\n        /* \"#utility.yul\":8625:8628   */\n      dup5\n        /* \"#utility.yul\":8619:8656   */\n      mcopy\n        /* \"#utility.yul\":8711:8712   */\n      0x00\n        /* \"#utility.yul\":8675:8691   */\n      swap3\n      add\n        /* \"#utility.yul\":8700:8713   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":8675:8691   */\n      swap2\n        /* \"#utility.yul\":8436:8737   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n\n    auxdata: 0xa264697066735822122000100df29c2b58faac25d54a04d29c37e8cf6c53916265e89da6bbc81ee526ff64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1491": {
									"entryPoint": null,
									"id": 1491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 33,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_461": {
									"entryPoint": null,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:13",
										"nodeType": "YulBlock",
										"src": "0:216:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:13",
													"nodeType": "YulBlock",
													"src": "113:101:13",
													"statements": [
														{
															"nativeSrc": "123:26:13",
															"nodeType": "YulAssignment",
															"src": "123:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:13",
																		"nodeType": "YulLiteral",
																		"src": "146:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:13"
																},
																"nativeSrc": "131:18:13",
																"nodeType": "YulFunctionCall",
																"src": "131:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:13",
																								"nodeType": "YulLiteral",
																								"src": "196:2:13",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:13",
																								"nodeType": "YulLiteral",
																								"src": "200:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:13"
																						},
																						"nativeSrc": "192:10:13",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:13",
																						"nodeType": "YulLiteral",
																						"src": "204:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:13"
																				},
																				"nativeSrc": "188:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:13"
																		},
																		"nativeSrc": "176:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:13"
																},
																"nativeSrc": "158:50:13",
																"nodeType": "YulFunctionCall",
																"src": "158:50:13"
															},
															"nativeSrc": "158:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:13",
														"nodeType": "YulTypedName",
														"src": "82:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:13",
														"nodeType": "YulTypedName",
														"src": "93:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:13",
														"nodeType": "YulTypedName",
														"src": "104:4:13",
														"type": ""
													}
												],
												"src": "14:200:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x14B2 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xD56 ADD MSTORE DUP2 DUP2 PUSH2 0xD7F ADD MSTORE PUSH2 0xEC3 ADD MSTORE PUSH2 0x14B2 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEF JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xB3D6E119 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xE0CEF1B0 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x91DB7B0D EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xA59F3E0C EQ PUSH2 0x29A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x67DFD4C9 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6AC10901 EQ PUSH2 0x20C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xC8E32D2 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x323BF9F0 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x3B0E0133 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x170 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x128 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x53F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x170 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x827 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x170 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0xBF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST PUSH2 0xCCB JUMP JUMPDEST PUSH0 PUSH2 0x352 PUSH2 0xD08 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x395 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3A3 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x3EB JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x3F4 CALLER PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x3FC PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616C76612061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642078414C56412061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x516 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x528 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x531 DUP3 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x53B DUP3 DUP3 PUSH2 0xDF7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x548 PUSH2 0xEB8 JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x145D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x213630B1B5A634B9BA32B2102AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x4 SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x43616E206E6F7420756E5374616B65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x654 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x6F1 SWAP1 DUP6 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x767 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 POP CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x82F PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x838 PUSH0 PUSH2 0xF5C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x842 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xF814EAFA160E3546FC1EA6B8939A578EF5F64D31E04888BCD82E8CD9F9EC2909 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x213630B1B5A634B9BA32B2102AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x9C7 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0xA87 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA23 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xA40 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP5 PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xB58 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA93 DUP4 DUP7 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xB14 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP3 PUSH1 0x40 MLOAD PUSH2 0xB4E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0xB7F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBCF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF3 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC01 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 ISZERO ISZERO PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO SUB PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x416C726561647920696E2073616D6520737461747573 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x2F2EA19E5340217456E8ECB94895965BA2AFA084E4A94F9FC7C315B1478243B7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xCD3 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST PUSH2 0xD05 DUP2 PUSH2 0xF5C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD3A PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xD05 DUP2 PUSH2 0xFF1 JUMP JUMPDEST PUSH2 0x838 PUSH2 0xFCC JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xDD1 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDC5 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x145D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD05 PUSH2 0xF01 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE51 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE4E SWAP2 DUP2 ADD SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x145D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 EQ PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST PUSH2 0xEB3 DUP4 DUP4 PUSH2 0xFF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xF33 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFD4 PUSH2 0x104E JUMP JUMPDEST PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD3 PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x1002 DUP3 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1046 JUMPI PUSH2 0xEB3 DUP3 DUP3 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x53B PUSH2 0x113C JUMP JUMPDEST PUSH0 PUSH2 0x1057 PUSH2 0xD08 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x145D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1133 DUP6 DUP4 DUP4 PUSH2 0x115B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1170 JUMPI PUSH2 0x116B DUP3 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x11B3 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1187 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x11CA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11B3 DUP3 PUSH2 0x11E3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1229 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1232 DUP5 PUSH2 0x11E3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1240 PUSH1 0x20 DUP6 ADD PUSH2 0x11E3 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1276 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x127F DUP4 PUSH2 0x11E3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x129A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x12AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12C4 JUMPI PUSH2 0x12C4 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12F3 JUMPI PUSH2 0x12F3 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x130A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1339 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD05 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1393 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x139C DUP4 PUSH2 0x11E3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x13AC DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD2C JUMPI PUSH2 0xD2C PUSH2 0x13B7 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD2C JUMPI PUSH2 0xD2C PUSH2 0x13B7 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1426 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11B3 DUP2 PUSH2 0x1375 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122000 LT 0xD CALLCODE SWAP13 0x2B PC STATICCALL 0xAC 0x25 0xD5 BLOBBASEFEE DIV 0xD2 SWAP13 CALLDATACOPY 0xE8 0xCF PUSH13 0x53916265E89DA6BBC81EE526FF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "323:3199:11:-:0;;;1171:4:2;1128:48;;902:53:11;;;;;;;;;-1:-1:-1;926:22:11;:20;:22::i;:::-;323:3199;;7709:422:1;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:1;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:1;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:1;-1:-1:-1;;;;;8033:33:1;;;;;8085:29;;158:50:13;;;8085:29:1;;146:2:13;131:18;8085:29:1;;;;;;;7979:146;7758:373;7709:422::o;14:200:13:-;323:3199:11;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ALVA_1446": {
									"entryPoint": null,
									"id": 1446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_486": {
									"entryPoint": null,
									"id": 486,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 3378,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 4081,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_516": {
									"entryPoint": 3395,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_1776": {
									"entryPoint": 3567,
									"id": 1776,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 4044,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1014": {
									"entryPoint": 4412,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_592": {
									"entryPoint": 3768,
									"id": 592,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 3841,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_576": {
									"entryPoint": 3403,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_461": {
									"entryPoint": 3336,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 4174,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_672": {
									"entryPoint": null,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1284": {
									"entryPoint": 4538,
									"id": 1284,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_794": {
									"entryPoint": 4199,
									"id": 794,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 3932,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_643": {
									"entryPoint": 3575,
									"id": 643,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@blackListAddress_1457": {
									"entryPoint": null,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@blackListUser_1750": {
									"entryPoint": 3065,
									"id": 1750,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@enter_1646": {
									"entryPoint": 2179,
									"id": 1646,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_1202": {
									"entryPoint": 4298,
									"id": 1202,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1342": {
									"entryPoint": null,
									"id": 1342,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1547": {
									"entryPoint": 841,
									"id": 1547,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@leave_1719": {
									"entryPoint": 1370,
									"id": 1719,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@lockedPeriod_1459": {
									"entryPoint": null,
									"id": 1459,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_534": {
									"entryPoint": 1343,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 2087,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 3275,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateLockPeriod_1767": {
									"entryPoint": 2106,
									"id": 1767,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_554": {
									"entryPoint": 1312,
									"id": 554,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_830": {
									"entryPoint": 4089,
									"id": 830,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@userLockPeriod_1453": {
									"entryPoint": null,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1242": {
									"entryPoint": 4443,
									"id": 1242,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@xALVA_1449": {
									"entryPoint": null,
									"id": 1449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 4709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1856__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5bec71c0a16c9cd7a466d8c8147fe1a528e182d277a5c381b3e448cb9518e898__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b1471e8298fb0fdee6f4979056baf840dac83498fd0403a768190450218d14c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c1bb34286905b9621b4b62da46af3cd2b17f8f35925c44cf938b33cc057917e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7d6d2814c0e538a9dfcdf30584136cd8b783d78774c3c549658170a640f9728__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4689,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8739:13",
										"nodeType": "YulBlock",
										"src": "0:8739:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:13",
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nativeSrc": "73:29:13",
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nativeSrc": "82:20:13",
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:13",
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:13",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:13",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nativeSrc": "167:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nativeSrc": "167:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:13",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:13",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nativeSrc": "146:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:13",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nativeSrc": "142:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nativeSrc": "131:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nativeSrc": "121:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nativeSrc": "114:50:13",
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nativeSrc": "111:70:13",
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:13",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:13",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nativeSrc": "262:116:13",
													"nodeType": "YulBlock",
													"src": "262:116:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:13",
																"nodeType": "YulBlock",
																"src": "308:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:13",
																					"nodeType": "YulLiteral",
																					"src": "317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:13",
																					"nodeType": "YulLiteral",
																					"src": "320:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:13"
																			},
																			"nativeSrc": "310:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:13"
																		},
																		"nativeSrc": "310:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:13"
																		},
																		"nativeSrc": "279:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:13",
																		"nodeType": "YulLiteral",
																		"src": "304:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:13"
																},
																"nativeSrc": "275:32:13",
																"nodeType": "YulFunctionCall",
																"src": "275:32:13"
															},
															"nativeSrc": "272:52:13",
															"nodeType": "YulIf",
															"src": "272:52:13"
														},
														{
															"nativeSrc": "333:39:13",
															"nodeType": "YulAssignment",
															"src": "333:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:13"
																},
																"nativeSrc": "343:29:13",
																"nodeType": "YulFunctionCall",
																"src": "343:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:13",
														"nodeType": "YulTypedName",
														"src": "228:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:13",
														"nodeType": "YulTypedName",
														"src": "239:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:13",
														"nodeType": "YulTypedName",
														"src": "251:6:13",
														"type": ""
													}
												],
												"src": "192:186:13"
											},
											{
												"body": {
													"nativeSrc": "484:76:13",
													"nodeType": "YulBlock",
													"src": "484:76:13",
													"statements": [
														{
															"nativeSrc": "494:26:13",
															"nodeType": "YulAssignment",
															"src": "494:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:2:13",
																		"nodeType": "YulLiteral",
																		"src": "517:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:13"
																},
																"nativeSrc": "502:18:13",
																"nodeType": "YulFunctionCall",
																"src": "502:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "536:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "547:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "529:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:13"
																},
																"nativeSrc": "529:25:13",
																"nodeType": "YulFunctionCall",
																"src": "529:25:13"
															},
															"nativeSrc": "529:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "529:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "383:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "453:9:13",
														"nodeType": "YulTypedName",
														"src": "453:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "464:6:13",
														"nodeType": "YulTypedName",
														"src": "464:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "475:4:13",
														"nodeType": "YulTypedName",
														"src": "475:4:13",
														"type": ""
													}
												],
												"src": "383:177:13"
											},
											{
												"body": {
													"nativeSrc": "669:270:13",
													"nodeType": "YulBlock",
													"src": "669:270:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "715:16:13",
																"nodeType": "YulBlock",
																"src": "715:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "724:1:13",
																					"nodeType": "YulLiteral",
																					"src": "724:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:13",
																					"nodeType": "YulLiteral",
																					"src": "727:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "717:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "717:6:13"
																			},
																			"nativeSrc": "717:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "717:12:13"
																		},
																		"nativeSrc": "717:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "717:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "690:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "690:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "699:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "699:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "686:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "686:3:13"
																		},
																		"nativeSrc": "686:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "686:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "711:2:13",
																		"nodeType": "YulLiteral",
																		"src": "711:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "682:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:13"
																},
																"nativeSrc": "682:32:13",
																"nodeType": "YulFunctionCall",
																"src": "682:32:13"
															},
															"nativeSrc": "679:52:13",
															"nodeType": "YulIf",
															"src": "679:52:13"
														},
														{
															"nativeSrc": "740:39:13",
															"nodeType": "YulAssignment",
															"src": "740:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "769:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "769:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "750:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "750:18:13"
																},
																"nativeSrc": "750:29:13",
																"nodeType": "YulFunctionCall",
																"src": "750:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "740:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "740:6:13"
																}
															]
														},
														{
															"nativeSrc": "788:48:13",
															"nodeType": "YulAssignment",
															"src": "788:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "821:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "821:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "832:2:13",
																				"nodeType": "YulLiteral",
																				"src": "832:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "817:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "817:3:13"
																		},
																		"nativeSrc": "817:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "817:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "798:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "798:18:13"
																},
																"nativeSrc": "798:38:13",
																"nodeType": "YulFunctionCall",
																"src": "798:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "788:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "788:6:13"
																}
															]
														},
														{
															"nativeSrc": "845:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "845:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "858:1:13",
																"nodeType": "YulLiteral",
																"src": "858:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "849:5:13",
																	"nodeType": "YulTypedName",
																	"src": "849:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "868:41:13",
															"nodeType": "YulAssignment",
															"src": "868:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "894:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "894:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "905:2:13",
																				"nodeType": "YulLiteral",
																				"src": "905:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "890:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "890:3:13"
																		},
																		"nativeSrc": "890:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "890:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "877:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "877:12:13"
																},
																"nativeSrc": "877:32:13",
																"nodeType": "YulFunctionCall",
																"src": "877:32:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "868:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "868:5:13"
																}
															]
														},
														{
															"nativeSrc": "918:15:13",
															"nodeType": "YulAssignment",
															"src": "918:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "928:5:13",
																"nodeType": "YulIdentifier",
																"src": "928:5:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "918:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "565:374:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "619:9:13",
														"nodeType": "YulTypedName",
														"src": "619:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "630:7:13",
														"nodeType": "YulTypedName",
														"src": "630:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "642:6:13",
														"nodeType": "YulTypedName",
														"src": "642:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "650:6:13",
														"nodeType": "YulTypedName",
														"src": "650:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "658:6:13",
														"nodeType": "YulTypedName",
														"src": "658:6:13",
														"type": ""
													}
												],
												"src": "565:374:13"
											},
											{
												"body": {
													"nativeSrc": "1060:102:13",
													"nodeType": "YulBlock",
													"src": "1060:102:13",
													"statements": [
														{
															"nativeSrc": "1070:26:13",
															"nodeType": "YulAssignment",
															"src": "1070:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1082:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1082:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1093:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1093:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1078:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1078:3:13"
																},
																"nativeSrc": "1078:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1078:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1070:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1112:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1112:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1127:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1127:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1143:3:13",
																								"nodeType": "YulLiteral",
																								"src": "1143:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1148:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1139:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1139:3:13"
																						},
																						"nativeSrc": "1139:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1139:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1152:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1152:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1135:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1135:3:13"
																				},
																				"nativeSrc": "1135:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1135:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1123:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:13"
																		},
																		"nativeSrc": "1123:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1123:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1105:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1105:6:13"
																},
																"nativeSrc": "1105:51:13",
																"nodeType": "YulFunctionCall",
																"src": "1105:51:13"
															},
															"nativeSrc": "1105:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "1105:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1856__to_t_address__fromStack_reversed",
												"nativeSrc": "944:218:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1029:9:13",
														"nodeType": "YulTypedName",
														"src": "1029:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1040:6:13",
														"nodeType": "YulTypedName",
														"src": "1040:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1051:4:13",
														"nodeType": "YulTypedName",
														"src": "1051:4:13",
														"type": ""
													}
												],
												"src": "944:218:13"
											},
											{
												"body": {
													"nativeSrc": "1262:92:13",
													"nodeType": "YulBlock",
													"src": "1262:92:13",
													"statements": [
														{
															"nativeSrc": "1272:26:13",
															"nodeType": "YulAssignment",
															"src": "1272:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1284:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1284:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1295:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1295:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1280:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1280:3:13"
																},
																"nativeSrc": "1280:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1280:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1272:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1314:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1314:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1339:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1339:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1332:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1332:6:13"
																				},
																				"nativeSrc": "1332:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1332:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1325:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1325:6:13"
																		},
																		"nativeSrc": "1325:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1325:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1307:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1307:6:13"
																},
																"nativeSrc": "1307:41:13",
																"nodeType": "YulFunctionCall",
																"src": "1307:41:13"
															},
															"nativeSrc": "1307:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "1307:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1167:187:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1231:9:13",
														"nodeType": "YulTypedName",
														"src": "1231:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1242:6:13",
														"nodeType": "YulTypedName",
														"src": "1242:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1253:4:13",
														"nodeType": "YulTypedName",
														"src": "1253:4:13",
														"type": ""
													}
												],
												"src": "1167:187:13"
											},
											{
												"body": {
													"nativeSrc": "1391:95:13",
													"nodeType": "YulBlock",
													"src": "1391:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1408:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1408:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1415:3:13",
																				"nodeType": "YulLiteral",
																				"src": "1415:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:10:13",
																				"nodeType": "YulLiteral",
																				"src": "1420:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1411:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1411:3:13"
																		},
																		"nativeSrc": "1411:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1411:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1401:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:13"
																},
																"nativeSrc": "1401:31:13",
																"nodeType": "YulFunctionCall",
																"src": "1401:31:13"
															},
															"nativeSrc": "1401:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "1401:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1448:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1451:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1451:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1441:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:13"
																},
																"nativeSrc": "1441:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1441:15:13"
															},
															"nativeSrc": "1441:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1441:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1472:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1472:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1475:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1475:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1465:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1465:6:13"
																},
																"nativeSrc": "1465:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1465:15:13"
															},
															"nativeSrc": "1465:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1465:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1359:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1359:127:13"
											},
											{
												"body": {
													"nativeSrc": "1587:922:13",
													"nodeType": "YulBlock",
													"src": "1587:922:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1633:16:13",
																"nodeType": "YulBlock",
																"src": "1633:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1642:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1642:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1645:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1645:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1635:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1635:6:13"
																			},
																			"nativeSrc": "1635:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1635:12:13"
																		},
																		"nativeSrc": "1635:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1635:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1608:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1608:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1617:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1617:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1604:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1604:3:13"
																		},
																		"nativeSrc": "1604:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1604:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1629:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1629:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1600:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:13"
																},
																"nativeSrc": "1600:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1600:32:13"
															},
															"nativeSrc": "1597:52:13",
															"nodeType": "YulIf",
															"src": "1597:52:13"
														},
														{
															"nativeSrc": "1658:39:13",
															"nodeType": "YulAssignment",
															"src": "1658:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1687:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1687:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1668:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1668:18:13"
																},
																"nativeSrc": "1668:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1668:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1658:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:13"
																}
															]
														},
														{
															"nativeSrc": "1706:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1706:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1737:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1737:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1748:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1748:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1733:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1733:3:13"
																		},
																		"nativeSrc": "1733:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1733:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1720:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1720:12:13"
																},
																"nativeSrc": "1720:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1720:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1710:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1710:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1795:16:13",
																"nodeType": "YulBlock",
																"src": "1795:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1804:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1804:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1807:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1797:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1797:6:13"
																			},
																			"nativeSrc": "1797:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1797:12:13"
																		},
																		"nativeSrc": "1797:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1797:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1767:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1767:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1775:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1775:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1764:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1764:2:13"
																},
																"nativeSrc": "1764:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1764:30:13"
															},
															"nativeSrc": "1761:50:13",
															"nodeType": "YulIf",
															"src": "1761:50:13"
														},
														{
															"nativeSrc": "1820:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1820:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1834:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1834:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1845:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1845:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1830:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1830:3:13"
																},
																"nativeSrc": "1830:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1830:22:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1824:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1824:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1900:16:13",
																"nodeType": "YulBlock",
																"src": "1900:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1909:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1909:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1902:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1902:6:13"
																			},
																			"nativeSrc": "1902:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1902:12:13"
																		},
																		"nativeSrc": "1902:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1902:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1879:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1879:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1883:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1883:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1875:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1875:3:13"
																				},
																				"nativeSrc": "1875:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1875:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1890:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1890:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1871:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:13"
																		},
																		"nativeSrc": "1871:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1864:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1864:6:13"
																},
																"nativeSrc": "1864:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1864:35:13"
															},
															"nativeSrc": "1861:55:13",
															"nodeType": "YulIf",
															"src": "1861:55:13"
														},
														{
															"nativeSrc": "1925:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1925:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1952:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1952:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1939:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1939:12:13"
																},
																"nativeSrc": "1939:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1939:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1929:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1929:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1998:22:13",
																"nodeType": "YulBlock",
																"src": "1998:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2000:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2000:16:13"
																			},
																			"nativeSrc": "2000:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2000:18:13"
																		},
																		"nativeSrc": "2000:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2000:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1970:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1970:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1978:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1978:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1967:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1967:2:13"
																},
																"nativeSrc": "1967:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1967:30:13"
															},
															"nativeSrc": "1964:56:13",
															"nodeType": "YulIf",
															"src": "1964:56:13"
														},
														{
															"nativeSrc": "2029:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2029:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2049:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2043:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2043:5:13"
																},
																"nativeSrc": "2043:9:13",
																"nodeType": "YulFunctionCall",
																"src": "2043:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2033:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2033:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2061:85:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2061:85:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2083:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2083:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "2107:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "2107:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2115:4:13",
																										"nodeType": "YulLiteral",
																										"src": "2115:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2103:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2103:3:13"
																								},
																								"nativeSrc": "2103:17:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2103:17:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2126:2:13",
																										"nodeType": "YulLiteral",
																										"src": "2126:2:13",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2122:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2122:3:13"
																								},
																								"nativeSrc": "2122:7:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2122:7:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2099:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2099:3:13"
																						},
																						"nativeSrc": "2099:31:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2099:31:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2132:2:13",
																						"nodeType": "YulLiteral",
																						"src": "2132:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2095:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2095:3:13"
																				},
																				"nativeSrc": "2095:40:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2095:40:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2141:2:13",
																						"nodeType": "YulLiteral",
																						"src": "2141:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2137:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2137:3:13"
																				},
																				"nativeSrc": "2137:7:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2137:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2091:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2091:3:13"
																		},
																		"nativeSrc": "2091:54:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:54:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2079:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2079:3:13"
																},
																"nativeSrc": "2079:67:13",
																"nodeType": "YulFunctionCall",
																"src": "2079:67:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2065:10:13",
																	"nodeType": "YulTypedName",
																	"src": "2065:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2221:22:13",
																"nodeType": "YulBlock",
																"src": "2221:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2223:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2223:16:13"
																			},
																			"nativeSrc": "2223:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2223:18:13"
																		},
																		"nativeSrc": "2223:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2164:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "2164:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2176:18:13",
																				"nodeType": "YulLiteral",
																				"src": "2176:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2161:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2161:2:13"
																		},
																		"nativeSrc": "2161:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2161:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2200:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "2200:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2212:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2212:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2197:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2197:2:13"
																		},
																		"nativeSrc": "2197:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2197:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2158:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2158:2:13"
																},
																"nativeSrc": "2158:62:13",
																"nodeType": "YulFunctionCall",
																"src": "2158:62:13"
															},
															"nativeSrc": "2155:88:13",
															"nodeType": "YulIf",
															"src": "2155:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2259:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2259:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2263:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2263:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2252:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:13"
																},
																"nativeSrc": "2252:22:13",
																"nodeType": "YulFunctionCall",
																"src": "2252:22:13"
															},
															"nativeSrc": "2252:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "2252:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2290:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2298:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2298:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2283:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2283:6:13"
																},
																"nativeSrc": "2283:22:13",
																"nodeType": "YulFunctionCall",
																"src": "2283:22:13"
															},
															"nativeSrc": "2283:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "2283:22:13"
														},
														{
															"body": {
																"nativeSrc": "2355:16:13",
																"nodeType": "YulBlock",
																"src": "2355:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2364:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2367:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2367:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2357:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2357:6:13"
																			},
																			"nativeSrc": "2357:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2357:12:13"
																		},
																		"nativeSrc": "2357:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2357:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2328:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2328:2:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2332:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2332:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2324:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2324:3:13"
																				},
																				"nativeSrc": "2324:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2324:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2320:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2320:3:13"
																		},
																		"nativeSrc": "2320:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2320:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2346:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "2346:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2317:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2317:2:13"
																},
																"nativeSrc": "2317:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2317:37:13"
															},
															"nativeSrc": "2314:57:13",
															"nodeType": "YulIf",
															"src": "2314:57:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2397:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2397:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2405:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2405:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2393:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2393:3:13"
																		},
																		"nativeSrc": "2393:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2393:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2414:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2418:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2418:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2410:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:13"
																		},
																		"nativeSrc": "2410:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2410:11:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2423:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2423:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2380:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:13"
																},
																"nativeSrc": "2380:50:13",
																"nodeType": "YulFunctionCall",
																"src": "2380:50:13"
															},
															"nativeSrc": "2380:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "2380:50:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2454:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2454:6:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2462:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2462:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2450:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2450:3:13"
																				},
																				"nativeSrc": "2450:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2450:19:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2471:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2471:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2446:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2446:3:13"
																		},
																		"nativeSrc": "2446:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2446:28:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2476:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2476:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2439:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:13"
																},
																"nativeSrc": "2439:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2439:39:13"
															},
															"nativeSrc": "2439:39:13",
															"nodeType": "YulExpressionStatement",
															"src": "2439:39:13"
														},
														{
															"nativeSrc": "2487:16:13",
															"nodeType": "YulAssignment",
															"src": "2487:16:13",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2497:6:13",
																"nodeType": "YulIdentifier",
																"src": "2497:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2487:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2487:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "1491:1018:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1545:9:13",
														"nodeType": "YulTypedName",
														"src": "1545:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1556:7:13",
														"nodeType": "YulTypedName",
														"src": "1556:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1568:6:13",
														"nodeType": "YulTypedName",
														"src": "1568:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1576:6:13",
														"nodeType": "YulTypedName",
														"src": "1576:6:13",
														"type": ""
													}
												],
												"src": "1491:1018:13"
											},
											{
												"body": {
													"nativeSrc": "2615:76:13",
													"nodeType": "YulBlock",
													"src": "2615:76:13",
													"statements": [
														{
															"nativeSrc": "2625:26:13",
															"nodeType": "YulAssignment",
															"src": "2625:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2637:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2637:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2648:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2648:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2633:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:13"
																},
																"nativeSrc": "2633:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2633:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2625:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2625:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2667:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2667:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2678:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2678:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2660:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2660:6:13"
																},
																"nativeSrc": "2660:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2660:25:13"
															},
															"nativeSrc": "2660:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "2660:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2514:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:13",
														"nodeType": "YulTypedName",
														"src": "2584:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2595:6:13",
														"nodeType": "YulTypedName",
														"src": "2595:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2606:4:13",
														"nodeType": "YulTypedName",
														"src": "2606:4:13",
														"type": ""
													}
												],
												"src": "2514:177:13"
											},
											{
												"body": {
													"nativeSrc": "2766:156:13",
													"nodeType": "YulBlock",
													"src": "2766:156:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2812:16:13",
																"nodeType": "YulBlock",
																"src": "2812:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2821:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2821:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2824:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2824:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2814:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2814:6:13"
																			},
																			"nativeSrc": "2814:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2814:12:13"
																		},
																		"nativeSrc": "2814:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2814:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2787:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2787:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2796:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2796:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2783:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2783:3:13"
																		},
																		"nativeSrc": "2783:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2783:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2808:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2808:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2779:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2779:3:13"
																},
																"nativeSrc": "2779:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2779:32:13"
															},
															"nativeSrc": "2776:52:13",
															"nodeType": "YulIf",
															"src": "2776:52:13"
														},
														{
															"nativeSrc": "2837:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2837:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2850:1:13",
																"nodeType": "YulLiteral",
																"src": "2850:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2841:5:13",
																	"nodeType": "YulTypedName",
																	"src": "2841:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2860:32:13",
															"nodeType": "YulAssignment",
															"src": "2860:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2882:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2882:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2869:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2869:12:13"
																},
																"nativeSrc": "2869:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2869:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2860:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2860:5:13"
																}
															]
														},
														{
															"nativeSrc": "2901:15:13",
															"nodeType": "YulAssignment",
															"src": "2901:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "2911:5:13",
																"nodeType": "YulIdentifier",
																"src": "2911:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2901:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2901:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2696:226:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2732:9:13",
														"nodeType": "YulTypedName",
														"src": "2732:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2743:7:13",
														"nodeType": "YulTypedName",
														"src": "2743:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2755:6:13",
														"nodeType": "YulTypedName",
														"src": "2755:6:13",
														"type": ""
													}
												],
												"src": "2696:226:13"
											},
											{
												"body": {
													"nativeSrc": "3028:102:13",
													"nodeType": "YulBlock",
													"src": "3028:102:13",
													"statements": [
														{
															"nativeSrc": "3038:26:13",
															"nodeType": "YulAssignment",
															"src": "3038:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3050:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3050:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3061:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3061:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3046:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3046:3:13"
																},
																"nativeSrc": "3046:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3046:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3038:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3038:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3080:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3080:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3095:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3095:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3111:3:13",
																								"nodeType": "YulLiteral",
																								"src": "3111:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3116:1:13",
																								"nodeType": "YulLiteral",
																								"src": "3116:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3107:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3107:3:13"
																						},
																						"nativeSrc": "3107:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3107:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3120:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3120:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3103:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3103:3:13"
																				},
																				"nativeSrc": "3103:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3103:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3091:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3091:3:13"
																		},
																		"nativeSrc": "3091:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3073:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:13"
																},
																"nativeSrc": "3073:51:13",
																"nodeType": "YulFunctionCall",
																"src": "3073:51:13"
															},
															"nativeSrc": "3073:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "3073:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2927:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2997:9:13",
														"nodeType": "YulTypedName",
														"src": "2997:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3008:6:13",
														"nodeType": "YulTypedName",
														"src": "3008:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3019:4:13",
														"nodeType": "YulTypedName",
														"src": "3019:4:13",
														"type": ""
													}
												],
												"src": "2927:203:13"
											},
											{
												"body": {
													"nativeSrc": "3256:297:13",
													"nodeType": "YulBlock",
													"src": "3256:297:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3273:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3273:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3284:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3284:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3266:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:13"
																},
																"nativeSrc": "3266:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3266:21:13"
															},
															"nativeSrc": "3266:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "3266:21:13"
														},
														{
															"nativeSrc": "3296:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3296:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3316:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3316:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3310:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3310:5:13"
																},
																"nativeSrc": "3310:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3310:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3300:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3300:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3343:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3343:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3354:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3354:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3339:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3339:3:13"
																		},
																		"nativeSrc": "3339:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3339:18:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3359:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3359:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3332:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3332:6:13"
																},
																"nativeSrc": "3332:34:13",
																"nodeType": "YulFunctionCall",
																"src": "3332:34:13"
															},
															"nativeSrc": "3332:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "3332:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3385:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3385:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3396:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3396:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3381:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3381:3:13"
																		},
																		"nativeSrc": "3381:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3381:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3405:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3405:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3413:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3413:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3401:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3401:3:13"
																		},
																		"nativeSrc": "3401:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3401:15:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3418:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3418:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3375:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3375:5:13"
																},
																"nativeSrc": "3375:50:13",
																"nodeType": "YulFunctionCall",
																"src": "3375:50:13"
															},
															"nativeSrc": "3375:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "3375:50:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3449:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3449:9:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3460:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3460:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3445:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3445:3:13"
																				},
																				"nativeSrc": "3445:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3445:22:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3469:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3469:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3441:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3441:3:13"
																		},
																		"nativeSrc": "3441:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:31:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3474:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3474:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3434:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3434:6:13"
																},
																"nativeSrc": "3434:42:13",
																"nodeType": "YulFunctionCall",
																"src": "3434:42:13"
															},
															"nativeSrc": "3434:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "3434:42:13"
														},
														{
															"nativeSrc": "3485:62:13",
															"nodeType": "YulAssignment",
															"src": "3485:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3501:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3501:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3520:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "3520:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3528:2:13",
																								"nodeType": "YulLiteral",
																								"src": "3528:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3516:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3516:3:13"
																						},
																						"nativeSrc": "3516:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3516:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3537:2:13",
																								"nodeType": "YulLiteral",
																								"src": "3537:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3533:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3533:3:13"
																						},
																						"nativeSrc": "3533:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3533:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3512:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3512:3:13"
																				},
																				"nativeSrc": "3512:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3512:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3497:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3497:3:13"
																		},
																		"nativeSrc": "3497:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3497:45:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3544:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3544:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3493:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3493:3:13"
																},
																"nativeSrc": "3493:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3493:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3485:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3485:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3135:418:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3225:9:13",
														"nodeType": "YulTypedName",
														"src": "3225:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3236:6:13",
														"nodeType": "YulTypedName",
														"src": "3236:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3247:4:13",
														"nodeType": "YulTypedName",
														"src": "3247:4:13",
														"type": ""
													}
												],
												"src": "3135:418:13"
											},
											{
												"body": {
													"nativeSrc": "3600:76:13",
													"nodeType": "YulBlock",
													"src": "3600:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3654:16:13",
																"nodeType": "YulBlock",
																"src": "3654:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3663:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3663:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3666:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3666:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3656:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3656:6:13"
																			},
																			"nativeSrc": "3656:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3656:12:13"
																		},
																		"nativeSrc": "3656:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3656:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3623:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3623:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3644:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "3644:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3637:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "3637:6:13"
																						},
																						"nativeSrc": "3637:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3637:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3630:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "3630:6:13"
																				},
																				"nativeSrc": "3630:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3630:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3620:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3620:2:13"
																		},
																		"nativeSrc": "3620:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3620:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3613:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:13"
																},
																"nativeSrc": "3613:40:13",
																"nodeType": "YulFunctionCall",
																"src": "3613:40:13"
															},
															"nativeSrc": "3610:60:13",
															"nodeType": "YulIf",
															"src": "3610:60:13"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "3558:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3589:5:13",
														"nodeType": "YulTypedName",
														"src": "3589:5:13",
														"type": ""
													}
												],
												"src": "3558:118:13"
											},
											{
												"body": {
													"nativeSrc": "3765:231:13",
													"nodeType": "YulBlock",
													"src": "3765:231:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3811:16:13",
																"nodeType": "YulBlock",
																"src": "3811:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3820:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3820:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3823:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3823:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3813:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3813:6:13"
																			},
																			"nativeSrc": "3813:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3813:12:13"
																		},
																		"nativeSrc": "3813:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3813:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3786:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3786:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3795:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3795:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3782:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3782:3:13"
																		},
																		"nativeSrc": "3782:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3782:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3807:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3778:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3778:3:13"
																},
																"nativeSrc": "3778:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3778:32:13"
															},
															"nativeSrc": "3775:52:13",
															"nodeType": "YulIf",
															"src": "3775:52:13"
														},
														{
															"nativeSrc": "3836:39:13",
															"nodeType": "YulAssignment",
															"src": "3836:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3865:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3865:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3846:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3846:18:13"
																},
																"nativeSrc": "3846:29:13",
																"nodeType": "YulFunctionCall",
																"src": "3846:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3836:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3836:6:13"
																}
															]
														},
														{
															"nativeSrc": "3884:45:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3884:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3914:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3914:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3925:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3925:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3910:3:13"
																		},
																		"nativeSrc": "3910:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3910:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3897:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3897:12:13"
																},
																"nativeSrc": "3897:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3897:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3888:5:13",
																	"nodeType": "YulTypedName",
																	"src": "3888:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3960:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3960:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "3938:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "3938:21:13"
																},
																"nativeSrc": "3938:28:13",
																"nodeType": "YulFunctionCall",
																"src": "3938:28:13"
															},
															"nativeSrc": "3938:28:13",
															"nodeType": "YulExpressionStatement",
															"src": "3938:28:13"
														},
														{
															"nativeSrc": "3975:15:13",
															"nodeType": "YulAssignment",
															"src": "3975:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "3985:5:13",
																"nodeType": "YulIdentifier",
																"src": "3985:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3975:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3975:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3681:315:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3723:9:13",
														"nodeType": "YulTypedName",
														"src": "3723:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3734:7:13",
														"nodeType": "YulTypedName",
														"src": "3734:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3746:6:13",
														"nodeType": "YulTypedName",
														"src": "3746:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3754:6:13",
														"nodeType": "YulTypedName",
														"src": "3754:6:13",
														"type": ""
													}
												],
												"src": "3681:315:13"
											},
											{
												"body": {
													"nativeSrc": "4175:170:13",
													"nodeType": "YulBlock",
													"src": "4175:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4192:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4192:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4203:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4203:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4185:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:13"
																},
																"nativeSrc": "4185:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4185:21:13"
															},
															"nativeSrc": "4185:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4185:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4226:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4226:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4237:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4237:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4222:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4222:3:13"
																		},
																		"nativeSrc": "4222:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4222:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4242:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4242:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4215:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4215:6:13"
																},
																"nativeSrc": "4215:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4215:30:13"
															},
															"nativeSrc": "4215:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "4215:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4265:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4265:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4276:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4276:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:13"
																		},
																		"nativeSrc": "4261:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:18:13"
																	},
																	{
																		"hexValue": "496e76616c696420616c76612061646472657373",
																		"kind": "string",
																		"nativeSrc": "4281:22:13",
																		"nodeType": "YulLiteral",
																		"src": "4281:22:13",
																		"type": "",
																		"value": "Invalid alva address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4254:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4254:6:13"
																},
																"nativeSrc": "4254:50:13",
																"nodeType": "YulFunctionCall",
																"src": "4254:50:13"
															},
															"nativeSrc": "4254:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "4254:50:13"
														},
														{
															"nativeSrc": "4313:26:13",
															"nodeType": "YulAssignment",
															"src": "4313:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4325:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4325:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4336:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4336:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4321:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4321:3:13"
																},
																"nativeSrc": "4321:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4321:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4313:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4313:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b1471e8298fb0fdee6f4979056baf840dac83498fd0403a768190450218d14c1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4001:344:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4152:9:13",
														"nodeType": "YulTypedName",
														"src": "4152:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4166:4:13",
														"nodeType": "YulTypedName",
														"src": "4166:4:13",
														"type": ""
													}
												],
												"src": "4001:344:13"
											},
											{
												"body": {
													"nativeSrc": "4524:171:13",
													"nodeType": "YulBlock",
													"src": "4524:171:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4541:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4541:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4552:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4552:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4534:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:13"
																},
																"nativeSrc": "4534:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4534:21:13"
															},
															"nativeSrc": "4534:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4534:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4575:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4586:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4571:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:13"
																		},
																		"nativeSrc": "4571:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4591:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4591:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4564:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:13"
																},
																"nativeSrc": "4564:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4564:30:13"
															},
															"nativeSrc": "4564:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "4564:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4614:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4614:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4625:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4625:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4610:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:13"
																		},
																		"nativeSrc": "4610:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4610:18:13"
																	},
																	{
																		"hexValue": "496e76616c69642078414c56412061646472657373",
																		"kind": "string",
																		"nativeSrc": "4630:23:13",
																		"nodeType": "YulLiteral",
																		"src": "4630:23:13",
																		"type": "",
																		"value": "Invalid xALVA address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4603:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:13"
																},
																"nativeSrc": "4603:51:13",
																"nodeType": "YulFunctionCall",
																"src": "4603:51:13"
															},
															"nativeSrc": "4603:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "4603:51:13"
														},
														{
															"nativeSrc": "4663:26:13",
															"nodeType": "YulAssignment",
															"src": "4663:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4675:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4671:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:13"
																},
																"nativeSrc": "4671:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4671:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4663:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4663:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5bec71c0a16c9cd7a466d8c8147fe1a528e182d277a5c381b3e448cb9518e898__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4350:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4501:9:13",
														"nodeType": "YulTypedName",
														"src": "4501:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4515:4:13",
														"nodeType": "YulTypedName",
														"src": "4515:4:13",
														"type": ""
													}
												],
												"src": "4350:345:13"
											},
											{
												"body": {
													"nativeSrc": "4808:101:13",
													"nodeType": "YulBlock",
													"src": "4808:101:13",
													"statements": [
														{
															"nativeSrc": "4818:26:13",
															"nodeType": "YulAssignment",
															"src": "4818:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4830:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4830:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4841:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4841:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4826:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4826:3:13"
																},
																"nativeSrc": "4826:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4826:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4818:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4818:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4860:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4860:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4875:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4875:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4883:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4883:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4871:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:13"
																		},
																		"nativeSrc": "4871:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4871:31:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:13"
																},
																"nativeSrc": "4853:50:13",
																"nodeType": "YulFunctionCall",
																"src": "4853:50:13"
															},
															"nativeSrc": "4853:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "4853:50:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "4700:209:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4777:9:13",
														"nodeType": "YulTypedName",
														"src": "4777:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4788:6:13",
														"nodeType": "YulTypedName",
														"src": "4788:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4799:4:13",
														"nodeType": "YulTypedName",
														"src": "4799:4:13",
														"type": ""
													}
												],
												"src": "4700:209:13"
											},
											{
												"body": {
													"nativeSrc": "5088:166:13",
													"nodeType": "YulBlock",
													"src": "5088:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5105:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5105:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5116:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5116:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5098:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5098:6:13"
																},
																"nativeSrc": "5098:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5098:21:13"
															},
															"nativeSrc": "5098:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "5098:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5139:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5139:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5150:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5150:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5135:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5135:3:13"
																		},
																		"nativeSrc": "5135:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5135:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5155:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5155:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5128:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5128:6:13"
																},
																"nativeSrc": "5128:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5128:30:13"
															},
															"nativeSrc": "5128:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "5128:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5178:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5178:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5189:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5189:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5174:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5174:3:13"
																		},
																		"nativeSrc": "5174:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5174:18:13"
																	},
																	{
																		"hexValue": "426c61636b4c69737465642055736572",
																		"kind": "string",
																		"nativeSrc": "5194:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5194:18:13",
																		"type": "",
																		"value": "BlackListed User"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5167:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5167:6:13"
																},
																"nativeSrc": "5167:46:13",
																"nodeType": "YulFunctionCall",
																"src": "5167:46:13"
															},
															"nativeSrc": "5167:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "5167:46:13"
														},
														{
															"nativeSrc": "5222:26:13",
															"nodeType": "YulAssignment",
															"src": "5222:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5234:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5234:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5245:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5245:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5230:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5230:3:13"
																},
																"nativeSrc": "5230:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5230:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5222:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5222:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4914:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5065:9:13",
														"nodeType": "YulTypedName",
														"src": "5065:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5079:4:13",
														"nodeType": "YulTypedName",
														"src": "5079:4:13",
														"type": ""
													}
												],
												"src": "4914:340:13"
											},
											{
												"body": {
													"nativeSrc": "5291:95:13",
													"nodeType": "YulBlock",
													"src": "5291:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5308:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5308:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5315:3:13",
																				"nodeType": "YulLiteral",
																				"src": "5315:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5320:10:13",
																				"nodeType": "YulLiteral",
																				"src": "5320:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5311:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5311:3:13"
																		},
																		"nativeSrc": "5311:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5301:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5301:6:13"
																},
																"nativeSrc": "5301:31:13",
																"nodeType": "YulFunctionCall",
																"src": "5301:31:13"
															},
															"nativeSrc": "5301:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "5301:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5348:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5348:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5351:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5351:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5341:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5341:6:13"
																},
																"nativeSrc": "5341:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5341:15:13"
															},
															"nativeSrc": "5341:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5341:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5372:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5372:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5375:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5375:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5365:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5365:6:13"
																},
																"nativeSrc": "5365:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5365:15:13"
															},
															"nativeSrc": "5365:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5365:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5259:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5259:127:13"
											},
											{
												"body": {
													"nativeSrc": "5439:77:13",
													"nodeType": "YulBlock",
													"src": "5439:77:13",
													"statements": [
														{
															"nativeSrc": "5449:16:13",
															"nodeType": "YulAssignment",
															"src": "5449:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5460:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5460:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5463:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5463:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5456:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5456:3:13"
																},
																"nativeSrc": "5456:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5456:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5449:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5449:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5488:22:13",
																"nodeType": "YulBlock",
																"src": "5488:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5490:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5490:16:13"
																			},
																			"nativeSrc": "5490:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5490:18:13"
																		},
																		"nativeSrc": "5490:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5490:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5480:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5480:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5483:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5483:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5477:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5477:2:13"
																},
																"nativeSrc": "5477:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5477:10:13"
															},
															"nativeSrc": "5474:36:13",
															"nodeType": "YulIf",
															"src": "5474:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5391:125:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5422:1:13",
														"nodeType": "YulTypedName",
														"src": "5422:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5425:1:13",
														"nodeType": "YulTypedName",
														"src": "5425:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5431:3:13",
														"nodeType": "YulTypedName",
														"src": "5431:3:13",
														"type": ""
													}
												],
												"src": "5391:125:13"
											},
											{
												"body": {
													"nativeSrc": "5695:165:13",
													"nodeType": "YulBlock",
													"src": "5695:165:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5705:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5705:6:13"
																},
																"nativeSrc": "5705:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5705:21:13"
															},
															"nativeSrc": "5705:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "5705:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5746:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5746:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5757:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5757:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5742:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:13"
																		},
																		"nativeSrc": "5742:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5762:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5762:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5735:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5735:6:13"
																},
																"nativeSrc": "5735:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5735:30:13"
															},
															"nativeSrc": "5735:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "5735:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5785:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5785:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5796:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5796:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5781:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5781:3:13"
																		},
																		"nativeSrc": "5781:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5781:18:13"
																	},
																	{
																		"hexValue": "43616e206e6f7420756e5374616b65",
																		"kind": "string",
																		"nativeSrc": "5801:17:13",
																		"nodeType": "YulLiteral",
																		"src": "5801:17:13",
																		"type": "",
																		"value": "Can not unStake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5774:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5774:6:13"
																},
																"nativeSrc": "5774:45:13",
																"nodeType": "YulFunctionCall",
																"src": "5774:45:13"
															},
															"nativeSrc": "5774:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "5774:45:13"
														},
														{
															"nativeSrc": "5828:26:13",
															"nodeType": "YulAssignment",
															"src": "5828:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5840:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5840:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5851:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5851:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5836:3:13"
																},
																"nativeSrc": "5836:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5836:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5828:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5828:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7d6d2814c0e538a9dfcdf30584136cd8b783d78774c3c549658170a640f9728__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5521:339:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5672:9:13",
														"nodeType": "YulTypedName",
														"src": "5672:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5686:4:13",
														"nodeType": "YulTypedName",
														"src": "5686:4:13",
														"type": ""
													}
												],
												"src": "5521:339:13"
											},
											{
												"body": {
													"nativeSrc": "5946:103:13",
													"nodeType": "YulBlock",
													"src": "5946:103:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5992:16:13",
																"nodeType": "YulBlock",
																"src": "5992:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6001:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6001:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6004:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6004:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5994:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5994:6:13"
																			},
																			"nativeSrc": "5994:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5994:12:13"
																		},
																		"nativeSrc": "5994:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5994:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5967:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5967:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5976:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5976:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5963:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5963:3:13"
																		},
																		"nativeSrc": "5963:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5963:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5988:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5988:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5959:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5959:3:13"
																},
																"nativeSrc": "5959:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5959:32:13"
															},
															"nativeSrc": "5956:52:13",
															"nodeType": "YulIf",
															"src": "5956:52:13"
														},
														{
															"nativeSrc": "6017:26:13",
															"nodeType": "YulAssignment",
															"src": "6017:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6033:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6033:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6027:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6027:5:13"
																},
																"nativeSrc": "6027:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6027:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6017:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6017:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5865:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5912:9:13",
														"nodeType": "YulTypedName",
														"src": "5912:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5923:7:13",
														"nodeType": "YulTypedName",
														"src": "5923:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5935:6:13",
														"nodeType": "YulTypedName",
														"src": "5935:6:13",
														"type": ""
													}
												],
												"src": "5865:184:13"
											},
											{
												"body": {
													"nativeSrc": "6106:116:13",
													"nodeType": "YulBlock",
													"src": "6106:116:13",
													"statements": [
														{
															"nativeSrc": "6116:20:13",
															"nodeType": "YulAssignment",
															"src": "6116:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6131:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6131:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6134:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6134:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6127:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6127:3:13"
																},
																"nativeSrc": "6127:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6127:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6116:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6116:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6194:22:13",
																"nodeType": "YulBlock",
																"src": "6194:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6196:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6196:16:13"
																			},
																			"nativeSrc": "6196:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6196:18:13"
																		},
																		"nativeSrc": "6196:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6196:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6165:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "6165:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6158:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "6158:6:13"
																				},
																				"nativeSrc": "6158:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6158:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6172:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "6172:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6179:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "6179:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6188:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "6188:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6175:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6175:3:13"
																						},
																						"nativeSrc": "6175:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6175:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6169:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "6169:2:13"
																				},
																				"nativeSrc": "6169:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6169:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6155:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:13"
																		},
																		"nativeSrc": "6155:37:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:13"
																},
																"nativeSrc": "6148:45:13",
																"nodeType": "YulFunctionCall",
																"src": "6148:45:13"
															},
															"nativeSrc": "6145:71:13",
															"nodeType": "YulIf",
															"src": "6145:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6054:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6085:1:13",
														"nodeType": "YulTypedName",
														"src": "6085:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6088:1:13",
														"nodeType": "YulTypedName",
														"src": "6088:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6094:7:13",
														"nodeType": "YulTypedName",
														"src": "6094:7:13",
														"type": ""
													}
												],
												"src": "6054:168:13"
											},
											{
												"body": {
													"nativeSrc": "6273:171:13",
													"nodeType": "YulBlock",
													"src": "6273:171:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6304:111:13",
																"nodeType": "YulBlock",
																"src": "6304:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6325:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6325:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6332:3:13",
																							"nodeType": "YulLiteral",
																							"src": "6332:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6337:10:13",
																							"nodeType": "YulLiteral",
																							"src": "6337:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6328:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6328:3:13"
																					},
																					"nativeSrc": "6328:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6328:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6318:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6318:6:13"
																			},
																			"nativeSrc": "6318:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6318:31:13"
																		},
																		"nativeSrc": "6318:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6318:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6369:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6369:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6372:4:13",
																					"nodeType": "YulLiteral",
																					"src": "6372:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6362:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6362:6:13"
																			},
																			"nativeSrc": "6362:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6362:15:13"
																		},
																		"nativeSrc": "6362:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6362:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6397:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6397:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6400:4:13",
																					"nodeType": "YulLiteral",
																					"src": "6400:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6390:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6390:6:13"
																			},
																			"nativeSrc": "6390:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6390:15:13"
																		},
																		"nativeSrc": "6390:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6390:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6293:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6293:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6286:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:13"
																},
																"nativeSrc": "6286:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6286:9:13"
															},
															"nativeSrc": "6283:132:13",
															"nodeType": "YulIf",
															"src": "6283:132:13"
														},
														{
															"nativeSrc": "6424:14:13",
															"nodeType": "YulAssignment",
															"src": "6424:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6433:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6433:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6436:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6436:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6429:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6429:3:13"
																},
																"nativeSrc": "6429:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6429:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6424:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6424:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6227:217:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6258:1:13",
														"nodeType": "YulTypedName",
														"src": "6258:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6261:1:13",
														"nodeType": "YulTypedName",
														"src": "6261:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6267:1:13",
														"nodeType": "YulTypedName",
														"src": "6267:1:13",
														"type": ""
													}
												],
												"src": "6227:217:13"
											},
											{
												"body": {
													"nativeSrc": "6578:145:13",
													"nodeType": "YulBlock",
													"src": "6578:145:13",
													"statements": [
														{
															"nativeSrc": "6588:26:13",
															"nodeType": "YulAssignment",
															"src": "6588:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6600:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6600:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6611:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6611:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6596:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6596:3:13"
																},
																"nativeSrc": "6596:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6596:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6588:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6588:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6630:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6630:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6645:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6645:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6661:3:13",
																								"nodeType": "YulLiteral",
																								"src": "6661:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6666:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6666:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6657:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6657:3:13"
																						},
																						"nativeSrc": "6657:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6657:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6670:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6670:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6653:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6653:3:13"
																				},
																				"nativeSrc": "6653:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6653:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6641:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6641:3:13"
																		},
																		"nativeSrc": "6641:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6641:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6623:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6623:6:13"
																},
																"nativeSrc": "6623:51:13",
																"nodeType": "YulFunctionCall",
																"src": "6623:51:13"
															},
															"nativeSrc": "6623:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "6623:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6694:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6694:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6705:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6705:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6690:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6690:3:13"
																		},
																		"nativeSrc": "6690:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6710:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6710:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6683:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6683:6:13"
																},
																"nativeSrc": "6683:34:13",
																"nodeType": "YulFunctionCall",
																"src": "6683:34:13"
															},
															"nativeSrc": "6683:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "6683:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6449:274:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6539:9:13",
														"nodeType": "YulTypedName",
														"src": "6539:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6550:6:13",
														"nodeType": "YulTypedName",
														"src": "6550:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6558:6:13",
														"nodeType": "YulTypedName",
														"src": "6558:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6569:4:13",
														"nodeType": "YulTypedName",
														"src": "6569:4:13",
														"type": ""
													}
												],
												"src": "6449:274:13"
											},
											{
												"body": {
													"nativeSrc": "6806:167:13",
													"nodeType": "YulBlock",
													"src": "6806:167:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6852:16:13",
																"nodeType": "YulBlock",
																"src": "6852:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6861:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6861:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6864:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6864:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6854:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6854:6:13"
																			},
																			"nativeSrc": "6854:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6854:12:13"
																		},
																		"nativeSrc": "6854:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6854:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6827:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6827:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6836:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6836:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6823:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6823:3:13"
																		},
																		"nativeSrc": "6823:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6823:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6819:3:13"
																},
																"nativeSrc": "6819:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6819:32:13"
															},
															"nativeSrc": "6816:52:13",
															"nodeType": "YulIf",
															"src": "6816:52:13"
														},
														{
															"nativeSrc": "6877:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6877:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6896:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6896:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6890:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6890:5:13"
																},
																"nativeSrc": "6890:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6890:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6881:5:13",
																	"nodeType": "YulTypedName",
																	"src": "6881:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6937:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6937:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "6915:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "6915:21:13"
																},
																"nativeSrc": "6915:28:13",
																"nodeType": "YulFunctionCall",
																"src": "6915:28:13"
															},
															"nativeSrc": "6915:28:13",
															"nodeType": "YulExpressionStatement",
															"src": "6915:28:13"
														},
														{
															"nativeSrc": "6952:15:13",
															"nodeType": "YulAssignment",
															"src": "6952:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "6962:5:13",
																"nodeType": "YulIdentifier",
																"src": "6962:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6952:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6952:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6728:245:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6772:9:13",
														"nodeType": "YulTypedName",
														"src": "6772:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6783:7:13",
														"nodeType": "YulTypedName",
														"src": "6783:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6795:6:13",
														"nodeType": "YulTypedName",
														"src": "6795:6:13",
														"type": ""
													}
												],
												"src": "6728:245:13"
											},
											{
												"body": {
													"nativeSrc": "7107:119:13",
													"nodeType": "YulBlock",
													"src": "7107:119:13",
													"statements": [
														{
															"nativeSrc": "7117:26:13",
															"nodeType": "YulAssignment",
															"src": "7117:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7129:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7129:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7140:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7140:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7125:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7125:3:13"
																},
																"nativeSrc": "7125:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7125:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7117:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7117:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7159:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7159:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7170:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7170:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7152:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7152:6:13"
																},
																"nativeSrc": "7152:25:13",
																"nodeType": "YulFunctionCall",
																"src": "7152:25:13"
															},
															"nativeSrc": "7152:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "7152:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7197:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7197:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7208:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7208:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7193:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7193:3:13"
																		},
																		"nativeSrc": "7193:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7193:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7213:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7213:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7186:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7186:6:13"
																},
																"nativeSrc": "7186:34:13",
																"nodeType": "YulFunctionCall",
																"src": "7186:34:13"
															},
															"nativeSrc": "7186:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "7186:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6978:248:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7068:9:13",
														"nodeType": "YulTypedName",
														"src": "7068:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7079:6:13",
														"nodeType": "YulTypedName",
														"src": "7079:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7087:6:13",
														"nodeType": "YulTypedName",
														"src": "7087:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7098:4:13",
														"nodeType": "YulTypedName",
														"src": "7098:4:13",
														"type": ""
													}
												],
												"src": "6978:248:13"
											},
											{
												"body": {
													"nativeSrc": "7388:214:13",
													"nodeType": "YulBlock",
													"src": "7388:214:13",
													"statements": [
														{
															"nativeSrc": "7398:26:13",
															"nodeType": "YulAssignment",
															"src": "7398:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7410:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7410:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7421:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7421:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7406:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7406:3:13"
																},
																"nativeSrc": "7406:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7406:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7398:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7398:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7440:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7440:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7455:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7455:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7471:3:13",
																								"nodeType": "YulLiteral",
																								"src": "7471:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7476:1:13",
																								"nodeType": "YulLiteral",
																								"src": "7476:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7467:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "7467:3:13"
																						},
																						"nativeSrc": "7467:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7467:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7480:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7480:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7463:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7463:3:13"
																				},
																				"nativeSrc": "7463:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7463:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7451:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7451:3:13"
																		},
																		"nativeSrc": "7451:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7451:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7433:6:13"
																},
																"nativeSrc": "7433:51:13",
																"nodeType": "YulFunctionCall",
																"src": "7433:51:13"
															},
															"nativeSrc": "7433:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "7433:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7504:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7504:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7515:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7515:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7500:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7500:3:13"
																		},
																		"nativeSrc": "7500:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7500:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7524:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7524:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7540:3:13",
																								"nodeType": "YulLiteral",
																								"src": "7540:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7545:1:13",
																								"nodeType": "YulLiteral",
																								"src": "7545:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7536:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "7536:3:13"
																						},
																						"nativeSrc": "7536:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7536:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7549:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7549:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7532:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7532:3:13"
																				},
																				"nativeSrc": "7532:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7532:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7520:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7520:3:13"
																		},
																		"nativeSrc": "7520:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7520:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7493:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7493:6:13"
																},
																"nativeSrc": "7493:60:13",
																"nodeType": "YulFunctionCall",
																"src": "7493:60:13"
															},
															"nativeSrc": "7493:60:13",
															"nodeType": "YulExpressionStatement",
															"src": "7493:60:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7573:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7573:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7584:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7584:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7569:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7569:3:13"
																		},
																		"nativeSrc": "7569:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7569:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7589:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7589:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7562:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7562:6:13"
																},
																"nativeSrc": "7562:34:13",
																"nodeType": "YulFunctionCall",
																"src": "7562:34:13"
															},
															"nativeSrc": "7562:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "7562:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7231:371:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7341:9:13",
														"nodeType": "YulTypedName",
														"src": "7341:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7352:6:13",
														"nodeType": "YulTypedName",
														"src": "7352:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7360:6:13",
														"nodeType": "YulTypedName",
														"src": "7360:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7368:6:13",
														"nodeType": "YulTypedName",
														"src": "7368:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7379:4:13",
														"nodeType": "YulTypedName",
														"src": "7379:4:13",
														"type": ""
													}
												],
												"src": "7231:371:13"
											},
											{
												"body": {
													"nativeSrc": "7781:172:13",
													"nodeType": "YulBlock",
													"src": "7781:172:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7798:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7798:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7809:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7809:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7791:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7791:6:13"
																},
																"nativeSrc": "7791:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7791:21:13"
															},
															"nativeSrc": "7791:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "7791:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7832:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7832:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7843:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7843:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7828:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7828:3:13"
																		},
																		"nativeSrc": "7828:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7828:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7848:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7848:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7821:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7821:6:13"
																},
																"nativeSrc": "7821:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7821:30:13"
															},
															"nativeSrc": "7821:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "7821:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7871:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7871:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7882:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7882:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7867:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7867:3:13"
																		},
																		"nativeSrc": "7867:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7867:18:13"
																	},
																	{
																		"hexValue": "416c726561647920696e2073616d6520737461747573",
																		"kind": "string",
																		"nativeSrc": "7887:24:13",
																		"nodeType": "YulLiteral",
																		"src": "7887:24:13",
																		"type": "",
																		"value": "Already in same status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7860:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7860:6:13"
																},
																"nativeSrc": "7860:52:13",
																"nodeType": "YulFunctionCall",
																"src": "7860:52:13"
															},
															"nativeSrc": "7860:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "7860:52:13"
														},
														{
															"nativeSrc": "7921:26:13",
															"nodeType": "YulAssignment",
															"src": "7921:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7933:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7933:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7944:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7944:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7929:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7929:3:13"
																},
																"nativeSrc": "7929:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7929:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7921:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7921:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1bb34286905b9621b4b62da46af3cd2b17f8f35925c44cf938b33cc057917e9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7607:346:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7758:9:13",
														"nodeType": "YulTypedName",
														"src": "7758:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7772:4:13",
														"nodeType": "YulTypedName",
														"src": "7772:4:13",
														"type": ""
													}
												],
												"src": "7607:346:13"
											},
											{
												"body": {
													"nativeSrc": "8081:161:13",
													"nodeType": "YulBlock",
													"src": "8081:161:13",
													"statements": [
														{
															"nativeSrc": "8091:26:13",
															"nodeType": "YulAssignment",
															"src": "8091:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8103:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8103:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8114:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8114:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8099:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8099:3:13"
																},
																"nativeSrc": "8099:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8099:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8091:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8091:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8133:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8133:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8148:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8148:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8164:3:13",
																								"nodeType": "YulLiteral",
																								"src": "8164:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8169:1:13",
																								"nodeType": "YulLiteral",
																								"src": "8169:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8160:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8160:3:13"
																						},
																						"nativeSrc": "8160:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8160:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8173:1:13",
																						"nodeType": "YulLiteral",
																						"src": "8173:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8156:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8156:3:13"
																				},
																				"nativeSrc": "8156:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8156:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8144:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8144:3:13"
																		},
																		"nativeSrc": "8144:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8144:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8126:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8126:6:13"
																},
																"nativeSrc": "8126:51:13",
																"nodeType": "YulFunctionCall",
																"src": "8126:51:13"
															},
															"nativeSrc": "8126:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "8126:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8197:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8197:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8208:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8208:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8193:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8193:3:13"
																		},
																		"nativeSrc": "8193:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8193:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nativeSrc": "8227:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8227:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8220:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8220:6:13"
																				},
																				"nativeSrc": "8220:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8220:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8213:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8213:6:13"
																		},
																		"nativeSrc": "8213:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8213:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8186:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8186:6:13"
																},
																"nativeSrc": "8186:50:13",
																"nodeType": "YulFunctionCall",
																"src": "8186:50:13"
															},
															"nativeSrc": "8186:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "8186:50:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "7958:284:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8042:9:13",
														"nodeType": "YulTypedName",
														"src": "8042:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8053:6:13",
														"nodeType": "YulTypedName",
														"src": "8053:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8061:6:13",
														"nodeType": "YulTypedName",
														"src": "8061:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8072:4:13",
														"nodeType": "YulTypedName",
														"src": "8072:4:13",
														"type": ""
													}
												],
												"src": "7958:284:13"
											},
											{
												"body": {
													"nativeSrc": "8328:103:13",
													"nodeType": "YulBlock",
													"src": "8328:103:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8374:16:13",
																"nodeType": "YulBlock",
																"src": "8374:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8383:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8383:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8386:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8386:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8376:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8376:6:13"
																			},
																			"nativeSrc": "8376:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8376:12:13"
																		},
																		"nativeSrc": "8376:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8376:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8349:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8349:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8358:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8358:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8345:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8345:3:13"
																		},
																		"nativeSrc": "8345:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8345:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8370:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8370:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8341:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8341:3:13"
																},
																"nativeSrc": "8341:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8341:32:13"
															},
															"nativeSrc": "8338:52:13",
															"nodeType": "YulIf",
															"src": "8338:52:13"
														},
														{
															"nativeSrc": "8399:26:13",
															"nodeType": "YulAssignment",
															"src": "8399:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8415:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8415:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8409:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8409:5:13"
																},
																"nativeSrc": "8409:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8409:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8399:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8399:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "8247:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8294:9:13",
														"nodeType": "YulTypedName",
														"src": "8294:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8305:7:13",
														"nodeType": "YulTypedName",
														"src": "8305:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8317:6:13",
														"nodeType": "YulTypedName",
														"src": "8317:6:13",
														"type": ""
													}
												],
												"src": "8247:184:13"
											},
											{
												"body": {
													"nativeSrc": "8573:164:13",
													"nodeType": "YulBlock",
													"src": "8573:164:13",
													"statements": [
														{
															"nativeSrc": "8583:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8583:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8603:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8603:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8597:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8597:5:13"
																},
																"nativeSrc": "8597:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8597:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8587:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8587:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8625:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8625:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8634:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8634:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8642:4:13",
																				"nodeType": "YulLiteral",
																				"src": "8642:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8630:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8630:3:13"
																		},
																		"nativeSrc": "8630:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8630:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8649:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8649:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "8619:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8619:5:13"
																},
																"nativeSrc": "8619:37:13",
																"nodeType": "YulFunctionCall",
																"src": "8619:37:13"
															},
															"nativeSrc": "8619:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "8619:37:13"
														},
														{
															"nativeSrc": "8665:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8665:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8679:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8679:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8684:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8684:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8675:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8675:3:13"
																},
																"nativeSrc": "8675:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8675:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8669:2:13",
																	"nodeType": "YulTypedName",
																	"src": "8669:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "8707:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "8707:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8711:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8711:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8700:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8700:6:13"
																},
																"nativeSrc": "8700:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8700:13:13"
															},
															"nativeSrc": "8700:13:13",
															"nodeType": "YulExpressionStatement",
															"src": "8700:13:13"
														},
														{
															"nativeSrc": "8722:9:13",
															"nodeType": "YulAssignment",
															"src": "8722:9:13",
															"value": {
																"name": "_1",
																"nativeSrc": "8729:2:13",
																"nodeType": "YulIdentifier",
																"src": "8729:2:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8722:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8722:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8436:301:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8549:3:13",
														"nodeType": "YulTypedName",
														"src": "8549:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8554:6:13",
														"nodeType": "YulTypedName",
														"src": "8554:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8565:3:13",
														"nodeType": "YulTypedName",
														"src": "8565:3:13",
														"type": ""
													}
												],
												"src": "8436:301:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1856__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_b1471e8298fb0fdee6f4979056baf840dac83498fd0403a768190450218d14c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid alva address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5bec71c0a16c9cd7a466d8c8147fe1a528e182d277a5c381b3e448cb9518e898__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid xALVA address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"BlackListed User\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c7d6d2814c0e538a9dfcdf30584136cd8b783d78774c3c549658170a640f9728__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Can not unStake\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_c1bb34286905b9621b4b62da46af3cd2b17f8f35925c44cf938b33cc057917e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Already in same status\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"482": [
									{
										"length": 32,
										"start": 3414
									},
									{
										"length": 32,
										"start": 3455
									},
									{
										"length": 32,
										"start": 3779
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEF JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xB3D6E119 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xE0CEF1B0 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x91DB7B0D EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xA59F3E0C EQ PUSH2 0x29A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x67DFD4C9 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6AC10901 EQ PUSH2 0x20C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xC8E32D2 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x323BF9F0 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x3B0E0133 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x170 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x128 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x53F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x170 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x827 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x170 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0xBF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST PUSH2 0xCCB JUMP JUMPDEST PUSH0 PUSH2 0x352 PUSH2 0xD08 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x395 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3A3 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x3EB JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x3F4 CALLER PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x3FC PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616C76612061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642078414C56412061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0x516 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x528 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x531 DUP3 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x53B DUP3 DUP3 PUSH2 0xDF7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x548 PUSH2 0xEB8 JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x145D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x213630B1B5A634B9BA32B2102AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x4 SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x43616E206E6F7420756E5374616B65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x654 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x6F1 SWAP1 DUP6 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x767 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 POP CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x82F PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x838 PUSH0 PUSH2 0xF5C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x842 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xF814EAFA160E3546FC1EA6B8939A578EF5F64D31E04888BCD82E8CD9F9EC2909 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x213630B1B5A634B9BA32B2102AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x9C7 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0xA87 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA23 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xA40 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP5 PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xB58 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA93 DUP4 DUP7 PUSH2 0x13F5 JUMP JUMPDEST PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xB14 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP3 PUSH1 0x40 MLOAD PUSH2 0xB4E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0xB7F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBCF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF3 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC01 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 ISZERO ISZERO PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO SUB PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x416C726561647920696E2073616D6520737461747573 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x2F2EA19E5340217456E8ECB94895965BA2AFA084E4A94F9FC7C315B1478243B7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xCD3 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST PUSH2 0xD05 DUP2 PUSH2 0xF5C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD3A PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xD05 DUP2 PUSH2 0xFF1 JUMP JUMPDEST PUSH2 0x838 PUSH2 0xFCC JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xDD1 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDC5 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x145D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD05 PUSH2 0xF01 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE51 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE4E SWAP2 DUP2 ADD SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x145D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 EQ PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST PUSH2 0xEB3 DUP4 DUP4 PUSH2 0xFF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xF33 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFD4 PUSH2 0x104E JUMP JUMPDEST PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD3 PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x1002 DUP3 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1046 JUMPI PUSH2 0xEB3 DUP3 DUP3 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x53B PUSH2 0x113C JUMP JUMPDEST PUSH0 PUSH2 0x1057 PUSH2 0xD08 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x145D PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1133 DUP6 DUP4 DUP4 PUSH2 0x115B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1170 JUMPI PUSH2 0x116B DUP3 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x11B3 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1187 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x445 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x11CA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11B3 DUP3 PUSH2 0x11E3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1229 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1232 DUP5 PUSH2 0x11E3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1240 PUSH1 0x20 DUP6 ADD PUSH2 0x11E3 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1276 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x127F DUP4 PUSH2 0x11E3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x129A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x12AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12C4 JUMPI PUSH2 0x12C4 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12F3 JUMPI PUSH2 0x12F3 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x130A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1339 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD05 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1393 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x139C DUP4 PUSH2 0x11E3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x13AC DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD2C JUMPI PUSH2 0xD2C PUSH2 0x13B7 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD2C JUMPI PUSH2 0xD2C PUSH2 0x13B7 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1426 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11B3 DUP2 PUSH2 0x1375 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122000 LT 0xD CALLCODE SWAP13 0x2B PC STATICCALL 0xAC 0x25 0xD5 BLOBBASEFEE DIV 0xD2 SWAP13 CALLDATACOPY 0xE8 0xCF PUSH13 0x53916265E89DA6BBC81EE526FF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "323:3199:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;452:49;;;;;;;;;;-1:-1:-1;452:49:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:13;;;517:2;502:18;452:49:11;;;;;;;;961:428;;;;;;;;;;-1:-1:-1;961:428:11;;;;;:::i;:::-;;:::i;:::-;;402:18;;;;;;;;;;-1:-1:-1;402:18:11;;;;-1:-1:-1;;;;;402:18:11;;;;;;-1:-1:-1;;;;;1123:32:13;;;1105:51;;1093:2;1078:18;402::11;944:218:13;507:48:11;;;;;;;;;;-1:-1:-1;507:48:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1332:14:13;;1325:22;1307:41;;1295:2;1280:18;507:48:11;1167:187:13;4161:214:2;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;2201:546:11:-;;;;;;;;;;-1:-1:-1;2201:546:11;;;;;:::i;:::-;;:::i;426:19::-;;;;;;;;;;-1:-1:-1;426:19:11;;;;-1:-1:-1;;;;;426:19:11;;;3155:101:0;;;;;;;;;;;;;:::i;2441:144::-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;3228:174:11;;;;;;;;;;-1:-1:-1;3228:174:11;;;;;:::i;:::-;;:::i;1455:691::-;;;;;;;;;;-1:-1:-1;1455:691:11;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;562:27:11:-;;;;;;;;;;;;;;;;2951:245;;;;;;;;;;-1:-1:-1;2951:245:11;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;961:428:11:-;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;1094:26:11::1;1109:10;1094:14;:26::i;:::-;1130:24;:22;:24::i;:::-;-1:-1:-1::0;;;;;1173:19:11;::::1;1165:52;;;::::0;-1:-1:-1;;;1165:52:11;;4203:2:13;1165:52:11::1;::::0;::::1;4185:21:13::0;4242:2;4222:18;;;4215:30;-1:-1:-1;;;4261:18:13;;;4254:50;4321:18;;1165:52:11::1;;;;;;;;;-1:-1:-1::0;;;;;1235:20:11;::::1;1227:54;;;::::0;-1:-1:-1;;;1227:54:11;;4552:2:13;1227:54:11::1;::::0;::::1;4534:21:13::0;4591:2;4571:18;;;4564:30;-1:-1:-1;;;4610:18:13;;;4603:51;4671:18;;1227:54:11::1;4350:345:13::0;1227:54:11::1;1292:4;:20:::0;;-1:-1:-1;;;;;1292:20:11;;::::1;-1:-1:-1::0;;;;;;1292:20:11;;::::1;;::::0;;;;1322:22;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1354:12:::1;:28:::0;;;5064:101:1;;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;4853:50:13;;5140:14:1;;4841:2:13;4826:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;961:428:11;;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;2201:546:11:-;2274:10;2257:28;;;;:16;:28;;;;;;;;:36;;:28;:36;2249:65;;;;-1:-1:-1;;;2249:65:11;;5116:2:13;2249:65:11;;;5098:21:13;5155:2;5135:18;;;5128:30;-1:-1:-1;;;5174:18:13;;;5167:46;5230:18;;2249:65:11;4914:340:13;2249:65:11;2394:12;;2380:10;2365:26;;;;:14;:26;;;;;;:41;;2394:12;2365:41;:::i;:::-;2345:15;:62;;2324:124;;;;-1:-1:-1;;;2324:124:11;;5723:2:13;2324:124:11;;;5705:21:13;5762:2;5742:18;;;5735:30;-1:-1:-1;;;5781:18:13;;;5774:45;5836:18;;2324:124:11;5521:339:13;2324:124:11;2480:5;;:19;;;-1:-1:-1;;;2480:19:11;;;;2458;;-1:-1:-1;;;;;2480:5:11;;:17;;:19;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2509:18;2540:4;;:29;;-1:-1:-1;;;2540:29:11;;2563:4;2540:29;;;1105:51:13;2458:41:11;;-1:-1:-1;2509:18:11;;2458:41;;-1:-1:-1;;;;;2540:4:11;;:14;;1078:18:13;;2540:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2531:38;;:6;:38;:::i;:::-;2530:66;;;;:::i;:::-;2606:5;;2509:87;;-1:-1:-1;;;;;;2606:5:11;:14;966:10:3;2606:36:11;;-1:-1:-1;;;;;;2606:36:11;;;;;;;-1:-1:-1;;;;;6641:32:13;;;2606:36:11;;;6623:51:13;6690:18;;;6683:34;;;6596:18;;2606:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2652:4:11;;-1:-1:-1;;;;;2652:4:11;;-1:-1:-1;2652:13:11;;-1:-1:-1;966:10:3;2652:39:11;;-1:-1:-1;;;;;;2652:39:11;;;;;;;-1:-1:-1;;;;;6641:32:13;;;2652:39:11;;;6623:51:13;6690:18;;;6683:34;;;6596:18;;2652:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2707:33:11;;529:25:13;;;966:10:3;;2707:33:11;;517:2:13;502:18;2707:33:11;;;;;;;2239:508;;2201:546;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;3228:174:11:-;2334:13:0;:11;:13::i;:::-;3328:12:11::1;::::0;3311:45:::1;::::0;;7152:25:13;;;7208:2;7193:18;;7186:34;;;3311:45:11::1;::::0;7125:18:13;3311:45:11::1;;;;;;;3367:12;:28:::0;3228:174::o;1455:691::-;1529:10;1512:28;;;;:16;:28;;;;;;;;:36;;:28;:36;1504:65;;;;-1:-1:-1;;;1504:65:11;;5116:2:13;1504:65:11;;;5098:21:13;5155:2;5135:18;;;5128:30;-1:-1:-1;;;5174:18:13;;;5167:46;5230:18;;1504:65:11;4914:340:13;1504:65:11;1579:17;1599:4;;:29;;-1:-1:-1;;;1599:29:11;;1622:4;1599:29;;;1105:51:13;-1:-1:-1;;;;;1599:4:11;;;;:14;;1078:18:13;;1599:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1579:49;;1638:19;1660:5;;;;;;;;;-1:-1:-1;;;;;1660:5:11;-1:-1:-1;;;;;1660:17:11;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1638:41;-1:-1:-1;1693:16:11;;;:34;;-1:-1:-1;1713:14:11;;1693:34;1689:332;;;1743:5;;-1:-1:-1;;;;;1743:5:11;:10;966::3;1743:33:11;;-1:-1:-1;;;;;;1743:33:11;;;;;;;-1:-1:-1;;;;;6641:32:13;;;1743:33:11;;;6623:51:13;6690:18;;;6683:34;;;6596:18;;1743:33:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:12;966:10:3;;887:96;1801:12:11;-1:-1:-1;;;;;1795:28:11;;1815:7;1795:28;;;;529:25:13;;517:2;502:18;;383:177;1795:28:11;;;;;;;;1689:332;;;1854:18;1901:9;1876:21;1886:11;1876:7;:21;:::i;:::-;1875:35;;;;:::i;:::-;1924:5;;1854:56;;-1:-1:-1;;;;;;1924:5:11;:10;966::3;1924:36:11;;-1:-1:-1;;;;;;1924:36:11;;;;;;;-1:-1:-1;;;;;6641:32:13;;;1924:36:11;;;6623:51:13;6690:18;;;6683:34;;;6596:18;;1924:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:12;966:10:3;;887:96;1985:12:11;-1:-1:-1;;;;;1979:31:11;;1999:10;1979:31;;;;529:25:13;;517:2;502:18;;383:177;1979:31:11;;;;;;;;1840:181;1689:332;2045:10;2030:26;;;;:14;:26;;;;;2059:15;2030:44;;2084:4;-1:-1:-1;;;;;2084:4:11;:17;2102:12;966:10:3;;887:96;2102:12:11;2084:55;;-1:-1:-1;;;;;;2084:55:11;;;;;;;-1:-1:-1;;;;;7451:32:13;;;2084:55:11;;;7433:51:13;2124:4:11;7500:18:13;;;7493:60;7569:18;;;7562:34;;;7406:18;;2084:55:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1494:652;;1455:691;:::o;2951:245::-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;3040:23:11;::::1;;::::0;;;:16:::1;:23;::::0;;;;;:34;::::1;;:23;::::0;;::::1;:34;;::::0;3032:69:::1;;;::::0;-1:-1:-1;;;3032:69:11;;7809:2:13;3032:69:11::1;::::0;::::1;7791:21:13::0;7848:2;7828:18;;;7821:30;-1:-1:-1;;;7867:18:13;;;7860:52;7929:18;;3032:69:11::1;7607:346:13::0;3032:69:11::1;-1:-1:-1::0;;;;;3111:23:11;::::1;;::::0;;;:16:::1;:23;::::0;;;;;;;;:33;;-1:-1:-1;;3111:33:11::1;::::0;::::1;;::::0;;::::1;::::0;;;3160:29;;8126:51:13;;;8193:18;;;8186:50;3160:29:11::1;::::0;8099:18:13;3160:29:11::1;;;;;;;2951:245:::0;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;1105:51:13::0;1078:18;;3534:31:0::1;944:218:13::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;9071:205:1:-;9129:30;;3147:66;9186:27;9171:42;9071:205;-1:-1:-1;;9071:205:1:o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2970:67:2:-:0;6929:20:1;:18;:20::i;4578:312:2:-;4658:4;-1:-1:-1;;;;;4667:6:2;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:6;-1:-1:-1;;;;;1519:53:6;;1441:138;4728:32:2;-1:-1:-1;;;;;4728:42:2;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:2;;;;;;;;;;;3408:112:11;2334:13:0;:11;:13::i;6032:538:2:-;6149:17;-1:-1:-1;;;;;6131:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:2;;;;;;;;-1:-1:-1;;6131:52:2;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:2;;-1:-1:-1;;;;;1123:32:13;;6493:60:2;;;1105:51:13;1078:18;;6493:60:2;944:218:13;6127:437:2;-1:-1:-1;;;;;;;;;;;6225:40:2;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:2;;;;;529:25:13;;;502:18;;6292:34:2;383:177:13;6221:120:2;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:2;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:2;;;;;;;;;;;2658:162:0;966:10:3;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;1105:51:13;1078:18;;2763:40:0;944:218:13;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;7082:141:1:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;1980:235:0;6929:20:1;:18;:20::i;2264:344:6:-;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:6;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;1671:281:6:-;1748:17;-1:-1:-1;;;;;1748:29:6;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:6;;-1:-1:-1;;;;;1123:32:13;;1805:47:6;;;1105:51:13;1078:18;;1805:47:6;944:218:13;1744:119:6;-1:-1:-1;;;;;;;;;;;1872:73:6;;-1:-1:-1;;;;;;1872:73:6;-1:-1:-1;;;;;1872:73:6;;;;;;;;;;1671:281::o;3916:253:8:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:8;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:8:o;6113:122:6:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:6;;;;;;;;;;;4437:582:8;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:8;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:8;;-1:-1:-1;;;;;1123:32:13;;4933:24:8;;;1105:51:13;1078:18;;4933:24:8;944:218:13;4853:119:8;-1:-1:-1;4992:10:8;4605:408;4437:582;;;;;:::o;5559:487::-;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:8;;;;;;;;;;;14:173:13;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:374::-;642:6;650;658;711:2;699:9;690:7;686:23;682:32;679:52;;;727:1;724;717:12;679:52;750:29;769:9;750:29;:::i;:::-;740:39;;798:38;832:2;821:9;817:18;798:38;:::i;:::-;565:374;;788:48;;-1:-1:-1;;;905:2:13;890:18;;;;877:32;;565:374::o;1359:127::-;1420:10;1415:3;1411:20;1408:1;1401:31;1451:4;1448:1;1441:15;1475:4;1472:1;1465:15;1491:1018;1568:6;1576;1629:2;1617:9;1608:7;1604:23;1600:32;1597:52;;;1645:1;1642;1635:12;1597:52;1668:29;1687:9;1668:29;:::i;:::-;1658:39;;1748:2;1737:9;1733:18;1720:32;1775:18;1767:6;1764:30;1761:50;;;1807:1;1804;1797:12;1761:50;1830:22;;1883:4;1875:13;;1871:27;-1:-1:-1;1861:55:13;;1912:1;1909;1902:12;1861:55;1952:2;1939:16;1978:18;1970:6;1967:30;1964:56;;;2000:18;;:::i;:::-;2049:2;2043:9;2141:2;2103:17;;-1:-1:-1;;2099:31:13;;;2132:2;2095:40;2091:54;2079:67;;2176:18;2161:34;;2197:22;;;2158:62;2155:88;;;2223:18;;:::i;:::-;2259:2;2252:22;2283;;;2324:15;;;2341:2;2320:24;2317:37;-1:-1:-1;2314:57:13;;;2367:1;2364;2357:12;2314:57;2423:6;2418:2;2414;2410:11;2405:2;2397:6;2393:15;2380:50;2476:1;2471:2;2462:6;2454;2450:19;2446:28;2439:39;2497:6;2487:16;;;;;1491:1018;;;;;:::o;2696:226::-;2755:6;2808:2;2796:9;2787:7;2783:23;2779:32;2776:52;;;2824:1;2821;2814:12;2776:52;-1:-1:-1;2869:23:13;;2696:226;-1:-1:-1;2696:226:13:o;3135:418::-;3284:2;3273:9;3266:21;3247:4;3316:6;3310:13;3359:6;3354:2;3343:9;3339:18;3332:34;3418:6;3413:2;3405:6;3401:15;3396:2;3385:9;3381:18;3375:50;3474:1;3469:2;3460:6;3449:9;3445:22;3441:31;3434:42;3544:2;3537;3533:7;3528:2;3520:6;3516:15;3512:29;3501:9;3497:45;3493:54;3485:62;;;3135:418;;;;:::o;3558:118::-;3644:5;3637:13;3630:21;3623:5;3620:32;3610:60;;3666:1;3663;3656:12;3681:315;3746:6;3754;3807:2;3795:9;3786:7;3782:23;3778:32;3775:52;;;3823:1;3820;3813:12;3775:52;3846:29;3865:9;3846:29;:::i;:::-;3836:39;;3925:2;3914:9;3910:18;3897:32;3938:28;3960:5;3938:28;:::i;:::-;3985:5;3975:15;;;3681:315;;;;;:::o;5259:127::-;5320:10;5315:3;5311:20;5308:1;5301:31;5351:4;5348:1;5341:15;5375:4;5372:1;5365:15;5391:125;5456:9;;;5477:10;;;5474:36;;;5490:18;;:::i;5865:184::-;5935:6;5988:2;5976:9;5967:7;5963:23;5959:32;5956:52;;;6004:1;6001;5994:12;5956:52;-1:-1:-1;6027:16:13;;5865:184;-1:-1:-1;5865:184:13:o;6054:168::-;6127:9;;;6158;;6175:15;;;6169:22;;6155:37;6145:71;;6196:18;;:::i;6227:217::-;6267:1;6293;6283:132;;6337:10;6332:3;6328:20;6325:1;6318:31;6372:4;6369:1;6362:15;6400:4;6397:1;6390:15;6283:132;-1:-1:-1;6429:9:13;;6227:217::o;6728:245::-;6795:6;6848:2;6836:9;6827:7;6823:23;6819:32;6816:52;;;6864:1;6861;6854:12;6816:52;6896:9;6890:16;6915:28;6937:5;6915:28;:::i;8436:301::-;8565:3;8603:6;8597:13;8649:6;8642:4;8634:6;8630:17;8625:3;8619:37;8711:1;8675:16;;8700:13;;;-1:-1:-1;8675:16:13;8436:301;-1:-1:-1;8436:301:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1059600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ALVA()": "2403",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"blackListAddress(address)": "2618",
								"blackListUser(address,bool)": "30550",
								"enter(uint256)": "infinite",
								"initialize(address,address,uint256)": "infinite",
								"leave(uint256)": "infinite",
								"lockedPeriod()": "2327",
								"owner()": "2375",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28453",
								"updateLockPeriod(uint256)": "28023",
								"upgradeToAndCall(address,bytes)": "infinite",
								"userLockPeriod(address)": "2529",
								"xALVA()": "2425"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 323,
									"end": 3522,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 902,
									"end": 955,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 902,
									"end": 955,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 902,
									"end": 955,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 902,
									"end": 955,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 955,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 902,
									"end": 955,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 955,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 955,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 902,
									"end": 955,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 955,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 926,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 926,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 926,
									"end": 948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 926,
									"end": 948,
									"name": "tag",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 926,
									"end": 948,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7709,
									"end": 8131,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7709,
									"end": 8131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3147,
									"end": 3213,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "PUSH",
									"source": 1,
									"value": "10000000000000000"
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7898,
									"end": 7913,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 7959,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7894,
									"end": 7970,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7997,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 8017,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8033,
									"end": 8066,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8085,
									"end": 8114,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7979,
									"end": 8125,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7758,
									"end": 8131,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7709,
									"end": 8131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "482"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 3522,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000100df29c2b58faac25d54a04d29c37e8cf6c53916265e89da6bbc81ee526ff64736f6c634300081e0033",
									".code": [
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "AD3CB1CC"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "AD3CB1CC"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "B3D6E119"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "E0CEF1B0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "91DB7B0D"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "A59F3E0C"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "4F1EF286"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "4F1EF286"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "52D1902D"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "67DFD4C9"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "6AC10901"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "C8E32D2"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "1794BB3C"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "323BF9F0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "3B0E0133"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3522,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 452,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 452,
											"end": 501,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 452,
											"end": 501,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 961,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 961,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 402,
											"end": 420,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 944,
											"end": 1162,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 507,
											"end": 555,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1346,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1332,
											"end": 1346,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1347,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1307,
											"end": 1348,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1307,
											"end": 1348,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1167,
											"end": 1354,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2201,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2201,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 426,
											"end": 445,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 426,
											"end": 445,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 426,
											"end": 445,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 426,
											"end": 445,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 426,
											"end": 445,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 426,
											"end": 445,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 426,
											"end": 445,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 426,
											"end": 445,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 3228,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3228,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1455,
											"end": 2146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1455,
											"end": 2146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 562,
											"end": 589,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 562,
											"end": 589,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 562,
											"end": 589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 562,
											"end": 589,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 562,
											"end": 589,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 562,
											"end": 589,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 562,
											"end": 589,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 2951,
											"end": 3196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 2951,
											"end": 3196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1109,
											"end": 1119,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1094,
											"end": 1120,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1130,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1130,
											"end": 1154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1192,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4205,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4206,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4244,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 4222,
											"end": 4240,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4222,
											"end": 4240,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4240,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4215,
											"end": 4245,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420616C76612061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4254,
											"end": 4304,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4321,
											"end": 4339,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4321,
											"end": 4339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1165,
											"end": 1217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1255,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1227,
											"end": 1281,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1227,
											"end": 1281,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1227,
											"end": 1281,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1281,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1227,
											"end": 1281,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1281,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4534,
											"end": 4555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4593,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642078414C56412061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 4654,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 4350,
											"end": 4695,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1227,
											"end": 1281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1312,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1312,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1312,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1354,
											"end": 1366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1354,
											"end": 1382,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1354,
											"end": 1382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1354,
											"end": 1382,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4853,
											"end": 4903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 4903,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4843,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4826,
											"end": 4844,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2284,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2285,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5118,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5098,
											"end": 5119,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5155,
											"end": 5157,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 5135,
											"end": 5153,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5135,
											"end": 5153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5135,
											"end": 5153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5128,
											"end": 5158,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "213630B1B5A634B9BA32B2102AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5167,
											"end": 5213,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 5248,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5230,
											"end": 5248,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 4914,
											"end": 5254,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2380,
											"end": 2390,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2379,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 2365,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2360,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5723,
											"end": 5725,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5705,
											"end": 5726,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5735,
											"end": 5765,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E206E6F7420756E5374616B65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5781,
											"end": 5799,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5781,
											"end": 5799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5799,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5774,
											"end": 5819,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5854,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5836,
											"end": 5854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 5521,
											"end": 5860,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2324,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2485,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2485,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2480,
											"end": 2485,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2485,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2497,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 2480,
											"end": 2497,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2485,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2480,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 2480,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2567,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2499,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2499,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2499,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2554,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 2540,
											"end": 2554,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2540,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2531,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2531,
											"end": 2569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2531,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2531,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2531,
											"end": 2569,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2531,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2530,
											"end": 2596,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2596,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2530,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2596,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2530,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2611,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2606,
											"end": 2611,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2596,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2596,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2611,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2620,
											"name": "PUSH",
											"source": 11,
											"value": "79CC6790"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6623,
											"end": 6674,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6614,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6596,
											"end": 6614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2652,
											"end": 2656,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2656,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2652,
											"end": 2656,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2656,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6623,
											"end": 6674,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6614,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6596,
											"end": 6614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 2652,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 2652,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "PUSH",
											"source": 11,
											"value": "85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD"
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2740,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2239,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3228,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3328,
											"end": 3340,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3356,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3356,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7152,
											"end": 7177,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7152,
											"end": 7177,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7152,
											"end": 7177,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7208,
											"end": 7210,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7211,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7193,
											"end": 7211,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7186,
											"end": 7220,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7186,
											"end": 7220,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7186,
											"end": 7220,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F814EAFA160E3546FC1EA6B8939A578EF5F64D31E04888BCD82E8CD9F9EC2909"
										},
										{
											"begin": 3311,
											"end": 3356,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3356,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3356,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3356,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 3367,
											"end": 3379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3395,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1529,
											"end": 1539,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1528,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1548,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1548,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 1548,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5118,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5098,
											"end": 5119,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5155,
											"end": 5157,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 5135,
											"end": 5153,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5135,
											"end": 5153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5135,
											"end": 5153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5128,
											"end": 5158,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "213630B1B5A634B9BA32B2102AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5167,
											"end": 5213,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 5248,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5230,
											"end": 5248,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 4914,
											"end": 5254,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1579,
											"end": 1596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1622,
											"end": 1626,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1613,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1599,
											"end": 1613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1599,
											"end": 1628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 1599,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1579,
											"end": 1628,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1579,
											"end": 1628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1660,
											"end": 1677,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1677,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1660,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1693,
											"end": 1709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1693,
											"end": 1709,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1693,
											"end": 1709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1727,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1727,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1689,
											"end": 2021,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1689,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1689,
											"end": 2021,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1748,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1743,
											"end": 1748,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1743,
											"end": 1748,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1753,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6623,
											"end": 6674,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6614,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6596,
											"end": 6614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1813,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 1801,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "PUSH",
											"source": 11,
											"value": "EBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A"
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1795,
											"end": 1823,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1689,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1689,
											"end": 2021,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1689,
											"end": 2021,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1689,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1910,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 1886,
											"end": 1897,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1876,
											"end": 1897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 1875,
											"end": 1910,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1910,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1875,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1910,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 1875,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1910,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1910,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1934,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6673,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6623,
											"end": 6674,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6614,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6596,
											"end": 6614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "PUSH",
											"source": 11,
											"value": "EBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A"
										},
										{
											"begin": 1999,
											"end": 2009,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2010,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1840,
											"end": 2021,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1689,
											"end": 2021,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1689,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2055,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2044,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2074,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2074,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2101,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7451,
											"end": 7483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7451,
											"end": 7483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7451,
											"end": 7483,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7433,
											"end": 7484,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2124,
											"end": 2128,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7493,
											"end": 7553,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7562,
											"end": 7596,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7562,
											"end": 7596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7562,
											"end": 7596,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 2084,
											"end": 2139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 2146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 2146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 2146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3040,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3074,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3074,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3074,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3074,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3074,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3074,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 3032,
											"end": 3101,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3032,
											"end": 3101,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3101,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3101,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3032,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3032,
											"end": 3101,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7850,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 7828,
											"end": 7846,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7828,
											"end": 7846,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 7846,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 7851,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416C726561647920696E2073616D6520737461747573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7860,
											"end": 7912,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 7607,
											"end": 7953,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 3032,
											"end": 3101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3134,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3111,
											"end": 3134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3144,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3189,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3189,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8126,
											"end": 8177,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8126,
											"end": 8177,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8126,
											"end": 8177,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8193,
											"end": 8211,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8193,
											"end": 8211,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8193,
											"end": 8211,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8186,
											"end": 8236,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2F2EA19E5340217456E8ECB94895965BA2AFA084E4A94F9FC7C315B1478243B7"
										},
										{
											"begin": 3160,
											"end": 3189,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 3196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 944,
											"end": 1162,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "482"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "482"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3520,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 3408,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 6131,
											"end": 6183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 944,
											"end": 1162,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 502,
											"end": 520,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 6384,
											"end": 6401,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 6354,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6184,
											"end": 6419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5096,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "482"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 944,
											"end": 1162,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 944,
											"end": 1162,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 944,
											"end": 1162,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 565,
											"end": 939,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 565,
											"end": 939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 642,
											"end": 648,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 664,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 713,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 699,
											"end": 708,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 690,
											"end": 697,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 682,
											"end": 714,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 679,
											"end": 731,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 679,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 679,
											"end": 731,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 727,
											"end": 728,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 729,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 679,
											"end": 731,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 679,
											"end": 731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 750,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 750,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 750,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 750,
											"end": 779,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 750,
											"end": 779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 779,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 740,
											"end": 779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 798,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 830,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 798,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 798,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 798,
											"end": 836,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 798,
											"end": 836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 565,
											"end": 939,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 565,
											"end": 939,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 788,
											"end": 836,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 788,
											"end": 836,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 905,
											"end": 907,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 890,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 890,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 890,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 877,
											"end": 909,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 565,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1486,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 1359,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1430,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 1415,
											"end": 1418,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1432,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1451,
											"end": 1455,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1456,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1475,
											"end": 1479,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1480,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1582,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1626,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1608,
											"end": 1615,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1649,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 1597,
											"end": 1649,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1649,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 1597,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 1687,
											"end": 1696,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 1668,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1697,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 1668,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1750,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1794,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1811,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 1761,
											"end": 1811,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1809,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1811,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 1761,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1898,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1952,
											"end": 1954,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1939,
											"end": 1955,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1996,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1970,
											"end": 1976,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2020,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 1964,
											"end": 2020,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 2000,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2141,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2099,
											"end": 2130,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2099,
											"end": 2130,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2132,
											"end": 2134,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 2095,
											"end": 2135,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2145,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2079,
											"end": 2146,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2079,
											"end": 2146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2195,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2195,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2220,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 2223,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2259,
											"end": 2261,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2274,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2283,
											"end": 2305,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2283,
											"end": 2305,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2283,
											"end": 2305,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2339,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2339,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2344,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2354,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2314,
											"end": 2371,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 2314,
											"end": 2371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2369,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2371,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 2314,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2414,
											"end": 2416,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2410,
											"end": 2421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2380,
											"end": 2430,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2476,
											"end": 2477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2473,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2462,
											"end": 2468,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2450,
											"end": 2469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2446,
											"end": 2474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2439,
											"end": 2478,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 2509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2696,
											"end": 2922,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 2696,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2810,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2787,
											"end": 2794,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2783,
											"end": 2806,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2779,
											"end": 2811,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2826,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2869,
											"end": 2892,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2869,
											"end": 2892,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2696,
											"end": 2922,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2696,
											"end": 2922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3553,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3135,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3284,
											"end": 3286,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3251,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3322,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3310,
											"end": 3323,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3354,
											"end": 3356,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3352,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3339,
											"end": 3357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3366,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3418,
											"end": 3424,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3413,
											"end": 3415,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3401,
											"end": 3416,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3398,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3394,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3425,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3475,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3467,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3441,
											"end": 3472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3434,
											"end": 3476,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3539,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3533,
											"end": 3540,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3520,
											"end": 3526,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3512,
											"end": 3541,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3510,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3497,
											"end": 3542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3547,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3553,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3553,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3553,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3553,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3558,
											"end": 3676,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 3558,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3649,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3637,
											"end": 3650,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3651,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 3628,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3620,
											"end": 3652,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 3610,
											"end": 3670,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3666,
											"end": 3667,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3664,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3668,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3996,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 3681,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3809,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3795,
											"end": 3804,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3786,
											"end": 3793,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3778,
											"end": 3810,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3775,
											"end": 3827,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3775,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 3775,
											"end": 3827,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3823,
											"end": 3824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3825,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3775,
											"end": 3827,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 3775,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 3865,
											"end": 3874,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 3846,
											"end": 3875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3875,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 3846,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3875,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3897,
											"end": 3929,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3938,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 3960,
											"end": 3965,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3938,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 3938,
											"end": 3966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3938,
											"end": 3966,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 3938,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3985,
											"end": 3990,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3996,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3996,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3996,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5259,
											"end": 5386,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 5259,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5330,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5315,
											"end": 5318,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5309,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5301,
											"end": 5332,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5351,
											"end": 5355,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5348,
											"end": 5349,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5341,
											"end": 5356,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5375,
											"end": 5379,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5380,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5516,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 5391,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5477,
											"end": 5487,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5477,
											"end": 5487,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5477,
											"end": 5487,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5474,
											"end": 5510,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5474,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 5474,
											"end": 5510,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 5490,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 6049,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 5865,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5935,
											"end": 5941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 5990,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5976,
											"end": 5985,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5967,
											"end": 5974,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5986,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5959,
											"end": 5991,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5956,
											"end": 6008,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5956,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 5956,
											"end": 6008,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6005,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6002,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5994,
											"end": 6006,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5956,
											"end": 6008,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 5956,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6027,
											"end": 6043,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6027,
											"end": 6043,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 6049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5865,
											"end": 6049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6222,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 6054,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6136,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6136,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6136,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6167,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6190,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 6192,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 6145,
											"end": 6216,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 6196,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 6196,
											"end": 6214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6227,
											"end": 6444,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 6227,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6267,
											"end": 6268,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6283,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 6283,
											"end": 6415,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6337,
											"end": 6347,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 6332,
											"end": 6335,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 6328,
											"end": 6348,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6372,
											"end": 6376,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 6369,
											"end": 6370,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6362,
											"end": 6377,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6397,
											"end": 6398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6405,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6283,
											"end": 6415,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 6283,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6429,
											"end": 6438,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6429,
											"end": 6438,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6227,
											"end": 6444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6728,
											"end": 6973,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 6728,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6801,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6848,
											"end": 6850,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6845,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6827,
											"end": 6834,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6823,
											"end": 6846,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6819,
											"end": 6851,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6868,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 6816,
											"end": 6868,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6866,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6868,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 6816,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6896,
											"end": 6905,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6890,
											"end": 6906,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6915,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 6937,
											"end": 6942,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6915,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 6915,
											"end": 6943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8436,
											"end": 8737,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 8436,
											"end": 8737,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8565,
											"end": 8568,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8603,
											"end": 8609,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8642,
											"end": 8646,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8640,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8630,
											"end": 8647,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8625,
											"end": 8628,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 8711,
											"end": 8712,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8675,
											"end": 8691,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8675,
											"end": 8691,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8713,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8713,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8675,
											"end": 8691,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8436,
											"end": 8737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8436,
											"end": 8737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/AlvaraDao.sol",
								"contracts/interfaces/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ALVA()": "323bf9f0",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"blackListAddress(address)": "3b0e0133",
							"blackListUser(address,bool)": "e0cef1b0",
							"enter(uint256)": "a59f3e0c",
							"initialize(address,address,uint256)": "1794bb3c",
							"leave(uint256)": "67dfd4c9",
							"lockedPeriod()": "b3d6e119",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateLockPeriod(uint256)": "91db7b0d",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"userLockPeriod(address)": "0c8e32d2",
							"xALVA()": "6ac10901"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"BlackListUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"xALVAReceived\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unstaker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"alvaReceived\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lockedPeriod\",\"type\":\"uint256\"}],\"name\":\"UpdateLockPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALVA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blackListAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"blackListUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_alva\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xalva\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockedPeriod\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_share\",\"type\":\"uint256\"}],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockedPeriod\",\"type\":\"uint256\"}],\"name\":\"updateLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xALVA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"blackListUser(address,bool)\":{\"details\":\"Used only by admin or owner, used to blacklist any user in any emergency case\",\"params\":{\"_status\":\"status of user\",\"_user\":\"address of blacklistef user\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlvaraDao.sol\":\"AlvaraDao\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/AlvaraDao.sol\":{\"keccak256\":\"0x3cef12f7c10c3c505b1b9b589a28d7f907701ea4c86a0bf823359b2e80ff2800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412d0cc2b346464fa4259c08911579d4765efe1cb1062afeea886315841d8f5f\",\"dweb:/ipfs/QmZsjZaWnCPgNxYaGFh3GtyZEhZDjSCW74ZtGd7FoJoVSf\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x8bc93fd43424907389fc5a562f9ff329b67b2701c99c036a655ae14503880bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bd7d0172b4a5d639fc48a7a159880510e30073ff03d782a238d4073b5c19bf8\",\"dweb:/ipfs/QmQ2zryoqxdUxSjCtrwu6bkY5Bwo86fZJY3EEiP3TU85mB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1446,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "ALVA",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)1856"
							},
							{
								"astId": 1449,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "xALVA",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)1856"
							},
							{
								"astId": 1453,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "userLockPeriod",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1457,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "blackListAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1459,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "lockedPeriod",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)1856": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"burnTokens(address,uint256)": "0d1118ce",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x8bc93fd43424907389fc5a562f9ff329b67b2701c99c036a655ae14503880bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bd7d0172b4a5d639fc48a7a159880510e30073ff03d782a238d4073b5c19bf8\",\"dweb:/ipfs/QmQ2zryoqxdUxSjCtrwu6bkY5Bwo86fZJY3EEiP3TU85mB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 691,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 690,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 463,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 690,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								690,
								462
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 462,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 462,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 462,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 462,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 462,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 462,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 454,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 459,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 205,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 462,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "2349:6929:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1015
						],
						"IERC1822Proxiable": [
							721
						],
						"Initializable": [
							462
						],
						"UUPSUpgradeable": [
							644
						]
					},
					"id": 645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 722,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 465,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 721,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 1016,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1015,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 463,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 472,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "1023:13:2"
									},
									"id": 473,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 474,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 721,
										"src": "1038:17:2"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644,
								721,
								462
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 482,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 477,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 480,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 479,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 478,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 481,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 486,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 484,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 489,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 494,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 491,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 497,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 500,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 502,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 508,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 510,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 513,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 512,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 644,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 518,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 644,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										720
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 530,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 736,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 529,
												"id": 532,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 525,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 510,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 644,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 544,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 548,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 541,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 644,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "4623:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 560,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 558,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 562,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4667:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 564,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "4728:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "4728:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 567,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4764:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "4633:251:2",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "4823:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 570,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4844:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 572,
															"nodeType": "RevertStatement",
															"src": "4837:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:2"
									},
									"scope": 644,
									"src": "4578:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "5059:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 582,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 584,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "5090:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "5069:145:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "5098:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 586,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "5174:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "5167:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:2"
									},
									"scope": 644,
									"src": "5007:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5630:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:2"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:2"
									},
									"scope": 644,
									"src": "5603:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "6117:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 631,
															"nodeType": "Block",
															"src": "6207:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 614,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "6225:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 615,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6233:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 736,
																			"src": "6233:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 623,
																	"nodeType": "IfStatement",
																	"src": "6221:120:2",
																	"trueBody": {
																		"id": 622,
																		"nodeType": "Block",
																		"src": "6267:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 619,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 612,
																							"src": "6321:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 618,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6292:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 621,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 627,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6384:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 628,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "6403:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 624,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6354:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 830,
																			"src": "6354:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 630,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:2"
																}
															]
														},
														"errorName": "",
														"id": 632,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 613,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 612,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 632,
																	"src": "6193:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 611,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:2"
														},
														"src": "6184:235:2"
													},
													{
														"block": {
															"id": 639,
															"nodeType": "Block",
															"src": "6426:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 636,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6535:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 633,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6493:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 741,
																			"src": "6493:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 638,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:2"
																}
															]
														},
														"errorName": "",
														"id": 640,
														"nodeType": "TryCatchClause",
														"src": "6420:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 607,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 606,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "6131:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$721_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$721",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "6131:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 641,
												"nodeType": "TryStatement",
												"src": "6127:437:2"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6063:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6090:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:2"
									},
									"scope": 644,
									"src": "6032:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 645,
							"src": "986:5586:2",
							"usedErrors": [
								211,
								214,
								489,
								494,
								741,
								754,
								1035,
								1298
							],
							"usedEvents": [
								219,
								698
							]
						}
					],
					"src": "115:6458:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"Initializable": [
							462
						]
					},
					"id": 691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 463,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 647,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 650,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "728:13:3"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 649,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690,
								462
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 690,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 659,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 690,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 668,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 667,
												"id": 670,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 690,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 677,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 676,
												"id": 679,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 690,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 685,
												"id": 687,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 690,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 691,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:4",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "IERC1967",
							"nameLocation": "245:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:4",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 698,
									"name": "Upgraded",
									"nameLocation": "339:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "348:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:4"
									},
									"src": "333:47:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:4",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 705,
									"name": "AdminChanged",
									"nameLocation": "464:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "477:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "500:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:4"
									},
									"src": "458:60:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:4",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 710,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "609:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:4"
									},
									"src": "588:45:4"
								}
							],
							"scope": 712,
							"src": "235:400:4",
							"usedErrors": [],
							"usedEvents": [
								698,
								705,
								710
							]
						}
					],
					"src": "107:529:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							721
						]
					},
					"id": 722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:5",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:5"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "869:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:5"
									},
									"scope": 721,
									"src": "821:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 722,
							"src": "344:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1285
						],
						"ERC1967Utils": [
							1015
						],
						"IBeacon": [
							1025
						],
						"IERC1967": [
							711
						],
						"StorageSlot": [
							1431
						]
					},
					"id": 1016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1026,
							"src": "140:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 724,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 712,
							"src": "187:55:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 726,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "195:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1286,
							"src": "243:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 728,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1285,
										"src": "251:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1432,
							"src": "292:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 730,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1431,
										"src": "300:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 732,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:6",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1015,
							"linearizedBaseContracts": [
								1015
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:6",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 736,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "763:114:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 734,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 735,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:6",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 741,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "993:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:6"
									},
									"src": "958:59:6"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:6",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 746,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1114:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:6"
									},
									"src": "1088:41:6"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:6",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 751,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1228:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:6"
									},
									"src": "1201:43:6"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:6",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 754,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:6"
									},
									"src": "1337:26:6"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "1502:77:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 762,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "1546:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 760,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "1519:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "1519:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "1519:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 759,
												"id": 765,
												"nodeType": "Return",
												"src": "1512:60:6"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1493:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:6"
									},
									"scope": 1015,
									"src": "1441:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "1734:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 773,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1748:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "1744:119:6",
												"trueBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "1784:79:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 779,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "1834:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 778,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "1805:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 781,
															"nodeType": "RevertStatement",
															"src": "1798:54:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 787,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "1899:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 784,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "1872:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "1872:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "1872:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 790,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "1928:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:6"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:6",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1699:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:6"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:6"
									},
									"scope": 1015,
									"src": "1671:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "2345:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 803,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2374:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 802,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2355:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 809,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2425:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 806,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "2407:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:6",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 698,
														"src": "2407:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "EmitStatement",
												"src": "2402:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 812,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "2458:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "2559:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 824,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2573:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 826,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:6"
														}
													]
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "2454:148:6",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "2475:78:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 819,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "2518:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 820,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "2537:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 816,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "2489:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1285_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "2489:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:6",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2290:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2317:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:6"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:6"
									},
									"scope": 1015,
									"src": "2264:344:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:6",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 834,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "2829:105:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 832,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "3339:68:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 842,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "3383:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 840,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "3356:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "3356:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "3356:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 839,
												"id": 845,
												"nodeType": "Return",
												"src": "3349:51:6"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:6",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:6"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3330:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:6"
									},
									"scope": 1015,
									"src": "3287:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "3535:172:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 853,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3549:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 854,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "3545:91:6",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "3573:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 860,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 859,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "3594:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 865,
															"nodeType": "RevertStatement",
															"src": "3587:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 871,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "3672:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 868,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "3645:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "3645:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "3645:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 874,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3692:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:6"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:6",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3509:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:6"
									},
									"scope": 1015,
									"src": "3490:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "3875:94:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 887,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3912:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3924:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 884,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "3890:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:6",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "3890:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "3885:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3953:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 892,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3943:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:6"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "3848:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:6"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:6"
									},
									"scope": 1015,
									"src": "3827:142:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:6",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 901,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "4246:106:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 899,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 900,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "4468:69:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 909,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "4512:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 907,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "4485:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "4485:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "4485:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 906,
												"id": 912,
												"nodeType": "Return",
												"src": "4478:52:6"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:6",
										"text": " @dev Returns the current beacon."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:6"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4459:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:6"
									},
									"scope": 1015,
									"src": "4415:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "4667:390:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 920,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "4681:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "4677:95:6",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "4709:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 926,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "4751:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 925,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4730:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "4723:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 934,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4809:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 931,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "4782:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "4782:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "4782:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "4830:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:6"
											},
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "4850:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 940,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "4889:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 942,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "4881:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1025_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1025",
																"typeString": "contract IBeacon"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:6",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1024,
														"src": "4881:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 948,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "4930:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 958,
												"nodeType": "IfStatement",
												"src": "4926:125:6",
												"trueBody": {
													"id": 957,
													"nodeType": "Block",
													"src": "4969:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 954,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "5019:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 953,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "4990:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 956,
															"nodeType": "RevertStatement",
															"src": "4983:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:6",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4640:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:6"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:6"
									},
									"scope": 1015,
									"src": "4620:437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "5661:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5682:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "5671:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 975,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5731:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 972,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5707:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:6",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "5707:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "EmitStatement",
												"src": "5702:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 978,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "5756:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "5875:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 994,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "5889:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:6"
														}
													]
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "5752:166:6",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "5773:96:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 986,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "5824:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 985,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "5816:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1025_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1025",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:6",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1024,
																			"src": "5816:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 990,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "5853:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 982,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "5787:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1285_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "5787:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 992,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:6",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5614:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5633:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:6"
									},
									"scope": 1015,
									"src": "5582:342:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "6149:86:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1004,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "6159:70:6",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "6178:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1008,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "6199:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "6192:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:6",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:6"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:6"
									},
									"scope": 1015,
									"src": "6113:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1016,
							"src": "496:5741:6",
							"usedErrors": [
								741,
								746,
								751,
								754
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1025
						]
					},
					"id": 1026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1018,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1025,
							"linearizedBaseContracts": [
								1025
							],
							"name": "IBeacon",
							"nameLocation": "224:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:7"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:7"
									},
									"scope": 1025,
									"src": "411:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1026,
							"src": "214:257:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1285
						],
						"Errors": [
							1307
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1027,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 1308,
							"src": "127:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1028,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1307,
										"src": "135:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1030,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1285,
							"linearizedBaseContracts": [
								1285
							],
							"name": "Address",
							"nameLocation": "241:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1035,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:8"
									},
									"src": "335:39:8"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "1361:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1045,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1043,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1048,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1399:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "1371:125:8",
												"trueBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "1407:89:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1055,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1053,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "1478:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1050,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "1428:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1295,
																	"src": "1428:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1060,
															"nodeType": "RevertStatement",
															"src": "1421:64:8"
														}
													]
												}
											},
											{
												"assignments": [
													1064,
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "1507:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1063,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "1521:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1065,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1067,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1548:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1069,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1570:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:8"
											},
											{
												"condition": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:8",
													"subExpression": {
														"id": 1074,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "1596:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "IfStatement",
												"src": "1591:58:8",
												"trueBody": {
													"id": 1080,
													"nodeType": "Block",
													"src": "1605:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1077,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "1627:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1076,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "1619:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1079,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1309:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:8"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 1285,
									"src": "1290:365:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "2589:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1094,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2628:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2636:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1093,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "2606:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1098,
												"nodeType": "Return",
												"src": "2599:45:8"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2522:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2538:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:8"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2575:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:8"
									},
									"scope": 1285,
									"src": "2500:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "3088:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1114,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1112,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1117,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "3126:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "3098:123:8",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "3133:88:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1124,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1122,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1127,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "3204:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1119,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "3154:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1295,
																	"src": "3154:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1129,
															"nodeType": "RevertStatement",
															"src": "3147:63:8"
														}
													]
												}
											},
											{
												"assignments": [
													1133,
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "3231:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1132,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "3245:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1134,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"id": 1140,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "3298:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1136,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "3272:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1138,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "3291:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1144,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "3347:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1145,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "3355:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1146,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "3364:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1143,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "3320:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1148,
												"nodeType": "Return",
												"src": "3313:62:8"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3006:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3022:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3041:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:8"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3074:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:8"
									},
									"scope": 1285,
									"src": "2975:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "3621:154:8",
										"statements": [
											{
												"assignments": [
													1161,
													1163
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "3632:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1160,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1163,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "3646:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1162,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [
														{
															"id": 1166,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "3691:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3673:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3740:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "3748:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1172,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "3757:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1169,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "3713:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1174,
												"nodeType": "Return",
												"src": "3706:62:8"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3549:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3565:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:8"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3607:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:8"
									},
									"scope": 1285,
									"src": "3521:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "4013:156:8",
										"statements": [
											{
												"assignments": [
													1187,
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "4024:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1186,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "4038:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1188,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"arguments": [
														{
															"id": 1192,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "4085:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1190,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4065:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1196,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4134:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4142:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1198,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "4151:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1195,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "4107:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1200,
												"nodeType": "Return",
												"src": "4100:62:8"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3946:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3962:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:8"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3999:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:8"
									},
									"scope": 1285,
									"src": "3916:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "4595:424:8",
										"statements": [
											{
												"condition": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:8",
													"subExpression": {
														"id": 1214,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "4610:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1239,
													"nodeType": "Block",
													"src": "4669:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1221,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "4857:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1225,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1205,
																				"src": "4883:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1236,
															"nodeType": "IfStatement",
															"src": "4853:119:8",
															"trueBody": {
																"id": 1235,
																"nodeType": "Block",
																"src": "4908:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1232,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1205,
																					"src": "4950:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1231,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1035,
																				"src": "4933:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1234,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1237,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "4992:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1213,
															"id": 1238,
															"nodeType": "Return",
															"src": "4985:17:8"
														}
													]
												},
												"id": 1240,
												"nodeType": "IfStatement",
												"src": "4605:408:8",
												"trueBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "4619:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1217,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "4641:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1216,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "4633:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4482:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4506:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4528:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:8"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4581:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:8"
									},
									"scope": 1285,
									"src": "4437:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "5323:122:8",
										"statements": [
											{
												"condition": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:8",
													"subExpression": {
														"id": 1252,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "5338:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "5397:42:8",
													"statements": [
														{
															"expression": {
																"id": 1259,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "5418:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1251,
															"id": 1260,
															"nodeType": "Return",
															"src": "5411:17:8"
														}
													]
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "5333:106:8",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "5347:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1255,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5369:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1254,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "5361:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5247:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5261:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:8"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5309:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:8"
									},
									"scope": 1285,
									"src": "5221:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "5614:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1270,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "5690:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1281,
													"nodeType": "Block",
													"src": "5989:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1276,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "6010:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1298,
																	"src": "6010:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1280,
															"nodeType": "RevertStatement",
															"src": "6003:26:8"
														}
													]
												},
												"id": 1282,
												"nodeType": "IfStatement",
												"src": "5686:354:8",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "5713:270:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:8",
																"nodeType": "YulBlock",
																"src": "5840:133:8",
																"statements": [
																	{
																		"nativeSrc": "5858:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:8"
																			},
																			"nativeSrc": "5881:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:8",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:8",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:8"
																					},
																					"nativeSrc": "5922:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:8"
																			},
																			"nativeSrc": "5915:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:8"
																		},
																		"nativeSrc": "5915:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:8"
																	}
																]
															},
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1267,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1267,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1274,
															"nodeType": "InlineAssembly",
															"src": "5815:158:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5576:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:8"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:8"
									},
									"scope": 1285,
									"src": "5559:487:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1286,
							"src": "233:5815:8",
							"usedErrors": [
								1035
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1307
						]
					},
					"id": 1308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1288,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1307,
							"linearizedBaseContracts": [
								1307
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1295,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1298,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1301,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1306,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1308,
							"src": "411:484:9",
							"usedErrors": [
								1295,
								1298,
								1301,
								1306
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1431
						]
					},
					"id": 1432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1310,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1431,
							"linearizedBaseContracts": [
								1431
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1313,
									"members": [
										{
											"constant": false,
											"id": 1312,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1313,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1311,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1316,
									"members": [
										{
											"constant": false,
											"id": 1315,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "1517:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1314,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1488:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1319,
									"members": [
										{
											"constant": false,
											"id": 1318,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1319,
											"src": "1569:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1317,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1540:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1322,
									"members": [
										{
											"constant": false,
											"id": 1321,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1322,
											"src": "1624:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1320,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1595:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1325,
									"members": [
										{
											"constant": false,
											"id": 1324,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1325,
											"src": "1678:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1323,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1650:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1328,
									"members": [
										{
											"constant": false,
											"id": 1327,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1328,
											"src": "1731:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1326,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1703:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1331,
									"members": [
										{
											"constant": false,
											"id": 1330,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1331,
											"src": "1783:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1329,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1756:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "1983:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:10",
													"nodeType": "YulBlock",
													"src": "2018:38:10",
													"statements": [
														{
															"nativeSrc": "2032:14:10",
															"nodeType": "YulAssignment",
															"src": "2032:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:10",
																"nodeType": "YulIdentifier",
																"src": "2042:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1334,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1340,
												"nodeType": "InlineAssembly",
												"src": "1993:63:10"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1923:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:10"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1960:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1336,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1313,
														"src": "1960:11:10"
													},
													"referencedDeclaration": 1313,
													"src": "1960:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:10"
									},
									"scope": 1431,
									"src": "1899:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "2243:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:10",
													"nodeType": "YulBlock",
													"src": "2278:38:10",
													"statements": [
														{
															"nativeSrc": "2292:14:10",
															"nodeType": "YulAssignment",
															"src": "2292:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:10",
																"nodeType": "YulIdentifier",
																"src": "2302:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1349,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1345,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1351,
												"nodeType": "InlineAssembly",
												"src": "2253:63:10"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:10",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2183:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:10"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2220:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1316_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1347,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1316,
														"src": "2220:11:10"
													},
													"referencedDeclaration": 1316,
													"src": "2220:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1316_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:10"
									},
									"scope": 1431,
									"src": "2159:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "2503:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:10",
													"nodeType": "YulBlock",
													"src": "2538:38:10",
													"statements": [
														{
															"nativeSrc": "2552:14:10",
															"nodeType": "YulAssignment",
															"src": "2552:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:10",
																"nodeType": "YulIdentifier",
																"src": "2562:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1360,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1356,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1362,
												"nodeType": "InlineAssembly",
												"src": "2513:63:10"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:10",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2443:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:10"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2480:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1319_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1358,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1319,
														"src": "2480:11:10"
													},
													"referencedDeclaration": 1319,
													"src": "2480:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1319_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:10"
									},
									"scope": 1431,
									"src": "2419:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "2763:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:10",
													"nodeType": "YulBlock",
													"src": "2798:38:10",
													"statements": [
														{
															"nativeSrc": "2812:14:10",
															"nodeType": "YulAssignment",
															"src": "2812:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:10",
																"nodeType": "YulIdentifier",
																"src": "2822:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1371,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1367,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1373,
												"nodeType": "InlineAssembly",
												"src": "2773:63:10"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:10",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2703:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:10"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2740:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1322_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1369,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1322,
														"src": "2740:11:10"
													},
													"referencedDeclaration": 1322,
													"src": "2740:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1322_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:10"
									},
									"scope": 1431,
									"src": "2679:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "3020:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:10",
													"nodeType": "YulBlock",
													"src": "3055:38:10",
													"statements": [
														{
															"nativeSrc": "3069:14:10",
															"nodeType": "YulAssignment",
															"src": "3069:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:10",
																"nodeType": "YulIdentifier",
																"src": "3079:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1382,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1378,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1384,
												"nodeType": "InlineAssembly",
												"src": "3030:63:10"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:10",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2961:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:10"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2998:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1325_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1325,
														"src": "2998:10:10"
													},
													"referencedDeclaration": 1325,
													"src": "2998:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1325_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:10"
									},
									"scope": 1431,
									"src": "2938:161:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "3277:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:10",
													"nodeType": "YulBlock",
													"src": "3312:38:10",
													"statements": [
														{
															"nativeSrc": "3326:14:10",
															"nodeType": "YulAssignment",
															"src": "3326:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:10",
																"nodeType": "YulIdentifier",
																"src": "3336:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1393,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1389,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1395,
												"nodeType": "InlineAssembly",
												"src": "3287:63:10"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:10",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "3218:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1388,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "3255:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1391,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1328,
														"src": "3255:10:10"
													},
													"referencedDeclaration": 1328,
													"src": "3255:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:10"
									},
									"scope": 1431,
									"src": "3195:161:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "3558:85:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:10",
													"nodeType": "YulBlock",
													"src": "3593:44:10",
													"statements": [
														{
															"nativeSrc": "3607:20:10",
															"nodeType": "YulAssignment",
															"src": "3607:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:10",
																"nodeType": "YulIdentifier",
																"src": "3617:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1404,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1400,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1406,
												"nodeType": "InlineAssembly",
												"src": "3568:69:10"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3491:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:10"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3536:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1403,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1402,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1328,
														"src": "3536:10:10"
													},
													"referencedDeclaration": 1328,
													"src": "3536:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:10"
									},
									"scope": 1431,
									"src": "3468:175:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "3818:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:10",
													"nodeType": "YulBlock",
													"src": "3853:38:10",
													"statements": [
														{
															"nativeSrc": "3867:14:10",
															"nodeType": "YulAssignment",
															"src": "3867:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:10",
																"nodeType": "YulIdentifier",
																"src": "3877:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1415,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1411,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1417,
												"nodeType": "InlineAssembly",
												"src": "3828:63:10"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:10",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "3760:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:10"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "3797:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1413,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1331,
														"src": "3797:9:10"
													},
													"referencedDeclaration": 1331,
													"src": "3797:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:10"
									},
									"scope": 1431,
									"src": "3738:159:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "4094:85:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:10",
													"nodeType": "YulBlock",
													"src": "4129:44:10",
													"statements": [
														{
															"nativeSrc": "4143:20:10",
															"nodeType": "YulAssignment",
															"src": "4143:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:10",
																"nodeType": "YulIdentifier",
																"src": "4153:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1426,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1422,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1428,
												"nodeType": "InlineAssembly",
												"src": "4104:69:10"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "4029:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:10"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "4073:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1424,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1331,
														"src": "4073:9:10"
													},
													"referencedDeclaration": 1331,
													"src": "4073:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:10"
									},
									"scope": 1431,
									"src": "4007:172:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1432,
							"src": "1407:2774:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:10"
				},
				"id": 10
			},
			"contracts/AlvaraDao.sol": {
				"ast": {
					"absolutePath": "contracts/AlvaraDao.sol",
					"exportedSymbols": {
						"AlvaraDao": [
							1777
						],
						"ContextUpgradeable": [
							690
						],
						"ERC1967Utils": [
							1015
						],
						"IERC1822Proxiable": [
							721
						],
						"IERC20": [
							1856
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						],
						"UUPSUpgradeable": [
							644
						]
					},
					"id": 1778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1433,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1778,
							"sourceUnit": 195,
							"src": "58:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1778,
							"sourceUnit": 463,
							"src": "134:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1778,
							"sourceUnit": 645,
							"src": "210:77:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 1437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1778,
							"sourceUnit": 1857,
							"src": "288:33:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1438,
										"name": "Initializable",
										"nameLocations": [
											"345:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "345:13:11"
									},
									"id": 1439,
									"nodeType": "InheritanceSpecifier",
									"src": "345:13:11"
								},
								{
									"baseName": {
										"id": 1440,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"360:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "360:18:11"
									},
									"id": 1441,
									"nodeType": "InheritanceSpecifier",
									"src": "360:18:11"
								},
								{
									"baseName": {
										"id": 1442,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"380:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 644,
										"src": "380:15:11"
									},
									"id": 1443,
									"nodeType": "InheritanceSpecifier",
									"src": "380:15:11"
								}
							],
							"canonicalName": "AlvaraDao",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1777,
							"linearizedBaseContracts": [
								1777,
								644,
								721,
								194,
								690,
								462
							],
							"name": "AlvaraDao",
							"nameLocation": "332:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "323bf9f0",
									"id": 1446,
									"mutability": "mutable",
									"name": "ALVA",
									"nameLocation": "416:4:11",
									"nodeType": "VariableDeclaration",
									"scope": 1777,
									"src": "402:18:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1856",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1445,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1444,
											"name": "IERC20",
											"nameLocations": [
												"402:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1856,
											"src": "402:6:11"
										},
										"referencedDeclaration": 1856,
										"src": "402:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1856",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6ac10901",
									"id": 1449,
									"mutability": "mutable",
									"name": "xALVA",
									"nameLocation": "440:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1777,
									"src": "426:19:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1856",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1448,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1447,
											"name": "IERC20",
											"nameLocations": [
												"426:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1856,
											"src": "426:6:11"
										},
										"referencedDeclaration": 1856,
										"src": "426:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1856",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0c8e32d2",
									"id": 1453,
									"mutability": "mutable",
									"name": "userLockPeriod",
									"nameLocation": "487:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1777,
									"src": "452:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1452,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1450,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "460:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "452:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1451,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "471:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3b0e0133",
									"id": 1457,
									"mutability": "mutable",
									"name": "blackListAddress",
									"nameLocation": "539:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1777,
									"src": "507:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1456,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1454,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "515:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "507:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1455,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "526:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3d6e119",
									"id": 1459,
									"mutability": "mutable",
									"name": "lockedPeriod",
									"nameLocation": "577:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1777,
									"src": "562:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "562:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a",
									"id": 1465,
									"name": "Stake",
									"nameLocation": "602:5:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "624:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "608:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "xALVAReceived",
												"nameLocation": "640:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "632:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:47:11"
									},
									"src": "596:59:11"
								},
								{
									"anonymous": false,
									"eventSelector": "85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd",
									"id": 1471,
									"name": "Unstake",
									"nameLocation": "666:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"indexed": true,
												"mutability": "mutable",
												"name": "unstaker",
												"nameLocation": "690:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "674:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"indexed": false,
												"mutability": "mutable",
												"name": "alvaReceived",
												"nameLocation": "708:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "700:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:48:11"
									},
									"src": "660:62:11"
								},
								{
									"anonymous": false,
									"eventSelector": "2f2ea19e5340217456e8ecb94895965ba2afa084e4a94f9fc7c315b1478243b7",
									"id": 1477,
									"name": "BlackListUser",
									"nameLocation": "733:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"indexed": false,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "755:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "747:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"indexed": false,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "767:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "762:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "762:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:29:11"
									},
									"src": "727:49:11"
								},
								{
									"anonymous": false,
									"eventSelector": "f814eafa160e3546fc1ea6b8939a578ef5f64d31e04888bcd82e8cd9f9ec2909",
									"id": 1483,
									"name": "UpdateLockPeriod",
									"nameLocation": "787:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedPeriod",
												"nameLocation": "809:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "804:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "804:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lockedPeriod",
												"nameLocation": "828:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "823:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:39:11"
									},
									"src": "781:62:11"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "916:39:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1487,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "926:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "926:22:11"
											}
										]
									},
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "849:48:11",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 1491,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:11"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:0:11"
									},
									"scope": 1777,
									"src": "902:53:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "1084:305:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1503,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1109:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1113:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1109:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1502,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "1094:26:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1507,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "1130:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1130:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "1130:24:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1511,
																"name": "_alva",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "1173:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1190:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1182:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1512,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1182:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1182:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1173:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616c76612061646472657373",
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1194:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b1471e8298fb0fdee6f4979056baf840dac83498fd0403a768190450218d14c1",
																"typeString": "literal_string \"Invalid alva address\""
															},
															"value": "Invalid alva address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b1471e8298fb0fdee6f4979056baf840dac83498fd0403a768190450218d14c1",
																"typeString": "literal_string \"Invalid alva address\""
															}
														],
														"id": 1510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1165:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1165:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "1165:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1521,
																"name": "_xalva",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "1235:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1253:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1245:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1522,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1245:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1245:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1235:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642078414c56412061646472657373",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1257:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5bec71c0a16c9cd7a466d8c8147fe1a528e182d277a5c381b3e448cb9518e898",
																"typeString": "literal_string \"Invalid xALVA address\""
															},
															"value": "Invalid xALVA address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5bec71c0a16c9cd7a466d8c8147fe1a528e182d277a5c381b3e448cb9518e898",
																"typeString": "literal_string \"Invalid xALVA address\""
															}
														],
														"id": 1520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1227:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1227:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "1227:54:11"
											},
											{
												"expression": {
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1530,
														"name": "ALVA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "1292:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1856",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1532,
																"name": "_alva",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "1306:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1531,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "1299:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1856_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1299:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1856",
															"typeString": "contract IERC20"
														}
													},
													"src": "1292:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1856",
														"typeString": "contract IERC20"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "1292:20:11"
											},
											{
												"expression": {
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1536,
														"name": "xALVA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "1322:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1856",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1538,
																"name": "_xalva",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "1337:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1537,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "1330:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1856_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1330:14:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1856",
															"typeString": "contract IERC20"
														}
													},
													"src": "1322:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1856",
														"typeString": "contract IERC20"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "1322:22:11"
											},
											{
												"expression": {
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1542,
														"name": "lockedPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "1354:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1543,
														"name": "_lockedPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "1369:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1354:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "1354:28:11"
											}
										]
									},
									"functionSelector": "1794bb3c",
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1499,
												"name": "initializer",
												"nameLocations": [
													"1072:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1072:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1072:11:11"
										}
									],
									"name": "initialize",
									"nameLocation": "970:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "_alva",
												"nameLocation": "998:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "990:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "_xalva",
												"nameLocation": "1021:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "1013:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "_lockedPeriod",
												"nameLocation": "1045:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "1037:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:84:11"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:0:11"
									},
									"scope": 1777,
									"src": "961:428:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "1494:652:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1553,
																	"name": "blackListAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "1512:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1556,
																"indexExpression": {
																	"expression": {
																		"id": 1554,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1529:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1533:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1529:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1512:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1544:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1512:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b4c69737465642055736572",
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1550:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841",
																"typeString": "literal_string \"BlackListed User\""
															},
															"value": "BlackListed User"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841",
																"typeString": "literal_string \"BlackListed User\""
															}
														],
														"id": 1552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1504:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1504:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "1504:65:11"
											},
											{
												"assignments": [
													1563
												],
												"declarations": [
													{
														"constant": false,
														"id": 1563,
														"mutability": "mutable",
														"name": "totalAlva",
														"nameLocation": "1587:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "1579:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1562,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1579:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1571,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1568,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1622:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AlvaraDao_$1777",
																		"typeString": "contract AlvaraDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AlvaraDao_$1777",
																		"typeString": "contract AlvaraDao"
																	}
																],
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1614:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1566,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1614:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1614:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1564,
															"name": "ALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "1599:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1856",
																"typeString": "contract IERC20"
															}
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1604:9:11",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1791,
														"src": "1599:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1599:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1579:49:11"
											},
											{
												"assignments": [
													1573
												],
												"declarations": [
													{
														"constant": false,
														"id": 1573,
														"mutability": "mutable",
														"name": "totalShares",
														"nameLocation": "1646:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "1638:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1572,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1638:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1574,
															"name": "xALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "1660:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1856",
																"typeString": "contract IERC20"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1666:11:11",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1784,
														"src": "1660:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1638:41:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1578,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "1693:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1708:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1693:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1581,
															"name": "totalAlva",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "1713:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1726:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1713:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1693:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1623,
													"nodeType": "Block",
													"src": "1840:181:11",
													"statements": [
														{
															"assignments": [
																1601
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1601,
																	"mutability": "mutable",
																	"name": "_userShare",
																	"nameLocation": "1862:10:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1623,
																	"src": "1854:18:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1600,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1854:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1608,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1602,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1549,
																				"src": "1876:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1603,
																				"name": "totalShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1573,
																				"src": "1886:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1876:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1605,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1875:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1606,
																	"name": "totalAlva",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "1901:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1875:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1854:56:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1612,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "1935:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1935:12:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1614,
																		"name": "_userShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "1949:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1609,
																		"name": "xALVA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "1924:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1856",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1930:4:11",
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1855,
																	"src": "1924:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1924:36:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1616,
															"nodeType": "ExpressionStatement",
															"src": "1924:36:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1618,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "1985:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1985:12:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1620,
																		"name": "_userShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "1999:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1617,
																	"name": "Stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "1979:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1979:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1622,
															"nodeType": "EmitStatement",
															"src": "1974:36:11"
														}
													]
												},
												"id": 1624,
												"nodeType": "IfStatement",
												"src": "1689:332:11",
												"trueBody": {
													"id": 1599,
													"nodeType": "Block",
													"src": "1729:105:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1588,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "1754:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1754:12:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1590,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "1768:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1585,
																		"name": "xALVA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "1743:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1856",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1749:4:11",
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1855,
																	"src": "1743:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1743:33:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1592,
															"nodeType": "ExpressionStatement",
															"src": "1743:33:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1594,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "1801:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1801:12:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1596,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "1815:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1593,
																	"name": "Stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "1795:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1795:28:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1598,
															"nodeType": "EmitStatement",
															"src": "1790:33:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1625,
															"name": "userLockPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "2030:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1628,
														"indexExpression": {
															"expression": {
																"id": 1626,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2045:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2049:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2045:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2030:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1629,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2059:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2065:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2059:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2030:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "2030:44:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1636,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "2102:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2102:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1640,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2124:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AlvaraDao_$1777",
																		"typeString": "contract AlvaraDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AlvaraDao_$1777",
																		"typeString": "contract AlvaraDao"
																	}
																],
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2116:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1638,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2116:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2116:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1642,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "2131:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1633,
															"name": "ALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "2084:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1856",
																"typeString": "contract IERC20"
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2089:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1829,
														"src": "2084:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2084:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "2084:55:11"
											}
										]
									},
									"functionSelector": "a59f3e0c",
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enter",
									"nameLocation": "1464:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1478:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "1470:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:17:11"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:0:11"
									},
									"scope": 1777,
									"src": "1455:691:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "2239:508:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1652,
																	"name": "blackListAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "2257:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1655,
																"indexExpression": {
																	"expression": {
																		"id": 1653,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2274:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2278:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2274:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2257:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2289:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2257:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b4c69737465642055736572",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2295:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841",
																"typeString": "literal_string \"BlackListed User\""
															},
															"value": "BlackListed User"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841",
																"typeString": "literal_string \"BlackListed User\""
															}
														],
														"id": 1651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2249:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "2249:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1662,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2345:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2351:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2345:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1664,
																				"name": "userLockPeriod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1453,
																				"src": "2365:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1667,
																			"indexExpression": {
																				"expression": {
																					"id": 1665,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2380:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2384:6:11",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2380:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2365:26:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1668,
																			"name": "lockedPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "2394:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2365:41:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1670,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2364:43:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2345:62:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e206e6f7420756e5374616b65",
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2421:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7d6d2814c0e538a9dfcdf30584136cd8b783d78774c3c549658170a640f9728",
																"typeString": "literal_string \"Can not unStake\""
															},
															"value": "Can not unStake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7d6d2814c0e538a9dfcdf30584136cd8b783d78774c3c549658170a640f9728",
																"typeString": "literal_string \"Can not unStake\""
															}
														],
														"id": 1661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:124:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "2324:124:11"
											},
											{
												"assignments": [
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "totalShares",
														"nameLocation": "2466:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1718,
														"src": "2458:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2458:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1680,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1677,
															"name": "xALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "2480:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1856",
																"typeString": "contract IERC20"
															}
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2486:11:11",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1784,
														"src": "2480:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2458:41:11"
											},
											{
												"assignments": [
													1682
												],
												"declarations": [
													{
														"constant": false,
														"id": 1682,
														"mutability": "mutable",
														"name": "_userShare",
														"nameLocation": "2517:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1718,
														"src": "2509:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1681,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2509:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1695,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1683,
																	"name": "_share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "2531:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1688,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2563:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_AlvaraDao_$1777",
																						"typeString": "contract AlvaraDao"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_AlvaraDao_$1777",
																						"typeString": "contract AlvaraDao"
																					}
																				],
																				"id": 1687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2555:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2555:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2555:13:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1684,
																			"name": "ALVA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "2540:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1856",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2545:9:11",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1791,
																		"src": "2540:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2540:29:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2531:38:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1692,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2530:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1693,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "2585:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2530:66:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2509:87:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1699,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "2621:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2621:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1701,
															"name": "_share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "2635:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1696,
															"name": "xALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "2606:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1856",
																"typeString": "contract IERC20"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2612:8:11",
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1848,
														"src": "2606:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "2606:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1707,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "2666:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2666:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1709,
															"name": "_userShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "2680:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1704,
															"name": "ALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "2652:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1856",
																"typeString": "contract IERC20"
															}
														},
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2657:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1800,
														"src": "2652:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "2652:39:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1713,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "2715:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2715:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1715,
															"name": "_userShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "2729:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1712,
														"name": "Unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "2707:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2707:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "EmitStatement",
												"src": "2702:38:11"
											}
										]
									},
									"functionSelector": "67dfd4c9",
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leave",
									"nameLocation": "2210:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "_share",
												"nameLocation": "2224:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "2216:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:16:11"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2239:0:11"
									},
									"scope": 1777,
									"src": "2201:546:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "3022:174:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1730,
																	"name": "blackListAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "3040:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1732,
																"indexExpression": {
																	"id": 1731,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "3057:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3040:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1733,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "3067:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3040:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e2073616d6520737461747573",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3076:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1bb34286905b9621b4b62da46af3cd2b17f8f35925c44cf938b33cc057917e9",
																"typeString": "literal_string \"Already in same status\""
															},
															"value": "Already in same status"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1bb34286905b9621b4b62da46af3cd2b17f8f35925c44cf938b33cc057917e9",
																"typeString": "literal_string \"Already in same status\""
															}
														],
														"id": 1729,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3032:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3032:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "3032:69:11"
											},
											{
												"expression": {
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1738,
															"name": "blackListAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "3111:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1740,
														"indexExpression": {
															"id": 1739,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "3128:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3111:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1741,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "3137:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3111:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "3111:33:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1745,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "3174:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1746,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "3181:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1744,
														"name": "BlackListUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "3160:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3160:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "EmitStatement",
												"src": "3155:34:11"
											}
										]
									},
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "2753:193:11",
										"text": " @dev Used only by admin or owner, used to blacklist any user in any emergency case\n @param _user address of blacklistef user\n @param _status status of user"
									},
									"functionSelector": "e0cef1b0",
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1727,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1726,
												"name": "onlyOwner",
												"nameLocations": [
													"3012:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3012:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3012:9:11"
										}
									],
									"name": "blackListUser",
									"nameLocation": "2960:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2982:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2974:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2974:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "2994:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2989:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2989:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2973:29:11"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3022:0:11"
									},
									"scope": 1777,
									"src": "2951:245:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "3296:106:11",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1758,
															"name": "lockedPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "3328:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1759,
															"name": "_lockedPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "3342:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1757,
														"name": "UpdateLockPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "3311:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3311:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "EmitStatement",
												"src": "3306:50:11"
											},
											{
												"expression": {
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1762,
														"name": "lockedPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "3367:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1763,
														"name": "_lockedPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "3382:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3367:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1765,
												"nodeType": "ExpressionStatement",
												"src": "3367:28:11"
											}
										]
									},
									"functionSelector": "91db7b0d",
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1755,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1754,
												"name": "onlyOwner",
												"nameLocations": [
													"3286:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3286:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3286:9:11"
										}
									],
									"name": "updateLockPeriod",
									"nameLocation": "3237:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "_lockedPeriod",
												"nameLocation": "3262:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3254:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3254:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3253:23:11"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3296:0:11"
									},
									"scope": 1777,
									"src": "3228:174:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										598
									],
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "3518:2:11",
										"statements": []
									},
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1773,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1772,
												"name": "onlyOwner",
												"nameLocations": [
													"3504:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3504:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3504:9:11"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "3417:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1771,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3487:8:11"
									},
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3443:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "3435:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3435:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3434:27:11"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3518:0:11"
									},
									"scope": 1777,
									"src": "3408:112:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1778,
							"src": "323:3199:11",
							"usedErrors": [
								30,
								35,
								211,
								214,
								489,
								494,
								741,
								754,
								1035,
								1298
							],
							"usedEvents": [
								41,
								219,
								698,
								1465,
								1471,
								1477,
								1483
							]
						}
					],
					"src": "32:3491:11"
				},
				"id": 11
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1856
						]
					},
					"id": 1857,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1856,
							"linearizedBaseContracts": [
								1856
							],
							"name": "IERC20",
							"nameLocation": "68:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 1784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "90:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "101:2:12"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "127:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:9:12"
									},
									"scope": 1856,
									"src": "81:55:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "151:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "169:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "161:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "161:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "160:17:12"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "201:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "200:9:12"
									},
									"scope": 1856,
									"src": "142:68:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "225:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "251:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "243:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "278:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "270:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:57:12"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "309:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "309:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:6:12"
									},
									"scope": 1856,
									"src": "216:99:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "330:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "357:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "349:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "380:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "372:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:54:12"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "417:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:9:12"
									},
									"scope": 1856,
									"src": "321:105:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "441:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "457:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "449:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "474:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "466:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:33:12"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "500:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "500:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:6:12"
									},
									"scope": 1856,
									"src": "432:74:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "521:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "551:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "543:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "575:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "567:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "602:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "594:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:81:12"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "633:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "633:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:6:12"
									},
									"scope": 1856,
									"src": "512:127:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "654:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "667:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "659:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:16:12"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:0:12"
									},
									"scope": 1856,
									"src": "645:39:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0d1118ce",
									"id": 1841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnTokens",
									"nameLocation": "700:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "719:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "711:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "736:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "728:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "710:33:12"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:0:12"
									},
									"scope": 1856,
									"src": "691:62:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 1848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "768:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "777:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "802:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "794:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:33:12"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:0:12"
									},
									"scope": 1856,
									"src": "759:60:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 1855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "834:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "847:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "839:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "864:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "856:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:33:12"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:0:12"
									},
									"scope": 1856,
									"src": "825:56:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1857,
							"src": "58:825:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:852:12"
				},
				"id": 12
			}
		}
	}
}