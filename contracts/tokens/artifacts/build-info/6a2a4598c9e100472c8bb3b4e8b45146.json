{
	"id": "6a2a4598c9e100472c8bb3b4e8b45146",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens/BTSPair.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"../interfaces/IFactory.sol\";\nimport \"../interfaces/IBTSPair.sol\";\n\n/// @title Basket Token Standard Pair\n/// @notice A contract for managing liquidity pairs of basket tokens\n/// @dev Implements ERC20 for liquidity tokens and acts as a liquidity pool for the specified tokens\ncontract BasketTokenStandardPair is ERC20Upgradeable, OwnableUpgradeable, IBTSPair {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    // ===============================================\n    // State Variables\n    // ===============================================\n    \n    /// @notice Address of the factory contract\n    /// @dev The factory contract is responsible for managing the liquidity pairs\n    address public factory;\n\n    /// @notice Timestamp of the last fee accrual\n    /// @dev The lastAccruedAt variable stores the timestamp for occurrence of fee accrual\n    uint256 public lastAccruedAt;\n    \n    /// @notice Boolean to track reentrancy\n    /// @dev Prevents reentrancy by checking the state of operations in BTS\n    bool public reentrancyGuardEntered;\n    \n    /// @notice Array of token addresses in the basket\n    /// @dev The tokens array stores the addresses of the tokens in the basket\n    address[] private tokens;\n\n    /// @notice Array of token reserves corresponding to the tokens array\n    /// @dev The reserves array stores the reserve amounts of the tokens in the basket\n    uint256[] private reserves;\n\n    /// @notice Modifier to prevent reentrancy in read-only functions\n    /// @dev Prevents reentrancy by checking the state of operations in BTS\n    modifier nonReentrantReadOnly() {\n        if(reentrancyGuardEntered) revert ReentrantCall();\n        _;\n    }\n\n    // ===============================================\n    // Events\n    // ===============================================\n\n    /// @notice Emitted when the fee is accrued\n    /// @param owner Address of the BTS\n    /// @param months Number of months since last accrual\n    /// @param supply Current supply of LP tokens\n    /// @param amount Amount of LP tokens to be minted\n    /// @param newAccruedAt New timestamp for accrual\n    event feeAccrued(address indexed owner, uint256 months, uint256 supply, uint256 amount, uint256 newAccruedAt);\n\n    /// @notice Emitted when the token list is updated\n    /// @param _tokens New array of token addresses\n    event TokensUpdated(address[] _tokens);\n\n    // ===============================================\n    // Errors\n    // ===============================================\n\n    /// @notice Error thrown when an invalid token is provided\n    /// @dev The InvalidToken error is thrown when a token address is invalid\n    error InvalidToken();\n\n    /// @notice Error thrown when there is insufficient liquidity for an operation\n    /// @dev The InsufficientLiquidity error is thrown when there is not enough liquidity for an operation\n    error InsufficientLiquidity();\n\n    /// @notice Error thrown when an invalid recipient address is provided\n    /// @dev The InvalidRecipient error is thrown when an address is zero\n    error InvalidRecipient();\n\n    /// @notice Error thrown when a parameter string is empty\n    error EmptyStringParameter(string paramName);\n\n    /// @notice Error thrown when a reentrancy attempt is detected\n    /// @dev The ReentrancyError is thrown when a reentrancy attempt is detected\n    error ReentrantCall();\n\n    // ===============================================\n    // Initialization\n    // ===============================================\n\n    /// @notice Initializes the pair contract\n    /// @dev Sets up the ERC20 token and initializes pair parameters\n    /// @param _factoryAddress Factory contract address\n    /// @param _name Name of the pair token\n    /// @param _tokens Array of token addresses in the pair\n    function initialize(\n        address _factoryAddress,\n        string memory _name,\n        address[] calldata _tokens\n    ) external initializer {\n        if (_tokens.length == 0) revert InvalidToken();\n        if (bytes(_name).length == 0) revert EmptyStringParameter(\"name\");\n\n        _name = string(abi.encodePacked(_name, \"-LP\"));\n\n        __ERC20_init(_name, _name);\n        __Ownable_init(msg.sender);\n\n        tokens = _tokens;\n        reserves = new uint256[]  (tokens.length);\n\n        factory = _factoryAddress;\n        lastAccruedAt = block.timestamp;\n    }\n\n    // ===============================================\n    // External Functions\n    // ===============================================\n\n    /// @notice Transfer Tokens To Owner \n    /// @dev Transfers all tokens to the owner, typically called during basket rebalancing\n    /// @notice This function is only callable by the owner\n    function transferTokensToOwner() external onlyOwner {\n        address ownerAddress = owner();\n        uint256 tokensLength = tokens.length;\n        for (uint256 i = 0; i < tokensLength; ) {\n            address token = tokens[i]; // ✅ Cache token address\n            uint256 balance = reserves[i]; \n\n            if (balance > 0) {\n                IERC20Upgradeable(token).safeTransfer(ownerAddress, balance); // ✅ Use cached balance\n            }\n\n            unchecked { ++i; }\n        }\n    }\n\n    /// @notice Updates the token list\n    /// @dev Updates the tokens array and recalculates reserves\n    /// @param _tokens New array of token addresses\n    /// @notice This function is only callable by the owner\n    function updateTokens(address[] calldata _tokens) external onlyOwner {\n        if (_tokens.length == 0) revert InvalidToken();\n\n        tokens = _tokens;\n        _updateRebalanceReserve();\n        emit TokensUpdated(_tokens);\n    }\n\n    /// @notice Mints liquidity tokens\n    /// @dev Calculates the liquidity amount based on token balances and mints LP tokens\n    /// @param _to Address to mint tokens to\n    /// @return liquidity Amount of liquidity tokens minted\n    /// @notice This function is only callable by the owner\n    function mint(address _to, uint256[] calldata amounts)\n        external\n        onlyOwner\n        returns (uint256 liquidity)\n    {\n        if (_to == address(0)) revert InvalidRecipient();\n        // Cache storage variables\n        IFactory factoryInstance = _factory();\n        address wethAddress = factoryInstance.weth();\n\n        distMgmtFee();\n        uint256 tokensLength = tokens.length;\n        uint256 totalETH;\n\n        for (uint256 i = 0; i < tokensLength; ) {\n            address token = tokens[i]; // ✅ Cache token address\n            address[] memory path = factoryInstance.getPath(token, wethAddress); // ✅ Cache path\n            totalETH += factoryInstance.getAmountsOut(amounts[i], path);\n\n            unchecked { ++i; }\n        }\n\n        liquidity = totalSupply() == 0 ? 1000 ether : calculateShareLP(totalETH);\n        _mint(_to, liquidity);\n\n        for (uint256 i = 0; i < amounts.length; ) {\n            reserves[i] += amounts[i];\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /// @notice Burns liquidity tokens\n    /// @dev Burns LP tokens and transfers the corresponding tokens to the recipient\n    /// @param _to Address to transfer tokens to\n    /// @return amounts Array of token amounts transferred\n    /// @notice This function is only callable by the owner\n    function burn(address _to)\n        external\n        onlyOwner\n        returns (uint256[] memory amounts)\n    {\n        if (_to == address(0)) revert InvalidRecipient();\n\n        distMgmtFee();\n        uint256 _liquidity = balanceOf(address(this));\n        if (_liquidity == 0) revert InsufficientLiquidity();\n\n        amounts = calculateShareTokens(_liquidity);\n        _burn(address(this), _liquidity);\n        uint256 tokensLength = tokens.length; \n        for (uint256 i = 0; i < tokensLength; ) {\n            uint256 amount = amounts[i];\n            if (amount > 0){\n                address token = tokens[i]; // ✅ Cache token address\n                IERC20Upgradeable(token).safeTransfer(_to, amount); // ✅ Use cached token\n            } \n\n\n            reserves[i] -= amount; // ✅ Use cached amount\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /// @notice Sets or resets the reentrancy guard flag\n    /// @param _state New state for the reentrancy guard flag for read-only functions\n    /// @notice This function is only callable by the owner\n    function setReentrancyGuardStatus(bool _state) external onlyOwner {\n        reentrancyGuardEntered = _state;\n    }\n\n    // ===============================================\n    // Public Functions\n    // ===============================================\n\n    /// @notice Distributes the management fee\n    /// @dev Mints LP tokens for the BTS manager and updates the accrual time. It can be called by internal functions, external cron jobs, or manually by any account.\n    function distMgmtFee() public {\n        (uint256 months, uint256 supply, uint256 feeAmount) = calFee();\n        if(months == 0) return;\n\n        // Mint fee Lp tokens for BTS manager\n        if (feeAmount > 0) _mint(owner(), feeAmount);\n\n        // Update the accrual time\n        lastAccruedAt += months * 30 days;\n\n        emit feeAccrued(owner(), months, supply, feeAmount, lastAccruedAt);\n    }\n\n    // ===============================================\n    // Public View/Pure Functions\n    // ===============================================\n\n    \n    /// @notice Calculates the share of LP tokens\n    /// @dev Calculates the amount of LP tokens for a specific amount of ETH value\n    /// @param _amountETH Amount of ETH to calculate share for\n    /// @return amountLP Amount of LP tokens\n    function calculateShareLP(uint256 _amountETH)\n    public\n    view\n    nonReentrantReadOnly\n    returns (uint256 amountLP)\n    {\n        uint256 reservedETH = _totalReservedETH();\n        if (reservedETH == 0) return 1000 ether;\n        amountLP = ((_amountETH * totalSupply()) / reservedETH);\n    }\n    \n    /// @notice Calculates the share of ETH\n    /// @dev Calculates the equivalent ETH value for a specific amount of LP tokens\n    /// @param _amountLP Amount of LP tokens to calculate share for\n    /// @return amountETH Amount of ETH\n    function calculateShareETH(uint256 _amountLP)\n    public\n    view\n    nonReentrantReadOnly\n    returns (uint256 amountETH)\n    {\n        uint256 supply = totalSupply(); // ✅ Cache totalSupply\n        if (supply == 0) return 0;\n        \n        IFactory factoryInstance = _factory();\n        uint256 reservesLength = reserves.length;\n        address wethAddress = factoryInstance.weth();\n        \n        for (uint256 i = 0; i < reservesLength; ) {\n            address token = tokens[i]; // ✅ Cache token\n            uint256 tokenBalance = reserves[i]; // ✅ Cache balance once\n            if (tokenBalance > 0) {\n                address[] memory path = factoryInstance.getPath(token, wethAddress); // ✅ Cache path\n                uint256 share = (_amountLP * tokenBalance) / supply;\n                amountETH += factoryInstance.getAmountsOut(share, path);\n            }\n            unchecked {\n                ++i;\n            }\n        }\n    }\n    \n    /// @notice Calculates the share of tokens\n    /// @dev Calculates the token amounts that correspond to a specific amount of LP tokens\n    /// @param _amountLP Amount of LP tokens to calculate share for\n    /// @return amountTokens Array of token amounts corresponding to the LP tokens\n    function calculateShareTokens(uint256 _amountLP)\n    public\n    view\n    nonReentrantReadOnly\n    returns (uint256[] memory amountTokens)\n    {\n        uint256 supply = totalSupply(); // ✅ Cache totalSupply\n        amountTokens = new uint256[](tokens.length);\n        if (supply == 0) return amountTokens;\n        \n        for (uint256 i = 0; i < reserves.length; ) {\n            uint256 balance = reserves[i];\n            amountTokens[i] = (_amountLP * balance) / supply;\n            \n            unchecked {\n                ++i;\n            }\n        }\n    }\n    \n    /// @notice Gets the token and user balances\n    /// @dev Returns the token balances in the contract and the user's LP token balance\n    /// @param _user Address to get user balance for\n    /// @return _tokenBal Array of token balances in the contract\n    /// @return _supply Total supply of LP tokens\n    /// @return _userLP User's LP token balance\n    function getTokenAndUserBal(address _user)\n    public\n    view\n    nonReentrantReadOnly\n    returns (\n        uint256[] memory,\n            uint256,\n            uint256\n        )\n        {\n            uint256 tokensLength = tokens.length;\n            uint256[] memory _tokenBal = new uint256[](tokensLength);\n            \n            for (uint256 i = 0; i < tokensLength; ) {\n                _tokenBal[i] = reserves[i];\n                unchecked { \n                    ++i; \n                }\n            }\n            \n            uint256 _supply = totalSupply();\n            uint256 _userLP = balanceOf(_user);\n            return (_tokenBal, _supply, _userLP);\n    }\n    \n    /// @notice Calculates the management fee\n    /// @dev Calculates the management fee based on the time elapsed since last accrual\n    /// @return months Number of months since last accrual\n    /// @return supply Current supply of LP tokens\n    /// @return feeAmount Amount of LP tokens to be minted\n    function calFee() public view returns (uint256 months, uint256 supply, uint256 feeAmount) {\n        months = (block.timestamp - lastAccruedAt)/ 30 days;\n        supply = totalSupply();\n        if(months == 0 || supply == 0) return (months, supply, 0);\n        feeAmount  = _factory().calMgmtFee(months, supply);\n    }\n\n    /// @notice Returns the token address in the basket\n    /// @param _index Index of the token in the basket\n    /// @return Token address\n    function getTokenAddress(uint256 _index)\n        external\n        view\n        nonReentrantReadOnly\n        returns (address)\n    {\n        return tokens[_index];\n    }\n\n    /// @notice Returns the token reserve in the basket\n    /// @param _index Index of the token in the basket\n    /// @return Token reserve\n    function getTokenReserve(uint256 _index)\n        external\n        view\n        nonReentrantReadOnly\n        returns (uint256)\n    {\n        return reserves[_index];\n    }\n    \n    /// @notice Gets the token list\n    /// @dev Returns the array of token addresses in the basket\n    /// @return Array of token addresses\n    function getTokenList() public view nonReentrantReadOnly\n        returns (address[] memory) {\n        return tokens;\n    }\n\n    /// @notice Gets the token reserves\n    /// @dev Returns the array of token reserves in the basket\n    /// @return Array of token reserves\n    function getTokensReserve() public view nonReentrantReadOnly\n        returns (uint256[] memory) {\n        return reserves;\n    }\n\n    /// @notice Gets the total management fee\n    /// @dev Returns the fee by calculating new fee and adding existing fee balance\n    /// @return Total management fee\n    function getTotalMgmtFee() external view returns (uint) { \n        (, , uint256 feeAmount) = calFee();\n        return feeAmount + balanceOf(owner());\n    }\n\n    // ===============================================\n    // Private Functions\n    // ===============================================\n\n    /// @notice Returns the factory instance casted to IFactory interface\n    /// @dev Used to avoid repeated casting of the factory address in loops and functions\n    /// @return factoryInstance The factory interface instance\n    function _factory() private view returns (IFactory) {\n        return IFactory(factory);\n    }\n\n    /// @notice Updates the rebalance reserves\n    /// @dev Internal function to update reserve amounts based on current token balances\n    function _updateRebalanceReserve() private {\n\n        uint256 tokensLength = tokens.length;\n        reserves = new uint256[](tokensLength);\n\n        for (uint256 i = 0; i < tokensLength; ) {\n            address token = tokens[i]; // ✅ Cache token address\n            reserves[i] = IERC20Upgradeable(token).balanceOf(address(this)); // ✅ Single balanceOf per token\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /// @notice Calculates the total reserved ETH\n    /// @dev Calculates the sum of all reserve values in WETH equivalent\n    /// @return totalReservedETH Total reserve value in WETH\n    function _totalReservedETH() private view returns (uint256 totalReservedETH) {\n        IFactory factoryInstance = _factory();\n        address weth = factoryInstance.weth(); // ✅ Cache WETH address\n        uint256 length = reserves.length;\n\n        for (uint256 i = 0; i < length; ) {\n            uint256 reserve = reserves[i];\n            if (reserve > 0) {\n                address token = tokens[i]; // ✅ Cache token address\n                address[] memory path = factoryInstance.getPath(token, weth); // ✅ Cache path\n                totalReservedETH += factoryInstance.getAmountsOut(reserve, path);\n            }\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n}\n"
			},
			"contracts/interfaces/IBTSPair.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ninterface IBTSPair {\n    function initialize(address factoryAddress, string memory name, address[] calldata tokens) external;\n\n    function mint(address to, uint256[] calldata amounts) external returns (uint256 liquidity);\n\n    function burn(address to) external returns (uint256[] memory amounts);\n\n    function transferTokensToOwner() external;\n\n    function updateTokens(address[] calldata tokens) external;\n\n    function setReentrancyGuardStatus(bool _state) external;\n\n    function distMgmtFee() external;\n\n    function getTokenAddress(uint256 tokenIndex) external view returns (address);\n\n    function getTokenReserve(uint256 tokenIndex) external view returns (uint256);\n\n    function getTokenList() external view returns (address[] memory);\n\n    function getTokensReserve() external view returns (uint256[] memory);\n\n    function getTotalMgmtFee() external view returns (uint);\n\n    function calculateShareETH(uint256 amountLP) external view returns (uint256 amountETH);\n\n    function calculateShareTokens(uint256 amountLP) external view returns (uint256[] memory amountTokens);\n\n    function getTokenAndUserBal(address user) external view returns (uint256[] memory, uint256, uint256);\n}\n"
			},
			"contracts/interfaces/IFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ninterface IFactory {\n    // --- View Functions ---\n    function alva() external view returns (address);\n    function minPercentALVA() external view returns (uint16);\n    function minLpWithdrawal() external view returns (uint256);\n    function btsImplementation() external view returns (address);\n    function btsPairImplementation() external view returns (address);\n    function royaltyReceiver() external view returns (address);\n    function royaltyPercentage() external view returns (uint256);\n    function router() external view returns (address);\n    function weth() external view returns (address);\n    function minBTSCreationAmount() external view returns (uint256);\n    function monthlyFeeRate() external view returns (uint256);\n    function collectionUri() external view returns (string memory);\n    function totalBTS() external view returns (uint);\n    function getBTSAtIndex(uint256 index) external view returns (address);\n    function getPlatformFeeConfig() external view returns (uint16, uint16, uint16, address);\n    function getContractURI() external view returns (string memory);\n    function isWhitelistedContract(address contractAddr) external view returns (bool);\n    function calMgmtFee(uint256 months, uint256 lpSupply) external view returns (uint256);\n    function getAmountsOut(uint256 _amount, address[] memory _path) external view returns (uint);\n    function getPath(address _tokenA, address _tokenB) external pure returns (address[] memory);\n\n    // --- Mutative Functions ---\n    function initialize(\n        address _alva,\n        uint16 _minPercentALVA,\n        address _btsImplementation,\n        address _btsPairImplementation,\n        uint256 _monthlyFeeRate,\n        address _royaltyReceiver,\n        string calldata _collectionUri,\n        address _feeCollector,\n        address _defaultMarketplace,\n        address _routerAddress,\n        address _wethAddress,\n        uint256 _minBTSCreationAmount\n    ) external;\n\n    function setMinLpWithdrawal(uint256 newMin) external;\n    function createBTS(\n        string calldata _name,\n        string calldata _symbol,\n        address[] calldata _tokens,\n        uint256[] calldata _weights,\n        string calldata _tokenURI,\n        uint256 _buffer,\n        string calldata _id,\n        string calldata _description,\n        uint256 _deadline\n    ) external payable;\n    function updateBTSImplementation(address _btsImplementation) external;\n    function updateBTSPairImplementation(address _btsPairImplementation) external;\n    function updateAlva(address _alva) external;\n    function updateMinPercentALVA(uint16 _minPercentALVA) external;\n    function updateCollectionURI(string calldata _collectionURI) external;\n    function updateRoyaltyPercentage(uint256 _royaltyPercentage) external;\n    function updateRoyaltyReceiver(address _royaltyReceiver) external;\n    function updateMinBTSCreationAmount(uint256 _minBTSCreationAmount) external;\n    function addWhitelistedContract(address contractAddr) external;\n    function dewhitelistContract(address contractAddr) external;\n    function setPlatformFeeConfig(uint16 _btsCreationFee, uint16 _contributionFee, uint16 _withdrawalFee) external;\n    function setFeeCollector(address _feeCollector) external;\n}"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../extensions/IERC20PermitUpgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20PermitUpgradeable token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"IERC20PermitUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":734:7100  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":734:7100  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122076bba78f1ed7c9fd5309a034d9cbe9382995019c5d8cc99e79293a989345224764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122076bba78f1ed7c9fd5309a034d9cbe9382995019c5d8cc99e79293a989345224764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xBBA78F1ED7C9FD5309A034D9CBE9382995019C5D8CC99E PUSH26 0x293A989345224764736F6C634300081E00330000000000000000 ",
							"sourceMap": "734:6366:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;734:6366:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122076bba78f1ed7c9fd5309a034d9cbe9382995019c5d8cc99e79293a989345224764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xBBA78F1ED7C9FD5309A034D9CBE9382995019C5D8CC99E PUSH26 0x293A989345224764736F6C634300081E00330000000000000000 ",
							"sourceMap": "734:6366:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20Upgradeable,bytes memory)": "infinite",
								"forceApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safePermit(contract IERC20PermitUpgradeable,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 734,
									"end": 7100,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076bba78f1ed7c9fd5309a034d9cbe9382995019c5d8cc99e79293a989345224764736f6c634300081e0033",
									".code": [
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 7100,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/interfaces/IBTSPair.sol",
								"contracts/interfaces/IFactory.sol",
								"contracts/tokens/BTSPair.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xD6019063466CE3FFB98AC08E SUB DUP6 0xDF LOG4 0xC 0xD7 JUMPF 0x2649 0xB1 0xB5 SHR 0xCC MSTORE8 0x26 BLOBHASH 0xE2 0xCA CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "194:9180:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xD6019063466CE3FFB98AC08E SUB DUP6 0xDF LOG4 0xC 0xD7 JUMPF 0x2649 0xB1 0xB5 SHR 0xCC MSTORE8 0x26 BLOBHASH 0xE2 0xCA CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "194:9180:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/interfaces/IBTSPair.sol",
								"contracts/interfaces/IFactory.sol",
								"contracts/tokens/BTSPair.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IBTSPair.sol": {
				"IBTSPair": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountLP",
									"type": "uint256"
								}
							],
							"name": "calculateShareETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountLP",
									"type": "uint256"
								}
							],
							"name": "calculateShareTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amountTokens",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distMgmtFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenIndex",
									"type": "uint256"
								}
							],
							"name": "getTokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getTokenAndUserBal",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenIndex",
									"type": "uint256"
								}
							],
							"name": "getTokenReserve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokensReserve",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalMgmtFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "setReentrancyGuardStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferTokensToOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "updateTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(address)": "89afcb44",
							"calculateShareETH(uint256)": "9257fa07",
							"calculateShareTokens(uint256)": "d410ad7d",
							"distMgmtFee()": "b4b93c8c",
							"getTokenAddress(uint256)": "67ccdf38",
							"getTokenAndUserBal(address)": "a131d436",
							"getTokenList()": "273cbaa0",
							"getTokenReserve(uint256)": "8e73f1b4",
							"getTokensReserve()": "ec5975c6",
							"getTotalMgmtFee()": "090318fb",
							"initialize(address,string,address[])": "3a105cfb",
							"mint(address,uint256[])": "de836ebd",
							"setReentrancyGuardStatus(bool)": "ba6ba385",
							"transferTokensToOwner()": "a7c7fdeb",
							"updateTokens(address[])": "de41691c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"}],\"name\":\"calculateShareETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"}],\"name\":\"calculateShareTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountTokens\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distMgmtFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"}],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTokenAndUserBal\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"}],\"name\":\"getTokenReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokensReserve\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMgmtFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setReentrancyGuardStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferTokensToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"updateTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBTSPair.sol\":\"IBTSPair\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBTSPair.sol\":{\"keccak256\":\"0x9197c2dc6a0263499023fe9729663cd274178ab12728be376770017765b6f3fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca05997f835f3465db76fdf6467f9f45a0a2114086075ef807a36c25c370c73d\",\"dweb:/ipfs/Qmdo7RBaf79BPsc22CZQd1stthZrBjq2qkJGUvKZzwFgop\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IFactory.sol": {
				"IFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddr",
									"type": "address"
								}
							],
							"name": "addWhitelistedContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "alva",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "btsImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "btsPairImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "months",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lpSupply",
									"type": "uint256"
								}
							],
							"name": "calMgmtFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collectionUri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_weights",
									"type": "uint256[]"
								},
								{
									"internalType": "string",
									"name": "_tokenURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_buffer",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_id",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_description",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_deadline",
									"type": "uint256"
								}
							],
							"name": "createBTS",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddr",
									"type": "address"
								}
							],
							"name": "dewhitelistContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getBTSAtIndex",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenB",
									"type": "address"
								}
							],
							"name": "getPath",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPlatformFeeConfig",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_alva",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_minPercentALVA",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "_btsImplementation",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_btsPairImplementation",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_monthlyFeeRate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_collectionUri",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_feeCollector",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_defaultMarketplace",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_wethAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_minBTSCreationAmount",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddr",
									"type": "address"
								}
							],
							"name": "isWhitelistedContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minBTSCreationAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minLpWithdrawal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minPercentALVA",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyFeeRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeCollector",
									"type": "address"
								}
							],
							"name": "setFeeCollector",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMin",
									"type": "uint256"
								}
							],
							"name": "setMinLpWithdrawal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_btsCreationFee",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_contributionFee",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_withdrawalFee",
									"type": "uint16"
								}
							],
							"name": "setPlatformFeeConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBTS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_alva",
									"type": "address"
								}
							],
							"name": "updateAlva",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_btsImplementation",
									"type": "address"
								}
							],
							"name": "updateBTSImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_btsPairImplementation",
									"type": "address"
								}
							],
							"name": "updateBTSPairImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_collectionURI",
									"type": "string"
								}
							],
							"name": "updateCollectionURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minBTSCreationAmount",
									"type": "uint256"
								}
							],
							"name": "updateMinBTSCreationAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_minPercentALVA",
									"type": "uint16"
								}
							],
							"name": "updateMinPercentALVA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyPercentage",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_royaltyReceiver",
									"type": "address"
								}
							],
							"name": "updateRoyaltyReceiver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weth",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addWhitelistedContract(address)": "46704adb",
							"alva()": "b28775cd",
							"btsImplementation()": "f74a28d1",
							"btsPairImplementation()": "f1f0471b",
							"calMgmtFee(uint256,uint256)": "d23aaed3",
							"collectionUri()": "defcd4b3",
							"createBTS(string,string,address[],uint256[],string,uint256,string,string,uint256)": "6a026bcf",
							"dewhitelistContract(address)": "0b9421bd",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"getBTSAtIndex(uint256)": "0aa959a3",
							"getContractURI()": "37929eb4",
							"getPath(address,address)": "d88e3e3b",
							"getPlatformFeeConfig()": "c4e994a0",
							"initialize(address,uint16,address,address,uint256,address,string,address,address,address,address,uint256)": "ea2cc846",
							"isWhitelistedContract(address)": "3b9589a9",
							"minBTSCreationAmount()": "22ee3fa1",
							"minLpWithdrawal()": "6dbd5d2a",
							"minPercentALVA()": "01c4aebe",
							"monthlyFeeRate()": "ef1e095f",
							"router()": "f887ea40",
							"royaltyPercentage()": "8a71bb2d",
							"royaltyReceiver()": "9fbc8713",
							"setFeeCollector(address)": "a42dce80",
							"setMinLpWithdrawal(uint256)": "b0ec8be9",
							"setPlatformFeeConfig(uint16,uint16,uint16)": "bbf75517",
							"totalBTS()": "2782447a",
							"updateAlva(address)": "5ee70f09",
							"updateBTSImplementation(address)": "c43ba010",
							"updateBTSPairImplementation(address)": "31e15c7c",
							"updateCollectionURI(string)": "7910af6f",
							"updateMinBTSCreationAmount(uint256)": "0217d7c3",
							"updateMinPercentALVA(uint16)": "251ae3d6",
							"updateRoyaltyPercentage(uint256)": "621bb669",
							"updateRoyaltyReceiver(address)": "29dc4d9b",
							"weth()": "3fc8cef3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"addWhitelistedContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alva\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"btsImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"btsPairImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"months\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpSupply\",\"type\":\"uint256\"}],\"name\":\"calMgmtFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectionUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_buffer\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"createBTS\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"dewhitelistContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getBTSAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"getPath\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlatformFeeConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_alva\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_minPercentALVA\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_btsImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_btsPairImplementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_monthlyFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_collectionUri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultMarketplace\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wethAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minBTSCreationAmount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"isWhitelistedContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBTSCreationAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLpWithdrawal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPercentALVA\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMin\",\"type\":\"uint256\"}],\"name\":\"setMinLpWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_btsCreationFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_contributionFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_withdrawalFee\",\"type\":\"uint16\"}],\"name\":\"setPlatformFeeConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_alva\",\"type\":\"address\"}],\"name\":\"updateAlva\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_btsImplementation\",\"type\":\"address\"}],\"name\":\"updateBTSImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_btsPairImplementation\",\"type\":\"address\"}],\"name\":\"updateBTSPairImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_collectionURI\",\"type\":\"string\"}],\"name\":\"updateCollectionURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minBTSCreationAmount\",\"type\":\"uint256\"}],\"name\":\"updateMinBTSCreationAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_minPercentALVA\",\"type\":\"uint16\"}],\"name\":\"updateMinPercentALVA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyPercentage\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyReceiver\",\"type\":\"address\"}],\"name\":\"updateRoyaltyReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0x5636330ecca844a604c16c4f296b8d2912ebacd47833514c290e3cd988a21b37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cddc3566c0eba18fae8c0942e638bc5b3c325f2e3f9579ce035861634f0bdc51\",\"dweb:/ipfs/QmZ6ZHCi4KwDjLTWAJs7QLe67Pv3QwBijv9ErY813umBMg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/tokens/BTSPair.sol": {
				"BasketTokenStandardPair": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "paramName",
									"type": "string"
								}
							],
							"name": "EmptyStringParameter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientLiquidity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								}
							],
							"name": "TokensUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "months",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAccruedAt",
									"type": "uint256"
								}
							],
							"name": "feeAccrued",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "months",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountLP",
									"type": "uint256"
								}
							],
							"name": "calculateShareETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountETH",
									"type": "uint256"
								}
							],
							"name": "calculateShareLP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountLP",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountLP",
									"type": "uint256"
								}
							],
							"name": "calculateShareTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amountTokens",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distMgmtFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getTokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getTokenAndUserBal",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getTokenReserve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokensReserve",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalMgmtFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factoryAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastAccruedAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reentrancyGuardEntered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "setReentrancyGuardStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferTokensToOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								}
							],
							"name": "updateTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements ERC20 for liquidity tokens and acts as a liquidity pool for the specified tokens",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InsufficientLiquidity()": [
								{
									"details": "The InsufficientLiquidity error is thrown when there is not enough liquidity for an operation"
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"InvalidRecipient()": [
								{
									"details": "The InvalidRecipient error is thrown when an address is zero"
								}
							],
							"InvalidToken()": [
								{
									"details": "The InvalidToken error is thrown when a token address is invalid"
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrantCall()": [
								{
									"details": "The ReentrancyError is thrown when a reentrancy attempt is detected"
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"TokensUpdated(address[])": {
								"params": {
									"_tokens": "New array of token addresses"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"feeAccrued(address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount": "Amount of LP tokens to be minted",
									"months": "Number of months since last accrual",
									"newAccruedAt": "New timestamp for accrual",
									"owner": "Address of the BTS",
									"supply": "Current supply of LP tokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(address)": {
								"details": "Burns LP tokens and transfers the corresponding tokens to the recipient",
								"params": {
									"_to": "Address to transfer tokens to"
								},
								"returns": {
									"amounts": "Array of token amounts transferred"
								}
							},
							"calFee()": {
								"details": "Calculates the management fee based on the time elapsed since last accrual",
								"returns": {
									"feeAmount": "Amount of LP tokens to be minted",
									"months": "Number of months since last accrual",
									"supply": "Current supply of LP tokens"
								}
							},
							"calculateShareETH(uint256)": {
								"details": "Calculates the equivalent ETH value for a specific amount of LP tokens",
								"params": {
									"_amountLP": "Amount of LP tokens to calculate share for"
								},
								"returns": {
									"amountETH": "Amount of ETH"
								}
							},
							"calculateShareLP(uint256)": {
								"details": "Calculates the amount of LP tokens for a specific amount of ETH value",
								"params": {
									"_amountETH": "Amount of ETH to calculate share for"
								},
								"returns": {
									"amountLP": "Amount of LP tokens"
								}
							},
							"calculateShareTokens(uint256)": {
								"details": "Calculates the token amounts that correspond to a specific amount of LP tokens",
								"params": {
									"_amountLP": "Amount of LP tokens to calculate share for"
								},
								"returns": {
									"amountTokens": "Array of token amounts corresponding to the LP tokens"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"distMgmtFee()": {
								"details": "Mints LP tokens for the BTS manager and updates the accrual time. It can be called by internal functions, external cron jobs, or manually by any account."
							},
							"getTokenAddress(uint256)": {
								"params": {
									"_index": "Index of the token in the basket"
								},
								"returns": {
									"_0": "Token address"
								}
							},
							"getTokenAndUserBal(address)": {
								"details": "Returns the token balances in the contract and the user's LP token balance",
								"params": {
									"_user": "Address to get user balance for"
								},
								"returns": {
									"_0": "_tokenBal Array of token balances in the contract",
									"_1": "_supply Total supply of LP tokens",
									"_2": "_userLP User's LP token balance"
								}
							},
							"getTokenList()": {
								"details": "Returns the array of token addresses in the basket",
								"returns": {
									"_0": "Array of token addresses"
								}
							},
							"getTokenReserve(uint256)": {
								"params": {
									"_index": "Index of the token in the basket"
								},
								"returns": {
									"_0": "Token reserve"
								}
							},
							"getTokensReserve()": {
								"details": "Returns the array of token reserves in the basket",
								"returns": {
									"_0": "Array of token reserves"
								}
							},
							"getTotalMgmtFee()": {
								"details": "Returns the fee by calculating new fee and adding existing fee balance",
								"returns": {
									"_0": "Total management fee"
								}
							},
							"initialize(address,string,address[])": {
								"details": "Sets up the ERC20 token and initializes pair parameters",
								"params": {
									"_factoryAddress": "Factory contract address",
									"_name": "Name of the pair token",
									"_tokens": "Array of token addresses in the pair"
								}
							},
							"mint(address,uint256[])": {
								"details": "Calculates the liquidity amount based on token balances and mints LP tokens",
								"params": {
									"_to": "Address to mint tokens to"
								},
								"returns": {
									"liquidity": "Amount of liquidity tokens minted"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setReentrancyGuardStatus(bool)": {
								"params": {
									"_state": "New state for the reentrancy guard flag for read-only functions"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"transferTokensToOwner()": {
								"details": "Transfers all tokens to the owner, typically called during basket rebalancing"
							},
							"updateTokens(address[])": {
								"details": "Updates the tokens array and recalculates reserves",
								"params": {
									"_tokens": "New array of token addresses"
								}
							}
						},
						"stateVariables": {
							"factory": {
								"details": "The factory contract is responsible for managing the liquidity pairs"
							},
							"lastAccruedAt": {
								"details": "The lastAccruedAt variable stores the timestamp for occurrence of fee accrual"
							},
							"reentrancyGuardEntered": {
								"details": "Prevents reentrancy by checking the state of operations in BTS"
							},
							"reserves": {
								"details": "The reserves array stores the reserve amounts of the tokens in the basket"
							},
							"tokens": {
								"details": "The tokens array stores the addresses of the tokens in the basket"
							}
						},
						"title": "Basket Token Standard Pair",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/BTSPair.sol\":584:17390  contract BasketTokenStandardPair is ERC20Upgradeable, OwnableUpgradeable, IBTSPair {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/BTSPair.sol\":584:17390  contract BasketTokenStandardPair is ERC20Upgradeable, OwnableUpgradeable, IBTSPair {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9257fa07\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd2c725e0\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xde836ebd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xde836ebd\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe54ef9a0\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xec5975c6\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_37:\n      dup1\n      0xd2c725e0\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd410ad7d\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xde41691c\n      eq\n      tag_30\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      dup1\n      0xa9059cbb\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb4b93c8c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xba6ba385\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      dup1\n      0x9257fa07\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa131d436\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa7c7fdeb\n      eq\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      dup1\n      0x5483067d\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x89afcb44\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8e73f1b4\n      eq\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      dup1\n      0x5483067d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x55917ebe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x67ccdf38\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      dup1\n      0x23b872dd\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x273cbaa0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3a105cfb\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x090318fb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/BTSPair.sol\":15300:15455  function getTotalMgmtFee() external view returns (uint) { ... */\n    tag_4:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":583:608   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":571:573   */\n      0x20\n        /* \"#utility.yul\":556:574   */\n      add\n        /* \"contracts/tokens/BTSPair.sol\":15300:15455  function getTotalMgmtFee() external view returns (uint) { ... */\n      tag_44\n        /* \"#utility.yul\":437:614   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":1292:1306   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1285:1307   */\n      iszero\n        /* \"#utility.yul\":1267:1308   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1255:1257   */\n      0x20\n        /* \"#utility.yul\":1240:1258   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_44\n        /* \"#utility.yul\":1127:1314   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      mload(0x00)\n      codecopy(0x00, data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4022  $._totalSupply */\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_46)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_50\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":14728:14850  function getTokenList() public view nonReentrantReadOnly... */\n    tag_8:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3808:3810  18 */\n      0x12\n        /* \"#utility.yul\":2691:2727   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x20\n        /* \"#utility.yul\":2664:2682   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n      tag_44\n        /* \"#utility.yul\":2549:2733   */\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":4084:4652  function initialize(... */\n    tag_10:\n      tag_72\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/tokens/BTSPair.sol\":1166:1194  uint256 public lastAccruedAt */\n    tag_11:\n      tag_46\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":13628:13945  function calFee() public view returns (uint256 months, uint256 supply, uint256 feeAmount) {... */\n    tag_12:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4961:4986   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":5017:5019   */\n      0x20\n        /* \"#utility.yul\":5002:5020   */\n      dup5\n      add\n        /* \"#utility.yul\":4995:5029   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5045:5063   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5038:5072   */\n      mstore\n        /* \"#utility.yul\":4949:4951   */\n      0x60\n        /* \"#utility.yul\":4934:4952   */\n      add\n        /* \"contracts/tokens/BTSPair.sol\":13628:13945  function calFee() public view returns (uint256 months, uint256 supply, uint256 feeAmount) {... */\n      tag_44\n        /* \"#utility.yul\":4759:5078   */\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":14092:14260  function getTokenAddress(uint256 _index)... */\n    tag_13:\n      tag_83\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5478:5510   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5460:5511   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5448:5450   */\n      0x20\n        /* \"#utility.yul\":5433:5451   */\n      add\n        /* \"contracts/tokens/BTSPair.sol\":14092:14260  function getTokenAddress(uint256 _index)... */\n      tag_44\n        /* \"#utility.yul\":5314:5517   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_46\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_72\n      tag_95\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":7568:8453  function burn(address _to)... */\n    tag_16:\n      tag_96\n      tag_97\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_83\n      tag_102\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":14407:14577  function getTokenReserve(uint256 _index)... */\n    tag_18:\n      tag_46\n      tag_105\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":10470:11421  function calculateShareETH(uint256 _amountLP)... */\n    tag_19:\n      tag_46\n      tag_109\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_42\n      tag_113\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":12647:13315  function getTokenAndUserBal(address _user)... */\n    tag_21:\n      tag_115\n      tag_116\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_44\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":4988:5485  function transferTokensToOwner() external onlyOwner {... */\n    tag_22:\n      tag_72\n      tag_121\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4453:4631  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n      tag_50\n      tag_123\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":9131:9529  function distMgmtFee() public {... */\n    tag_24:\n      tag_72\n      tag_127\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":8662:8776  function setReentrancyGuardStatus(bool _state) external onlyOwner {... */\n    tag_25:\n      tag_72\n      tag_129\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":996:1018  address public factory */\n    tag_26:\n      sload(0x00)\n      tag_83\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":1325:1359  bool public reentrancyGuardEntered */\n    tag_27:\n      sload(0x02)\n      tag_50\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":11721:12283  function calculateShareTokens(uint256 _amountLP)... */\n    tag_28:\n      tag_96\n      tag_139\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_29:\n      tag_46\n      tag_143\n      calldatasize\n      0x04\n      tag_144\n      jump\t// in\n    tag_143:\n      tag_145\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":5706:5937  function updateTokens(address[] calldata _tokens) external onlyOwner {... */\n    tag_30:\n      tag_72\n      tag_148\n      calldatasize\n      0x04\n      tag_149\n      jump\t// in\n    tag_148:\n      tag_150\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":6236:7270  function mint(address _to, uint256[] calldata amounts)... */\n    tag_31:\n      tag_46\n      tag_152\n      calldatasize\n      0x04\n      tag_153\n      jump\t// in\n    tag_152:\n      tag_154\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":9926:10224  function calculateShareLP(uint256 _amountETH)... */\n    tag_32:\n      tag_46\n      tag_157\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":14999:15127  function getTokensReserve() public view nonReentrantReadOnly... */\n    tag_33:\n      tag_96\n      tag_161\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n      tag_72\n      tag_164\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2834  $._name */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2820:2834  return $._name */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2742:2755  string memory */\n      0x60\n      swap2\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2820:2834  return $._name */\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_170\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":15300:15455  function getTotalMgmtFee() external view returns (uint) { ... */\n    tag_47:\n        /* \"contracts/tokens/BTSPair.sol\":15350:15354  uint */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":15372:15389  uint256 feeAmount */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":15393:15401  calFee() */\n      tag_176\n        /* \"contracts/tokens/BTSPair.sol\":15393:15399  calFee */\n      tag_80\n        /* \"contracts/tokens/BTSPair.sol\":15393:15401  calFee() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/tokens/BTSPair.sol\":15367:15401  (, , uint256 feeAmount) = calFee() */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":15430:15448  balanceOf(owner()) */\n      tag_177\n        /* \"contracts/tokens/BTSPair.sol\":15440:15447  owner() */\n      tag_90\n        /* \"contracts/tokens/BTSPair.sol\":15440:15445  owner */\n      tag_102\n        /* \"contracts/tokens/BTSPair.sol\":15440:15447  owner() */\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":15430:15448  balanceOf(owner()) */\n    tag_177:\n        /* \"contracts/tokens/BTSPair.sol\":15418:15448  feeAmount + balanceOf(owner()) */\n      tag_179\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":15418:15427  feeAmount */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":15418:15448  feeAmount + balanceOf(owner()) */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"contracts/tokens/BTSPair.sol\":15411:15448  return feeAmount + balanceOf(owner()) */\n      swap2\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":15300:15455  function getTotalMgmtFee() external view returns (uint) { ... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5264:5268  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5349  _approve(owner, spender, value) */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5334:5341  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5343:5348  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5326  _approve */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5318:5349  _approve(owner, spender, value) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5366:5370  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5359:5370  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5191:5377  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_181:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6056:6060  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6149  _spendAllowance(from, spender, value) */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6128:6132  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6143:6148  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6127  _spendAllowance */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6112:6149  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6185  _transfer(from, to, value) */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6169:6173  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6175:6177  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6179:6184  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6168  _transfer */\n      tag_193\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6159:6185  _transfer(from, to, value) */\n      jump\t// in\n    tag_192:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6202:6206  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5969:6213  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":14728:14850  function getTokenList() public view nonReentrantReadOnly... */\n    tag_65:\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      sload(0x02)\n        /* \"contracts/tokens/BTSPair.sol\":14802:14818  address[] memory */\n      0x60\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      0xff\n      and\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n      iszero\n      tag_195\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":1951:1966  ReentrantCall() */\n      mload(0x40)\n      shl(0xe3, 0x06fda65d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n    tag_195:\n        /* \"contracts/tokens/BTSPair.sol\":14837:14843  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":14830:14843  return tokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_198:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_198\n      jumpi\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":14728:14850  function getTokenList() public view nonReentrantReadOnly... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":4084:4652  function initialize(... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_201\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0xff\n      shl(0x40, 0x01)\n      dup3\n      div\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_203\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_207:\n        /* \"contracts/tokens/BTSPair.sol\":4261:4262  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":4243:4262  _tokens.length == 0 */\n      dup7\n      swap1\n      sub\n        /* \"contracts/tokens/BTSPair.sol\":4239:4285  if (_tokens.length == 0) revert InvalidToken() */\n      tag_209\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":4271:4285  InvalidToken() */\n      mload(0x40)\n      shl(0xe0, 0xc1ab6dc1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":4239:4285  if (_tokens.length == 0) revert InvalidToken() */\n    tag_209:\n        /* \"contracts/tokens/BTSPair.sol\":4305:4310  _name */\n      dup8\n        /* \"contracts/tokens/BTSPair.sol\":4299:4318  bytes(_name).length */\n      mload\n        /* \"contracts/tokens/BTSPair.sol\":4322:4323  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":4299:4323  bytes(_name).length == 0 */\n      sub\n        /* \"contracts/tokens/BTSPair.sol\":4295:4360  if (bytes(_name).length == 0) revert EmptyStringParameter(\"name\") */\n      tag_210\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":4332:4360  EmptyStringParameter(\"name\") */\n      mload(0x40)\n      shl(0xe2, 0x24321863)\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n        /* \"#utility.yul\":9503:9505   */\n      0x20\n        /* \"#utility.yul\":9485:9506   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9542:9543   */\n      0x04\n        /* \"#utility.yul\":9522:9540   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9515:9544   */\n      mstore\n      shl(0xe0, 0x6e616d65)\n        /* \"#utility.yul\":9575:9577   */\n      0x40\n        /* \"#utility.yul\":9560:9578   */\n      dup3\n      add\n        /* \"#utility.yul\":9553:9587   */\n      mstore\n        /* \"#utility.yul\":9619:9621   */\n      0x60\n        /* \"#utility.yul\":9604:9622   */\n      add\n      swap1\n        /* \"#utility.yul\":9301:9628   */\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":4332:4360  EmptyStringParameter(\"name\") */\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":4295:4360  if (bytes(_name).length == 0) revert EmptyStringParameter(\"name\") */\n    tag_210:\n        /* \"contracts/tokens/BTSPair.sol\":4403:4408  _name */\n      dup8\n        /* \"contracts/tokens/BTSPair.sol\":4386:4416  abi.encodePacked(_name, \"-LP\") */\n      add(0x20, mload(0x40))\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/tokens/BTSPair.sol\":4371:4417  _name = string(abi.encodePacked(_name, \"-LP\")) */\n      swap8\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":4428:4454  __ERC20_init(_name, _name) */\n      tag_215\n        /* \"contracts/tokens/BTSPair.sol\":4441:4446  _name */\n      dup9\n        /* \"contracts/tokens/BTSPair.sol\":4448:4453  _name */\n      dup10\n        /* \"contracts/tokens/BTSPair.sol\":4428:4440  __ERC20_init */\n      tag_216\n        /* \"contracts/tokens/BTSPair.sol\":4428:4454  __ERC20_init(_name, _name) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/tokens/BTSPair.sol\":4464:4490  __Ownable_init(msg.sender) */\n      tag_217\n        /* \"contracts/tokens/BTSPair.sol\":4479:4489  msg.sender */\n      caller\n        /* \"contracts/tokens/BTSPair.sol\":4464:4478  __Ownable_init */\n      tag_218\n        /* \"contracts/tokens/BTSPair.sol\":4464:4490  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/tokens/BTSPair.sol\":4501:4517  tokens = _tokens */\n      tag_219\n        /* \"contracts/tokens/BTSPair.sol\":4501:4507  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":4510:4517  _tokens */\n      dup9\n      dup9\n        /* \"contracts/tokens/BTSPair.sol\":4501:4517  tokens = _tokens */\n      tag_220\n      jump\t// in\n    tag_219:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":4554:4560  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":4554:4567  tokens.length */\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":4538:4568  new uint256[]  (tokens.length) */\n      dup2\n      gt\n      iszero\n      tag_222\n      jumpi\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_224\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_224:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":4527:4568  reserves = new uint256[]  (tokens.length) */\n      dup1\n      mload\n      tag_225\n      swap2\n        /* \"contracts/tokens/BTSPair.sol\":4527:4535  reserves */\n      0x04\n      swap2\n        /* \"contracts/tokens/BTSPair.sol\":4527:4568  reserves = new uint256[]  (tokens.length) */\n      0x20\n      swap1\n      swap2\n      add\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":4579:4586  factory */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":4579:4604  factory = _factoryAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/BTSPair.sol\":4630:4645  block.timestamp */\n      timestamp\n      0x01\n        /* \"contracts/tokens/BTSPair.sol\":4614:4645  lastAccruedAt = block.timestamp */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":10356:10406   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":10344:10346   */\n      0x20\n        /* \"#utility.yul\":10329:10347   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":4084:4652  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":13628:13945  function calFee() public view returns (uint256 months, uint256 supply, uint256 feeAmount) {... */\n    tag_80:\n        /* \"contracts/tokens/BTSPair.sol\":13667:13681  uint256 months */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":13683:13697  uint256 supply */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":13699:13716  uint256 feeAmount */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":13772:13779  30 days */\n      0x278d00\n        /* \"contracts/tokens/BTSPair.sol\":13756:13769  lastAccruedAt */\n      sload(0x01)\n        /* \"contracts/tokens/BTSPair.sol\":13738:13753  block.timestamp */\n      timestamp\n        /* \"contracts/tokens/BTSPair.sol\":13738:13769  block.timestamp - lastAccruedAt */\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"contracts/tokens/BTSPair.sol\":13737:13779  (block.timestamp - lastAccruedAt)/ 30 days */\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"contracts/tokens/BTSPair.sol\":13728:13779  months = (block.timestamp - lastAccruedAt)/ 30 days */\n      swap3\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":13798:13811  totalSupply() */\n      tag_235\n      mload(0x00)\n      codecopy(0x00, data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4022  $._totalSupply */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":13798:13811  totalSupply() */\n    tag_235:\n        /* \"contracts/tokens/BTSPair.sol\":13789:13811  supply = totalSupply() */\n      swap2\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":13824:13835  months == 0 */\n      dup3\n      iszero\n      dup1\n        /* \"contracts/tokens/BTSPair.sol\":13824:13850  months == 0 || supply == 0 */\n      tag_236\n      jumpi\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":13839:13850  supply == 0 */\n      dup2\n      iszero\n        /* \"contracts/tokens/BTSPair.sol\":13824:13850  months == 0 || supply == 0 */\n    tag_236:\n        /* \"contracts/tokens/BTSPair.sol\":13821:13878  if(months == 0 || supply == 0) return (months, supply, 0) */\n      iszero\n      tag_237\n      jumpi\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":13860:13866  months */\n      swap1\n      swap2\n        /* \"contracts/tokens/BTSPair.sol\":13876:13877  0 */\n      0x00\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":13628:13945  function calFee() public view returns (uint256 months, uint256 supply, uint256 feeAmount) {... */\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":13821:13878  if(months == 0 || supply == 0) return (months, supply, 0) */\n    tag_237:\n        /* \"contracts/tokens/BTSPair.sol\":15866:15874  IFactory */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":15902:15909  factory */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/tokens/BTSPair.sol\":13901:13938  _factory().calMgmtFee(months, supply) */\n      mload(0x40)\n      shl(0xe0, 0xd23aaed3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":10946:10971   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":10987:11005   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10980:11014   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":13901:13922  _factory().calMgmtFee */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n      0xd23aaed3\n      swap1\n        /* \"#utility.yul\":10919:10937   */\n      0x44\n      add\n        /* \"contracts/tokens/BTSPair.sol\":13901:13938  _factory().calMgmtFee(months, supply) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"contracts/tokens/BTSPair.sol\":13888:13938  feeAmount  = _factory().calMgmtFee(months, supply) */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":13628:13945  function calFee() public view returns (uint256 months, uint256 supply, uint256 feeAmount) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":14092:14260  function getTokenAddress(uint256 _index)... */\n    tag_86:\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      sload(0x02)\n        /* \"contracts/tokens/BTSPair.sol\":14209:14216  address */\n      0x00\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      0xff\n      and\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n      iszero\n      tag_247\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":1951:1966  ReentrantCall() */\n      mload(0x40)\n      shl(0xe3, 0x06fda65d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n    tag_247:\n        /* \"contracts/tokens/BTSPair.sol\":14239:14245  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":14246:14252  _index */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":14239:14253  tokens[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_250\n      jumpi\n      tag_250\n      tag_251\n      jump\t// in\n    tag_250:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n        /* \"contracts/tokens/BTSPair.sol\":14092:14260  function getTokenAddress(uint256 _index)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4251  $._balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4152:4159  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4231:4251  $._balances[account] */\n      swap1\n      dup2\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4087:4258  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_260\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":7568:8453  function burn(address _to)... */\n    tag_98:\n        /* \"contracts/tokens/BTSPair.sol\":7647:7671  uint256[] memory amounts */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_262:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":7691:7708  _to == address(0) */\n      dup3\n      and\n        /* \"contracts/tokens/BTSPair.sol\":7687:7735  if (_to == address(0)) revert InvalidRecipient() */\n      tag_264\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":7717:7735  InvalidRecipient() */\n      mload(0x40)\n      shl(0xe1, 0x4e469669)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":7687:7735  if (_to == address(0)) revert InvalidRecipient() */\n    tag_264:\n        /* \"contracts/tokens/BTSPair.sol\":7746:7759  distMgmtFee() */\n      tag_265\n        /* \"contracts/tokens/BTSPair.sol\":7746:7757  distMgmtFee */\n      tag_127\n        /* \"contracts/tokens/BTSPair.sol\":7746:7759  distMgmtFee() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/tokens/BTSPair.sol\":7769:7787  uint256 _liquidity */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":7790:7814  balanceOf(address(this)) */\n      tag_266\n        /* \"contracts/tokens/BTSPair.sol\":7808:7812  this */\n      address\n        /* \"contracts/tokens/BTSPair.sol\":7790:7799  balanceOf */\n      tag_92\n        /* \"contracts/tokens/BTSPair.sol\":7790:7814  balanceOf(address(this)) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/tokens/BTSPair.sol\":7769:7814  uint256 _liquidity = balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":7828:7838  _liquidity */\n      dup1\n        /* \"contracts/tokens/BTSPair.sol\":7842:7843  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":7828:7843  _liquidity == 0 */\n      sub\n        /* \"contracts/tokens/BTSPair.sol\":7824:7875  if (_liquidity == 0) revert InsufficientLiquidity() */\n      tag_267\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":7852:7875  InsufficientLiquidity() */\n      mload(0x40)\n      shl(0xe0, 0xbb55fd27)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":7824:7875  if (_liquidity == 0) revert InsufficientLiquidity() */\n    tag_267:\n        /* \"contracts/tokens/BTSPair.sol\":7896:7928  calculateShareTokens(_liquidity) */\n      tag_268\n        /* \"contracts/tokens/BTSPair.sol\":7917:7927  _liquidity */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":7896:7916  calculateShareTokens */\n      tag_140\n        /* \"contracts/tokens/BTSPair.sol\":7896:7928  calculateShareTokens(_liquidity) */\n      jump\t// in\n    tag_268:\n        /* \"contracts/tokens/BTSPair.sol\":7886:7928  amounts = calculateShareTokens(_liquidity) */\n      swap2\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":7938:7970  _burn(address(this), _liquidity) */\n      tag_269\n        /* \"contracts/tokens/BTSPair.sol\":7952:7956  this */\n      address\n        /* \"contracts/tokens/BTSPair.sol\":7959:7969  _liquidity */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":7938:7943  _burn */\n      tag_270\n        /* \"contracts/tokens/BTSPair.sol\":7938:7970  _burn(address(this), _liquidity) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/tokens/BTSPair.sol\":8003:8009  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":8003:8016  tokens.length */\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":7980:8000  uint256 tokensLength */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":8027:8447  for (uint256 i = 0; i < tokensLength; ) {... */\n    tag_271:\n        /* \"contracts/tokens/BTSPair.sol\":8051:8063  tokensLength */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":8047:8048  i */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":8047:8063  i < tokensLength */\n      lt\n        /* \"contracts/tokens/BTSPair.sol\":8027:8447  for (uint256 i = 0; i < tokensLength; ) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":8081:8095  uint256 amount */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":8098:8105  amounts */\n      dup5\n        /* \"contracts/tokens/BTSPair.sol\":8106:8107  i */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":8098:8108  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_275\n      jumpi\n      tag_275\n      tag_251\n      jump\t// in\n    tag_275:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/tokens/BTSPair.sol\":8081:8108  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":8135:8136  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":8126:8132  amount */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":8126:8136  amount > 0 */\n      gt\n        /* \"contracts/tokens/BTSPair.sol\":8122:8314  if (amount > 0){... */\n      iszero\n      tag_276\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":8155:8168  address token */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":8171:8177  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":8178:8179  i */\n      dup4\n        /* \"contracts/tokens/BTSPair.sol\":8171:8180  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_278\n      jumpi\n      tag_278\n      tag_251\n      jump\t// in\n    tag_278:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":8225:8275  IERC20Upgradeable(token).safeTransfer(_to, amount) */\n      tag_280\n        /* \"contracts/tokens/BTSPair.sol\":8171:8180  tokens[i] */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":8263:8266  _to */\n      dup9\n        /* \"contracts/tokens/BTSPair.sol\":8268:8274  amount */\n      dup5\n        /* \"contracts/tokens/BTSPair.sol\":8225:8262  IERC20Upgradeable(token).safeTransfer */\n      tag_281\n        /* \"contracts/tokens/BTSPair.sol\":8225:8275  IERC20Upgradeable(token).safeTransfer(_to, amount) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/tokens/BTSPair.sol\":8137:8314  {... */\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":8122:8314  if (amount > 0){... */\n    tag_276:\n        /* \"contracts/tokens/BTSPair.sol\":8345:8351  amount */\n      dup1\n        /* \"contracts/tokens/BTSPair.sol\":8330:8338  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":8339:8340  i */\n      dup4\n        /* \"contracts/tokens/BTSPair.sol\":8330:8341  reserves[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_283\n      jumpi\n      tag_283\n      tag_251\n      jump\t// in\n    tag_283:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":8330:8351  reserves[i] -= amount */\n      dup3\n      dup3\n      sload\n      tag_285\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_285:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":8419:8422  ++i */\n      0x01\n      add\n        /* \"contracts/tokens/BTSPair.sol\":8027:8447  for (uint256 i = 0; i < tokensLength; ) {... */\n      jump(tag_271)\n    tag_272:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":7677:8453  {... */\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":7568:8453  function burn(address _to)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":14407:14577  function getTokenReserve(uint256 _index)... */\n    tag_106:\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      sload(0x02)\n        /* \"contracts/tokens/BTSPair.sol\":14524:14531  uint256 */\n      0x00\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      0xff\n      and\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n      iszero\n      tag_290\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":1951:1966  ReentrantCall() */\n      mload(0x40)\n      shl(0xe3, 0x06fda65d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n    tag_290:\n        /* \"contracts/tokens/BTSPair.sol\":14554:14562  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":14563:14569  _index */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":14554:14570  reserves[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_293\n      tag_251\n      jump\t// in\n    tag_293:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":14547:14570  return reserves[_index] */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":14407:14577  function getTokenReserve(uint256 _index)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":10470:11421  function calculateShareETH(uint256 _amountLP)... */\n    tag_110:\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      sload(0x02)\n        /* \"contracts/tokens/BTSPair.sol\":10574:10591  uint256 amountETH */\n      0x00\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      0xff\n      and\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n      iszero\n      tag_296\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":1951:1966  ReentrantCall() */\n      mload(0x40)\n      shl(0xe3, 0x06fda65d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n    tag_296:\n        /* \"contracts/tokens/BTSPair.sol\":10607:10621  uint256 supply */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":10624:10637  totalSupply() */\n      tag_298\n      mload(0x00)\n      codecopy(0x00, data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4022  $._totalSupply */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":10624:10637  totalSupply() */\n    tag_298:\n        /* \"contracts/tokens/BTSPair.sol\":10607:10637  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":10676:10682  supply */\n      dup1\n        /* \"contracts/tokens/BTSPair.sol\":10686:10687  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":10676:10687  supply == 0 */\n      sub\n        /* \"contracts/tokens/BTSPair.sol\":10672:10697  if (supply == 0) return 0 */\n      tag_299\n      jumpi\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":10696:10697  0 */\n      0x00\n      swap3\n        /* \"contracts/tokens/BTSPair.sol\":14092:14260  function getTokenAddress(uint256 _index)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":10672:10697  if (supply == 0) return 0 */\n    tag_299:\n        /* \"contracts/tokens/BTSPair.sol\":10716:10740  IFactory factoryInstance */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":15902:15909  factory */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/tokens/BTSPair.sol\":10716:10753  IFactory factoryInstance = _factory() */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":10763:10785  uint256 reservesLength */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":10788:10796  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":10788:10803  reserves.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":10763:10803  uint256 reservesLength = reserves.length */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":10813:10832  address wethAddress */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":10835:10850  factoryInstance */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":10835:10855  factoryInstance.weth */\n      and\n      0x3fc8cef3\n        /* \"contracts/tokens/BTSPair.sol\":10835:10857  factoryInstance.weth() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_302\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_302:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_303\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"contracts/tokens/BTSPair.sol\":10813:10857  address wethAddress = factoryInstance.weth() */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":10881:10890  uint256 i */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":10876:11415  for (uint256 i = 0; i < reservesLength; ) {... */\n    tag_305:\n        /* \"contracts/tokens/BTSPair.sol\":10900:10914  reservesLength */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":10896:10897  i */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":10896:10914  i < reservesLength */\n      lt\n        /* \"contracts/tokens/BTSPair.sol\":10876:11415  for (uint256 i = 0; i < reservesLength; ) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":10932:10945  address token */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":10948:10954  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":10955:10956  i */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":10948:10957  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_309\n      jumpi\n      tag_309\n      tag_251\n      jump\t// in\n    tag_309:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":11013:11021  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":11013:11024  reserves[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":10948:10957  tokens[i] */\n      swap1\n      swap3\n      and\n      swap4\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":11013:11021  reserves */\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":11022:11023  i */\n      dup5\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":11013:11024  reserves[i] */\n      dup2\n      lt\n      tag_312\n      jumpi\n      tag_312\n      tag_251\n      jump\t// in\n    tag_312:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":10990:11024  uint256 tokenBalance = reserves[i] */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":11083:11084  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":11068:11080  tokenBalance */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":11068:11084  tokenBalance > 0 */\n      gt\n        /* \"contracts/tokens/BTSPair.sol\":11064:11346  if (tokenBalance > 0) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":11128:11171  factoryInstance.getPath(token, wethAddress) */\n      mload(0x40)\n      shl(0xe0, 0xd88e3e3b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11794:11826   */\n      dup4\n      dup2\n      and\n        /* \"contracts/tokens/BTSPair.sol\":11128:11171  factoryInstance.getPath(token, wethAddress) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":11776:11827   */\n      mstore\n        /* \"#utility.yul\":11863:11895   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11843:11861   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11836:11896   */\n      mstore\n        /* \"contracts/tokens/BTSPair.sol\":11104:11125  address[] memory path */\n      0x00\n      swap2\n        /* \"contracts/tokens/BTSPair.sol\":11128:11151  factoryInstance.getPath */\n      swap1\n      dup9\n      and\n      swap1\n      0xd88e3e3b\n      swap1\n        /* \"#utility.yul\":11749:11767   */\n      0x44\n      add\n        /* \"contracts/tokens/BTSPair.sol\":11128:11171  factoryInstance.getPath(token, wethAddress) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_318\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_318:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_319\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"contracts/tokens/BTSPair.sol\":11104:11171  address[] memory path = factoryInstance.getPath(token, wethAddress) */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":11207:11220  uint256 share */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":11252:11258  supply */\n      dup9\n        /* \"contracts/tokens/BTSPair.sol\":11224:11248  _amountLP * tokenBalance */\n      tag_321\n        /* \"contracts/tokens/BTSPair.sol\":11236:11248  tokenBalance */\n      dup5\n        /* \"contracts/tokens/BTSPair.sol\":11224:11233  _amountLP */\n      dup14\n        /* \"contracts/tokens/BTSPair.sol\":11224:11248  _amountLP * tokenBalance */\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"contracts/tokens/BTSPair.sol\":11223:11258  (_amountLP * tokenBalance) / supply */\n      tag_323\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_323:\n        /* \"contracts/tokens/BTSPair.sol\":11289:11331  factoryInstance.getAmountsOut(share, path) */\n      mload(0x40)\n      shl(0xe0, 0xd06ca61f)\n      dup2\n      mstore\n        /* \"contracts/tokens/BTSPair.sol\":11207:11258  uint256 share = (_amountLP * tokenBalance) / supply */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":11289:11318  factoryInstance.getAmountsOut */\n      dup10\n      and\n      swap1\n      0xd06ca61f\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":11289:11331  factoryInstance.getAmountsOut(share, path) */\n      tag_324\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":11207:11258  uint256 share = (_amountLP * tokenBalance) / supply */\n      dup5\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":11326:11330  path */\n      dup7\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":11289:11331  factoryInstance.getAmountsOut(share, path) */\n      0x04\n      add\n      tag_325\n      jump\t// in\n    tag_324:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_327\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_327:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_328\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_328:\n        /* \"contracts/tokens/BTSPair.sol\":11276:11331  amountETH += factoryInstance.getAmountsOut(share, path) */\n      tag_329\n      swap1\n      dup12\n      tag_180\n      jump\t// in\n    tag_329:\n      swap10\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":11086:11346  {... */\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":11064:11346  if (tokenBalance > 0) {... */\n    tag_314:\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":11387:11390  ++i */\n      0x01\n      add\n        /* \"contracts/tokens/BTSPair.sol\":10876:11415  for (uint256 i = 0; i < reservesLength; ) {... */\n      jump(tag_305)\n    tag_306:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":10597:11421  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":10470:11421  function calculateShareETH(uint256 _amountLP)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3095  $._symbol */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3079:3095  return $._symbol */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3001:3014  string memory */\n      0x60\n      swap2\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3079:3095  return $._symbol */\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":12647:13315  function getTokenAndUserBal(address _user)... */\n    tag_117:\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      sload(0x02)\n        /* \"contracts/tokens/BTSPair.sol\":12757:12773  uint256[] memory */\n      0x60\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":12787:12794  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      0xff\n      and\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n      iszero\n      tag_338\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":1951:1966  ReentrantCall() */\n      mload(0x40)\n      shl(0xe3, 0x06fda65d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n    tag_338:\n        /* \"contracts/tokens/BTSPair.sol\":12871:12877  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":12871:12884  tokens.length */\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":12848:12868  uint256 tokensLength */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":12871:12884  tokens.length */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":12927:12954  new uint256[](tokensLength) */\n      dup2\n      gt\n      iszero\n      tag_341\n      jumpi\n      tag_341\n      tag_223\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_342\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_342:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":12898:12954  uint256[] memory _tokenBal = new uint256[](tokensLength) */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":12986:12995  uint256 i */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":12981:13153  for (uint256 i = 0; i < tokensLength; ) {... */\n    tag_343:\n        /* \"contracts/tokens/BTSPair.sol\":13005:13017  tokensLength */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":13001:13002  i */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":13001:13017  i < tokensLength */\n      lt\n        /* \"contracts/tokens/BTSPair.sol\":12981:13153  for (uint256 i = 0; i < tokensLength; ) {... */\n      iszero\n      tag_344\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":13054:13062  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":13063:13064  i */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":13054:13065  reserves[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_347\n      jumpi\n      tag_347\n      tag_251\n      jump\t// in\n    tag_347:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":13039:13048  _tokenBal */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":13049:13050  i */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":13039:13051  _tokenBal[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_350\n      jumpi\n      tag_350\n      tag_251\n      jump\t// in\n    tag_350:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/tokens/BTSPair.sol\":13039:13065  _tokenBal[i] = reserves[i] */\n      mstore\n        /* \"contracts/tokens/BTSPair.sol\":13116:13119  ++i */\n      0x01\n      add\n        /* \"contracts/tokens/BTSPair.sol\":12981:13153  for (uint256 i = 0; i < tokensLength; ) {... */\n      jump(tag_343)\n    tag_344:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":13179:13194  uint256 _supply */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":13197:13210  totalSupply() */\n      tag_351\n      mload(0x00)\n      codecopy(0x00, data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4022  $._totalSupply */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":13197:13210  totalSupply() */\n    tag_351:\n        /* \"contracts/tokens/BTSPair.sol\":13179:13210  uint256 _supply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":13224:13239  uint256 _userLP */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":13242:13258  balanceOf(_user) */\n      tag_352\n        /* \"contracts/tokens/BTSPair.sol\":13252:13257  _user */\n      dup9\n        /* \"contracts/tokens/BTSPair.sol\":13242:13251  balanceOf */\n      tag_92\n        /* \"contracts/tokens/BTSPair.sol\":13242:13258  balanceOf(_user) */\n      jump\t// in\n    tag_352:\n        /* \"contracts/tokens/BTSPair.sol\":13280:13289  _tokenBal */\n      swap3\n      swap9\n        /* \"contracts/tokens/BTSPair.sol\":13291:13298  _supply */\n      swap2\n      swap8\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":13280:13289  _tokenBal */\n      swap2\n      swap6\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":12647:13315  function getTokenAndUserBal(address _user)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":4988:5485  function transferTokensToOwner() external onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_354:\n        /* \"contracts/tokens/BTSPair.sol\":5050:5070  address ownerAddress */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":5073:5080  owner() */\n      tag_356\n        /* \"contracts/tokens/BTSPair.sol\":5073:5078  owner */\n      tag_102\n        /* \"contracts/tokens/BTSPair.sol\":5073:5080  owner() */\n      jump\t// in\n    tag_356:\n        /* \"contracts/tokens/BTSPair.sol\":5113:5119  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":5113:5126  tokens.length */\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":5050:5080  address ownerAddress = owner() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":5090:5110  uint256 tokensLength */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":5136:5479  for (uint256 i = 0; i < tokensLength; ) {... */\n    tag_357:\n        /* \"contracts/tokens/BTSPair.sol\":5160:5172  tokensLength */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":5156:5157  i */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":5156:5172  i < tokensLength */\n      lt\n        /* \"contracts/tokens/BTSPair.sol\":5136:5479  for (uint256 i = 0; i < tokensLength; ) {... */\n      iszero\n      tag_358\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":5190:5203  address token */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":5206:5212  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":5213:5214  i */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":5206:5215  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_361\n      jumpi\n      tag_361\n      tag_251\n      jump\t// in\n    tag_361:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":5274:5282  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":5274:5285  reserves[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":5206:5215  tokens[i] */\n      swap1\n      swap3\n      and\n      swap4\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":5274:5282  reserves */\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":5283:5284  i */\n      dup5\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":5274:5285  reserves[i] */\n      dup2\n      lt\n      tag_364\n      jumpi\n      tag_364\n      tag_251\n      jump\t// in\n    tag_364:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":5256:5285  uint256 balance = reserves[i] */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":5315:5316  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":5305:5312  balance */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":5305:5316  balance > 0 */\n      gt\n        /* \"contracts/tokens/BTSPair.sol\":5301:5437  if (balance > 0) {... */\n      iszero\n      tag_367\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":5336:5396  IERC20Upgradeable(token).safeTransfer(ownerAddress, balance) */\n      tag_367\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":5336:5373  IERC20Upgradeable(token).safeTransfer */\n      dup4\n      and\n        /* \"contracts/tokens/BTSPair.sol\":5374:5386  ownerAddress */\n      dup7\n        /* \"contracts/tokens/BTSPair.sol\":5388:5395  balance */\n      dup4\n        /* \"contracts/tokens/BTSPair.sol\":5336:5373  IERC20Upgradeable(token).safeTransfer */\n      tag_281\n        /* \"contracts/tokens/BTSPair.sol\":5336:5396  IERC20Upgradeable(token).safeTransfer(ownerAddress, balance) */\n      jump\t// in\n    tag_367:\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":5463:5466  ++i */\n      0x01\n      add\n        /* \"contracts/tokens/BTSPair.sol\":5136:5479  for (uint256 i = 0; i < tokensLength; ) {... */\n      jump(tag_357)\n    tag_358:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":5040:5485  {... */\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":4988:5485  function transferTokensToOwner() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4453:4631  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4522:4526  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4603  _transfer(owner, to, value) */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4593:4595  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4597:4602  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4585  _transfer */\n      tag_193\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4576:4603  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":9131:9529  function distMgmtFee() public {... */\n    tag_127:\n        /* \"contracts/tokens/BTSPair.sol\":9172:9186  uint256 months */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":9188:9202  uint256 supply */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":9204:9221  uint256 feeAmount */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":9225:9233  calFee() */\n      tag_372\n        /* \"contracts/tokens/BTSPair.sol\":9225:9231  calFee */\n      tag_80\n        /* \"contracts/tokens/BTSPair.sol\":9225:9233  calFee() */\n      jump\t// in\n    tag_372:\n        /* \"contracts/tokens/BTSPair.sol\":9171:9233  (uint256 months, uint256 supply, uint256 feeAmount) = calFee() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":9246:9252  months */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":9256:9257  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":9246:9257  months == 0 */\n      sub\n        /* \"contracts/tokens/BTSPair.sol\":9243:9266  if(months == 0) return; */\n      tag_373\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":9259:9266  return; */\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":9131:9529  function distMgmtFee() public {... */\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":9243:9266  if(months == 0) return; */\n    tag_373:\n        /* \"contracts/tokens/BTSPair.sol\":9326:9339  feeAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/tokens/BTSPair.sol\":9322:9366  if (feeAmount > 0) _mint(owner(), feeAmount) */\n      tag_375\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":9341:9366  _mint(owner(), feeAmount) */\n      tag_375\n        /* \"contracts/tokens/BTSPair.sol\":9347:9354  owner() */\n      tag_376\n        /* \"contracts/tokens/BTSPair.sol\":9347:9352  owner */\n      tag_102\n        /* \"contracts/tokens/BTSPair.sol\":9347:9354  owner() */\n      jump\t// in\n    tag_376:\n        /* \"contracts/tokens/BTSPair.sol\":9356:9365  feeAmount */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":9341:9346  _mint */\n      tag_377\n        /* \"contracts/tokens/BTSPair.sol\":9341:9366  _mint(owner(), feeAmount) */\n      jump\t// in\n    tag_375:\n        /* \"contracts/tokens/BTSPair.sol\":9429:9445  months * 30 days */\n      tag_378\n        /* \"contracts/tokens/BTSPair.sol\":9429:9435  months */\n      dup4\n        /* \"contracts/tokens/BTSPair.sol\":9438:9445  30 days */\n      0x278d00\n        /* \"contracts/tokens/BTSPair.sol\":9429:9445  months * 30 days */\n      tag_322\n      jump\t// in\n    tag_378:\n        /* \"contracts/tokens/BTSPair.sol\":9412:9425  lastAccruedAt */\n      0x01\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":9412:9445  lastAccruedAt += months * 30 days */\n      dup3\n      dup3\n      sload\n      tag_379\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_379:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":9472:9479  owner() */\n      tag_380\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":9472:9477  owner */\n      tag_102\n        /* \"contracts/tokens/BTSPair.sol\":9472:9479  owner() */\n      jump\t// in\n    tag_380:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":9461:9522  feeAccrued(owner(), months, supply, feeAmount, lastAccruedAt) */\n      and\n      0x06ef86d1d001d3f4d5d79d6a6647502b17af442209a78bbbafb8867cb5cf6fb7\n        /* \"contracts/tokens/BTSPair.sol\":9481:9487  months */\n      dup5\n        /* \"contracts/tokens/BTSPair.sol\":9489:9495  supply */\n      dup5\n        /* \"contracts/tokens/BTSPair.sol\":9497:9506  feeAmount */\n      dup5\n        /* \"contracts/tokens/BTSPair.sol\":9508:9521  lastAccruedAt */\n      sload(0x01)\n        /* \"contracts/tokens/BTSPair.sol\":9461:9522  feeAccrued(owner(), months, supply, feeAmount, lastAccruedAt) */\n      mload(0x40)\n      tag_381\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":13654:13679   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":13710:13712   */\n      0x20\n        /* \"#utility.yul\":13695:13713   */\n      dup5\n      add\n        /* \"#utility.yul\":13688:13722   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":13753:13755   */\n      0x40\n        /* \"#utility.yul\":13738:13756   */\n      dup4\n      add\n        /* \"#utility.yul\":13731:13765   */\n      mstore\n        /* \"#utility.yul\":13796:13798   */\n      0x60\n        /* \"#utility.yul\":13781:13799   */\n      dup3\n      add\n        /* \"#utility.yul\":13774:13808   */\n      mstore\n        /* \"#utility.yul\":13641:13644   */\n      0x80\n        /* \"#utility.yul\":13626:13645   */\n      add\n      swap1\n        /* \"#utility.yul\":13423:13814   */\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":9461:9522  feeAccrued(owner(), months, supply, feeAmount, lastAccruedAt) */\n    tag_381:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/tokens/BTSPair.sol\":9161:9529  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":9131:9529  function distMgmtFee() public {... */\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":8662:8776  function setReentrancyGuardStatus(bool _state) external onlyOwner {... */\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_384\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_384:\n        /* \"contracts/tokens/BTSPair.sol\":8738:8760  reentrancyGuardEntered */\n      0x02\n        /* \"contracts/tokens/BTSPair.sol\":8738:8769  reentrancyGuardEntered = _state */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/BTSPair.sol\":8662:8776  function setReentrancyGuardStatus(bool _state) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":11721:12283  function calculateShareTokens(uint256 _amountLP)... */\n    tag_140:\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      sload(0x02)\n        /* \"contracts/tokens/BTSPair.sol\":11828:11857  uint256[] memory amountTokens */\n      0x60\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      0xff\n      and\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n      iszero\n      tag_387\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":1951:1966  ReentrantCall() */\n      mload(0x40)\n      shl(0xe3, 0x06fda65d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n    tag_387:\n        /* \"contracts/tokens/BTSPair.sol\":11873:11887  uint256 supply */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":11890:11903  totalSupply() */\n      tag_389\n      mload(0x00)\n      codecopy(0x00, data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4022  $._totalSupply */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":11890:11903  totalSupply() */\n    tag_389:\n        /* \"contracts/tokens/BTSPair.sol\":11967:11973  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":11967:11980  tokens.length */\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":11873:11903  uint256 supply = totalSupply() */\n      swap1\n      swap2\n      pop\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":11953:11981  new uint256[](tokens.length) */\n      dup2\n      gt\n      iszero\n      tag_391\n      jumpi\n      tag_391\n      tag_223\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_392\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_392:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":11938:11981  amountTokens = new uint256[](tokens.length) */\n      swap2\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":11995:12001  supply */\n      dup1\n        /* \"contracts/tokens/BTSPair.sol\":12005:12006  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":11995:12006  supply == 0 */\n      sub\n        /* \"contracts/tokens/BTSPair.sol\":11991:12027  if (supply == 0) return amountTokens */\n      tag_393\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":12008:12027  return amountTokens */\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":14092:14260  function getTokenAddress(uint256 _index)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":11991:12027  if (supply == 0) return amountTokens */\n    tag_393:\n        /* \"contracts/tokens/BTSPair.sol\":12051:12060  uint256 i */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":12046:12277  for (uint256 i = 0; i < reserves.length; ) {... */\n    tag_394:\n        /* \"contracts/tokens/BTSPair.sol\":12070:12078  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":12070:12085  reserves.length */\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":12066:12085  i < reserves.length */\n      dup2\n      lt\n        /* \"contracts/tokens/BTSPair.sol\":12046:12277  for (uint256 i = 0; i < reserves.length; ) {... */\n      iszero\n      tag_395\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":12103:12118  uint256 balance */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":12121:12129  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":12130:12131  i */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":12121:12132  reserves[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_398\n      jumpi\n      tag_398\n      tag_251\n      jump\t// in\n    tag_398:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":12103:12132  uint256 balance = reserves[i] */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":12188:12194  supply */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":12177:12184  balance */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":12165:12174  _amountLP */\n      dup7\n        /* \"contracts/tokens/BTSPair.sol\":12165:12184  _amountLP * balance */\n      tag_400\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_400:\n        /* \"contracts/tokens/BTSPair.sol\":12164:12194  (_amountLP * balance) / supply */\n      tag_401\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_401:\n        /* \"contracts/tokens/BTSPair.sol\":12146:12158  amountTokens */\n      dup5\n        /* \"contracts/tokens/BTSPair.sol\":12159:12160  i */\n      dup4\n        /* \"contracts/tokens/BTSPair.sol\":12146:12161  amountTokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_403\n      jumpi\n      tag_403\n      tag_251\n      jump\t// in\n    tag_403:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/tokens/BTSPair.sol\":12146:12194  amountTokens[i] = (_amountLP * balance) / supply */\n      mstore\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":12249:12252  ++i */\n      0x01\n      add\n        /* \"contracts/tokens/BTSPair.sol\":12046:12277  for (uint256 i = 0; i < reserves.length; ) {... */\n      jump(tag_394)\n    tag_395:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":11863:12283  {... */\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":11721:12283  function calculateShareTokens(uint256 _amountLP)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4769:4776  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4861  $._allowances */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4868  $._allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4848:4877  $._allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4689:4884  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":5706:5937  function updateTokens(address[] calldata _tokens) external onlyOwner {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_407\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_407:\n        /* \"contracts/tokens/BTSPair.sol\":5807:5808  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":5789:5808  _tokens.length == 0 */\n      dup2\n      swap1\n      sub\n        /* \"contracts/tokens/BTSPair.sol\":5785:5831  if (_tokens.length == 0) revert InvalidToken() */\n      tag_409\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":5817:5831  InvalidToken() */\n      mload(0x40)\n      shl(0xe0, 0xc1ab6dc1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":5785:5831  if (_tokens.length == 0) revert InvalidToken() */\n    tag_409:\n        /* \"contracts/tokens/BTSPair.sol\":5842:5858  tokens = _tokens */\n      tag_410\n        /* \"contracts/tokens/BTSPair.sol\":5842:5848  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":5851:5858  _tokens */\n      dup4\n      dup4\n        /* \"contracts/tokens/BTSPair.sol\":5842:5858  tokens = _tokens */\n      tag_220\n      jump\t// in\n    tag_410:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":5868:5893  _updateRebalanceReserve() */\n      tag_411\n        /* \"contracts/tokens/BTSPair.sol\":5868:5891  _updateRebalanceReserve */\n      tag_412\n        /* \"contracts/tokens/BTSPair.sol\":5868:5893  _updateRebalanceReserve() */\n      jump\t// in\n    tag_411:\n        /* \"contracts/tokens/BTSPair.sol\":5908:5930  TokensUpdated(_tokens) */\n      0x3ca096a4c913a6f222a557151d17832dddab787e6ddf59063cab45e15b9a9fac\n        /* \"contracts/tokens/BTSPair.sol\":5922:5929  _tokens */\n      dup3\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":5908:5930  TokensUpdated(_tokens) */\n      mload(0x40)\n      tag_413\n      swap3\n      swap2\n      swap1\n      tag_414\n      jump\t// in\n    tag_413:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/BTSPair.sol\":5706:5937  function updateTokens(address[] calldata _tokens) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":6236:7270  function mint(address _to, uint256[] calldata amounts)... */\n    tag_154:\n        /* \"contracts/tokens/BTSPair.sol\":6343:6360  uint256 liquidity */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_416:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":6380:6397  _to == address(0) */\n      dup5\n      and\n        /* \"contracts/tokens/BTSPair.sol\":6376:6424  if (_to == address(0)) revert InvalidRecipient() */\n      tag_418\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":6406:6424  InvalidRecipient() */\n      mload(0x40)\n      shl(0xe1, 0x4e469669)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":6376:6424  if (_to == address(0)) revert InvalidRecipient() */\n    tag_418:\n        /* \"contracts/tokens/BTSPair.sol\":6469:6493  IFactory factoryInstance */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":15902:15909  factory */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/tokens/BTSPair.sol\":6469:6506  IFactory factoryInstance = _factory() */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":6516:6535  address wethAddress */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":6538:6553  factoryInstance */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":6538:6558  factoryInstance.weth */\n      and\n      0x3fc8cef3\n        /* \"contracts/tokens/BTSPair.sol\":6538:6560  factoryInstance.weth() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_421\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_421:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_422\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_422:\n        /* \"contracts/tokens/BTSPair.sol\":6516:6560  address wethAddress = factoryInstance.weth() */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":6571:6584  distMgmtFee() */\n      tag_423\n        /* \"contracts/tokens/BTSPair.sol\":6571:6582  distMgmtFee */\n      tag_127\n        /* \"contracts/tokens/BTSPair.sol\":6571:6584  distMgmtFee() */\n      jump\t// in\n    tag_423:\n        /* \"contracts/tokens/BTSPair.sol\":6617:6623  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":6617:6630  tokens.length */\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":6594:6614  uint256 tokensLength */\n      0x00\n      dup1\n        /* \"contracts/tokens/BTSPair.sol\":6667:6988  for (uint256 i = 0; i < tokensLength; ) {... */\n    tag_424:\n        /* \"contracts/tokens/BTSPair.sol\":6691:6703  tokensLength */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":6687:6688  i */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":6687:6703  i < tokensLength */\n      lt\n        /* \"contracts/tokens/BTSPair.sol\":6667:6988  for (uint256 i = 0; i < tokensLength; ) {... */\n      iszero\n      tag_425\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":6721:6734  address token */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":6737:6743  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":6744:6745  i */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":6737:6746  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_428\n      jumpi\n      tag_428\n      tag_251\n      jump\t// in\n    tag_428:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":6811:6854  factoryInstance.getPath(token, wethAddress) */\n      mload(0x40)\n      shl(0xe0, 0xd88e3e3b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":6737:6746  tokens[i] */\n      swap2\n      dup3\n      and\n        /* \"contracts/tokens/BTSPair.sol\":6811:6854  factoryInstance.getPath(token, wethAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11776:11827   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11863:11895   */\n      dup9\n      dup4\n      and\n        /* \"#utility.yul\":11843:11861   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11836:11896   */\n      mstore\n        /* \"contracts/tokens/BTSPair.sol\":6737:6746  tokens[i] */\n      swap4\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":6811:6834  factoryInstance.getPath */\n      swap1\n      dup9\n      and\n      swap1\n      0xd88e3e3b\n      swap1\n        /* \"#utility.yul\":11749:11767   */\n      0x44\n      add\n        /* \"contracts/tokens/BTSPair.sol\":6811:6854  factoryInstance.getPath(token, wethAddress) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_432\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_432:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_433\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_320\n      jump\t// in\n    tag_433:\n        /* \"contracts/tokens/BTSPair.sol\":6787:6854  address[] memory path = factoryInstance.getPath(token, wethAddress) */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":6898:6913  factoryInstance */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":6898:6927  factoryInstance.getAmountsOut */\n      and\n      0xd06ca61f\n        /* \"contracts/tokens/BTSPair.sol\":6928:6935  amounts */\n      dup12\n      dup12\n        /* \"contracts/tokens/BTSPair.sol\":6936:6937  i */\n      dup7\n        /* \"contracts/tokens/BTSPair.sol\":6928:6938  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_435\n      jumpi\n      tag_435\n      tag_251\n      jump\t// in\n    tag_435:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/tokens/BTSPair.sol\":6940:6944  path */\n      dup4\n        /* \"contracts/tokens/BTSPair.sol\":6898:6945  factoryInstance.getAmountsOut(amounts[i], path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_436\n      swap3\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_436:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_438\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_438:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_439\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_439:\n        /* \"contracts/tokens/BTSPair.sol\":6886:6945  totalETH += factoryInstance.getAmountsOut(amounts[i], path) */\n      tag_440\n      swap1\n      dup6\n      tag_180\n      jump\t// in\n    tag_440:\n      swap4\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":6972:6975  ++i */\n      dup3\n      0x01\n      add\n      swap3\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":6707:6988  {... */\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":6667:6988  for (uint256 i = 0; i < tokensLength; ) {... */\n      jump(tag_424)\n    tag_425:\n      pop\n      mload(0x00)\n      codecopy(0x00, data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4022  $._totalSupply */\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":7010:7028  totalSupply() == 0 */\n      iszero\n        /* \"contracts/tokens/BTSPair.sol\":7010:7070  totalSupply() == 0 ? 1000 ether : calculateShareLP(totalETH) */\n      tag_442\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":7044:7070  calculateShareLP(totalETH) */\n      tag_443\n        /* \"contracts/tokens/BTSPair.sol\":7061:7069  totalETH */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":7044:7060  calculateShareLP */\n      tag_158\n        /* \"contracts/tokens/BTSPair.sol\":7044:7070  calculateShareLP(totalETH) */\n      jump\t// in\n    tag_443:\n        /* \"contracts/tokens/BTSPair.sol\":7010:7070  totalSupply() == 0 ? 1000 ether : calculateShareLP(totalETH) */\n      jump(tag_444)\n    tag_442:\n        /* \"contracts/tokens/BTSPair.sol\":7031:7041  1000 ether */\n      0x3635c9adc5dea00000\n        /* \"contracts/tokens/BTSPair.sol\":7010:7070  totalSupply() == 0 ? 1000 ether : calculateShareLP(totalETH) */\n    tag_444:\n        /* \"contracts/tokens/BTSPair.sol\":6998:7070  liquidity = totalSupply() == 0 ? 1000 ether : calculateShareLP(totalETH) */\n      swap5\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":7080:7101  _mint(_to, liquidity) */\n      tag_445\n        /* \"contracts/tokens/BTSPair.sol\":7086:7089  _to */\n      dup9\n        /* \"contracts/tokens/BTSPair.sol\":7091:7100  liquidity */\n      dup7\n        /* \"contracts/tokens/BTSPair.sol\":7080:7085  _mint */\n      tag_377\n        /* \"contracts/tokens/BTSPair.sol\":7080:7101  _mint(_to, liquidity) */\n      jump\t// in\n    tag_445:\n        /* \"contracts/tokens/BTSPair.sol\":7117:7126  uint256 i */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":7112:7264  for (uint256 i = 0; i < amounts.length; ) {... */\n    tag_446:\n        /* \"contracts/tokens/BTSPair.sol\":7132:7150  i < amounts.length */\n      dup7\n      dup2\n      lt\n        /* \"contracts/tokens/BTSPair.sol\":7112:7264  for (uint256 i = 0; i < amounts.length; ) {... */\n      iszero\n      tag_447\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":7183:7190  amounts */\n      dup8\n      dup8\n        /* \"contracts/tokens/BTSPair.sol\":7191:7192  i */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":7183:7193  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_450\n      jumpi\n      tag_450\n      tag_251\n      jump\t// in\n    tag_450:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/tokens/BTSPair.sol\":7168:7176  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":7177:7178  i */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":7168:7179  reserves[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_452\n      jumpi\n      tag_452\n      tag_251\n      jump\t// in\n    tag_452:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":7168:7193  reserves[i] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_454\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_454:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":7236:7239  ++i */\n      0x01\n      add\n        /* \"contracts/tokens/BTSPair.sol\":7112:7264  for (uint256 i = 0; i < amounts.length; ) {... */\n      jump(tag_446)\n    tag_447:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":6366:7270  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":6236:7270  function mint(address _to, uint256[] calldata amounts)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":9926:10224  function calculateShareLP(uint256 _amountETH)... */\n    tag_158:\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      sload(0x02)\n        /* \"contracts/tokens/BTSPair.sol\":10030:10046  uint256 amountLP */\n      0x00\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      0xff\n      and\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n      iszero\n      tag_456\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":1951:1966  ReentrantCall() */\n      mload(0x40)\n      shl(0xe3, 0x06fda65d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n    tag_456:\n        /* \"contracts/tokens/BTSPair.sol\":10062:10081  uint256 reservedETH */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":10084:10103  _totalReservedETH() */\n      tag_458\n        /* \"contracts/tokens/BTSPair.sol\":10084:10101  _totalReservedETH */\n      tag_459\n        /* \"contracts/tokens/BTSPair.sol\":10084:10103  _totalReservedETH() */\n      jump\t// in\n    tag_458:\n        /* \"contracts/tokens/BTSPair.sol\":10062:10103  uint256 reservedETH = _totalReservedETH() */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":10117:10128  reservedETH */\n      dup1\n        /* \"contracts/tokens/BTSPair.sol\":10132:10133  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":10117:10133  reservedETH == 0 */\n      sub\n        /* \"contracts/tokens/BTSPair.sol\":10113:10152  if (reservedETH == 0) return 1000 ether */\n      tag_460\n      jumpi\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":10142:10152  1000 ether */\n      0x3635c9adc5dea00000\n      swap3\n        /* \"contracts/tokens/BTSPair.sol\":14092:14260  function getTokenAddress(uint256 _index)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":10113:10152  if (reservedETH == 0) return 1000 ether */\n    tag_460:\n        /* \"contracts/tokens/BTSPair.sol\":10205:10216  reservedETH */\n      dup1\n        /* \"contracts/tokens/BTSPair.sol\":10188:10201  totalSupply() */\n      tag_461\n      mload(0x00)\n      codecopy(0x00, data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4008:4022  $._totalSupply */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3877:4029  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":10188:10201  totalSupply() */\n    tag_461:\n        /* \"contracts/tokens/BTSPair.sol\":10175:10201  _amountETH * totalSupply() */\n      tag_462\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":10175:10185  _amountETH */\n      dup6\n        /* \"contracts/tokens/BTSPair.sol\":10175:10201  _amountETH * totalSupply() */\n      tag_322\n      jump\t// in\n    tag_462:\n        /* \"contracts/tokens/BTSPair.sol\":10174:10216  (_amountETH * totalSupply()) / reservedETH */\n      tag_463\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_463:\n        /* \"contracts/tokens/BTSPair.sol\":10162:10217  amountLP = ((_amountETH * totalSupply()) / reservedETH) */\n      swap4\n        /* \"contracts/tokens/BTSPair.sol\":9926:10224  function calculateShareLP(uint256 _amountETH)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/BTSPair.sol\":14999:15127  function getTokensReserve() public view nonReentrantReadOnly... */\n    tag_161:\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      sload(0x02)\n        /* \"contracts/tokens/BTSPair.sol\":15077:15093  uint256[] memory */\n      0x60\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":1920:1942  reentrancyGuardEntered */\n      0xff\n      and\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n      iszero\n      tag_465\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":1951:1966  ReentrantCall() */\n      mload(0x40)\n      shl(0xe3, 0x06fda65d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/BTSPair.sol\":1917:1966  if(reentrancyGuardEntered) revert ReentrantCall() */\n    tag_465:\n        /* \"contracts/tokens/BTSPair.sol\":15112:15120  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":15105:15120  return reserves */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_468:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_468\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":14999:15127  function getTokensReserve() public view nonReentrantReadOnly... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_470\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_470:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_472\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5460:5511   */\n      mstore\n        /* \"#utility.yul\":5433:5451   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_211\n        /* \"#utility.yul\":5314:5517   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_472:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_474\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_260\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_474:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9982:10110  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10103  _approve(owner, spender, value, true) */\n      tag_358\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10075:10080  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10082:10089  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10091:10096  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10098:10102  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10074  _approve */\n      tag_479\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10103  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11726:12202  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11825:11849  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11877  allowance(owner, spender) */\n      tag_481\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11862:11867  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11869:11876  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11861  allowance */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11852:11877  allowance(owner, spender) */\n      jump\t// in\n    tag_481:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11825:11877  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11891:11907  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11891:11927  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11887:12196  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_486\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11966:11971  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11947:11963  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11947:11971  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11943:12073  if (currentAllowance < value) {... */\n      iszero\n      tag_483\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11998:12058  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14728:14760   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11998:12058  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14710:14761   */\n      mstore\n        /* \"#utility.yul\":14777:14795   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14770:14804   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":14820:14838   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14813:14847   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14683:14701   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11998:12058  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_211\n        /* \"#utility.yul\":14508:14853   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11943:12073  if (currentAllowance < value) {... */\n    tag_483:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12171  _approve(owner, spender, currentAllowance - value, false) */\n      tag_486\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12123:12128  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12130:12137  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12163  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12139:12155  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12139:12163  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12165:12170  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12122  _approve */\n      tag_479\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12114:12171  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_486:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11815:12202  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11726:12202  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6586:6886  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6669:6687  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6665:6751  if (from == address(0)) {... */\n      tag_488\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6710:6740  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6737:6738  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6710:6740  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5460:5511   */\n      mstore\n        /* \"#utility.yul\":5433:5451   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6710:6740  ERC20InvalidSender(address(0)) */\n      tag_211\n        /* \"#utility.yul\":5314:5517   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6665:6751  if (from == address(0)) {... */\n    tag_488:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6764:6780  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6760:6846  if (to == address(0)) {... */\n      tag_490\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6803:6835  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6832:6833  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6803:6835  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5460:5511   */\n      mstore\n        /* \"#utility.yul\":5433:5451   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6803:6835  ERC20InvalidReceiver(address(0)) */\n      tag_211\n        /* \"#utility.yul\":5314:5517   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6760:6846  if (to == address(0)) {... */\n    tag_490:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6879  _update(from, to, value) */\n      tag_358\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6863:6867  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6869:6871  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6873:6878  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6862  _update */\n      tag_493\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6855:6879  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_498\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_499\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_498:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      tag_501\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2388:2393  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2395:2402  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2387  __ERC20_init_unchained */\n      tag_502\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_501:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_504\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_499\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_504:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_474\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_507\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_511\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_511:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5460:5511   */\n      mstore\n        /* \"#utility.yul\":5433:5451   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_211\n        /* \"#utility.yul\":5314:5517   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9240:9446  function _burn(address account, uint256 value) internal {... */\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9310:9331  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9306:9395  if (account == address(0)) {... */\n      tag_518\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9354:9384  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9381:9382  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9354:9384  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5460:5511   */\n      mstore\n        /* \"#utility.yul\":5433:5451   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9354:9384  ERC20InvalidSender(address(0)) */\n      tag_211\n        /* \"#utility.yul\":5314:5517   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9306:9395  if (account == address(0)) {... */\n    tag_518:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9404:9439  _update(account, address(0), value) */\n      tag_501\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9412:9419  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9429:9430  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9433:9438  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9404:9411  _update */\n      tag_493\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9404:9439  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":996:1182  function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {... */\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1116:1174  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15050:15082   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1116:1174  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15032:15083   */\n      mstore\n        /* \"#utility.yul\":15099:15117   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":15092:15126   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1116:1174  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":15005:15023   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1116:1174  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1089:1175  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_358\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1109:1114  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1089:1108  _callOptionalReturn */\n      tag_525\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1089:1175  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8714:8922  function _mint(address account, uint256 value) internal {... */\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8784:8805  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8871  if (account == address(0)) {... */\n      tag_528\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8828:8860  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8857:8858  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8828:8860  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5460:5511   */\n      mstore\n        /* \"#utility.yul\":5433:5451   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8828:8860  ERC20InvalidReceiver(address(0)) */\n      tag_211\n        /* \"#utility.yul\":5314:5517   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8871  if (account == address(0)) {... */\n    tag_528:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8915  _update(address(0), account, value) */\n      tag_501\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8896:8897  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8900:8907  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8909:8914  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8887  _update */\n      tag_493\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8880:8915  _update(address(0), account, value) */\n      jump\t// in\n        /* \"contracts/tokens/BTSPair.sol\":16059:16501  function _updateRebalanceReserve() private {... */\n    tag_412:\n        /* \"contracts/tokens/BTSPair.sol\":16136:16142  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":16136:16149  tokens.length */\n      sload\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":16170:16197  new uint256[](tokensLength) */\n      dup2\n      gt\n      iszero\n      tag_533\n      jumpi\n      tag_533\n      tag_223\n      jump\t// in\n    tag_533:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_534\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_534:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":16159:16197  reserves = new uint256[](tokensLength) */\n      dup1\n      mload\n      tag_535\n      swap2\n        /* \"contracts/tokens/BTSPair.sol\":16159:16167  reserves */\n      0x04\n      swap2\n        /* \"contracts/tokens/BTSPair.sol\":16159:16197  reserves = new uint256[](tokensLength) */\n      0x20\n      swap1\n      swap2\n      add\n      swap1\n      tag_226\n      jump\t// in\n    tag_535:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":16213:16222  uint256 i */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":16208:16495  for (uint256 i = 0; i < tokensLength; ) {... */\n    tag_536:\n        /* \"contracts/tokens/BTSPair.sol\":16232:16244  tokensLength */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":16228:16229  i */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":16228:16244  i < tokensLength */\n      lt\n        /* \"contracts/tokens/BTSPair.sol\":16208:16495  for (uint256 i = 0; i < tokensLength; ) {... */\n      iszero\n      tag_501\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":16262:16275  address token */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":16278:16284  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":16285:16286  i */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":16278:16287  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_540\n      jumpi\n      tag_540\n      tag_251\n      jump\t// in\n    tag_540:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":16342:16391  IERC20Upgradeable(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/tokens/BTSPair.sol\":16385:16389  this */\n      address\n        /* \"contracts/tokens/BTSPair.sol\":16342:16391  IERC20Upgradeable(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5460:5511   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":16278:16287  tokens[i] */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":16342:16376  IERC20Upgradeable(token).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":5433:5451   */\n      0x24\n      add\n        /* \"contracts/tokens/BTSPair.sol\":16342:16391  IERC20Upgradeable(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_544\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_544:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_545\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_545:\n        /* \"contracts/tokens/BTSPair.sol\":16328:16336  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":16337:16338  i */\n      dup4\n        /* \"contracts/tokens/BTSPair.sol\":16328:16339  reserves[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_547\n      jumpi\n      tag_547\n      tag_251\n      jump\t// in\n    tag_547:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/tokens/BTSPair.sol\":16328:16391  reserves[i] = IERC20Upgradeable(token).balanceOf(address(this)) */\n      sstore\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":16467:16470  ++i */\n      0x01\n      add\n        /* \"contracts/tokens/BTSPair.sol\":16208:16495  for (uint256 i = 0; i < tokensLength; ) {... */\n      jump(tag_536)\n        /* \"contracts/tokens/BTSPair.sol\":16691:17388  function _totalReservedETH() private view returns (uint256 totalReservedETH) {... */\n    tag_459:\n        /* \"contracts/tokens/BTSPair.sol\":16742:16766  uint256 totalReservedETH */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":16778:16802  IFactory factoryInstance */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":16805:16815  _factory() */\n      tag_550\n        /* \"contracts/tokens/BTSPair.sol\":15866:15874  IFactory */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":15902:15909  factory */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":15824:15917  function _factory() private view returns (IFactory) {... */\n      jump\n        /* \"contracts/tokens/BTSPair.sol\":16805:16815  _factory() */\n    tag_550:\n        /* \"contracts/tokens/BTSPair.sol\":16778:16815  IFactory factoryInstance = _factory() */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":16825:16837  address weth */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":16840:16855  factoryInstance */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":16840:16860  factoryInstance.weth */\n      and\n      0x3fc8cef3\n        /* \"contracts/tokens/BTSPair.sol\":16840:16862  factoryInstance.weth() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_552\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_552:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_553\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_553:\n        /* \"contracts/tokens/BTSPair.sol\":16915:16923  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":16915:16930  reserves.length */\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":16825:16862  address weth = factoryInstance.weth() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":16898:16912  uint256 length */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":16941:17382  for (uint256 i = 0; i < length; ) {... */\n    tag_554:\n        /* \"contracts/tokens/BTSPair.sol\":16965:16971  length */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":16961:16962  i */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":16961:16971  i < length */\n      lt\n        /* \"contracts/tokens/BTSPair.sol\":16941:17382  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_555\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":16989:17004  uint256 reserve */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":17007:17015  reserves */\n      0x04\n        /* \"contracts/tokens/BTSPair.sol\":17016:17017  i */\n      dup3\n        /* \"contracts/tokens/BTSPair.sol\":17007:17018  reserves[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_558\n      jumpi\n      tag_558\n      tag_251\n      jump\t// in\n    tag_558:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":16989:17018  uint256 reserve = reserves[i] */\n      swap1\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":17046:17047  0 */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":17036:17043  reserve */\n      dup2\n        /* \"contracts/tokens/BTSPair.sol\":17036:17047  reserve > 0 */\n      gt\n        /* \"contracts/tokens/BTSPair.sol\":17032:17312  if (reserve > 0) {... */\n      iszero\n      tag_560\n      jumpi\n        /* \"contracts/tokens/BTSPair.sol\":17067:17080  address token */\n      0x00\n        /* \"contracts/tokens/BTSPair.sol\":17083:17089  tokens */\n      0x03\n        /* \"contracts/tokens/BTSPair.sol\":17090:17091  i */\n      dup4\n        /* \"contracts/tokens/BTSPair.sol\":17083:17092  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_562\n      jumpi\n      tag_562\n      tag_251\n      jump\t// in\n    tag_562:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n        /* \"contracts/tokens/BTSPair.sol\":17161:17197  factoryInstance.getPath(token, weth) */\n      mload(0x40)\n      shl(0xe0, 0xd88e3e3b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":17083:17092  tokens[i] */\n      swap2\n      dup3\n      and\n        /* \"contracts/tokens/BTSPair.sol\":17161:17197  factoryInstance.getPath(token, weth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11776:11827   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11863:11895   */\n      dup9\n      dup4\n      and\n        /* \"#utility.yul\":11843:11861   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11836:11896   */\n      mstore\n        /* \"contracts/tokens/BTSPair.sol\":17083:17092  tokens[i] */\n      swap4\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":17161:17184  factoryInstance.getPath */\n      swap1\n      dup9\n      and\n      swap1\n      0xd88e3e3b\n      swap1\n        /* \"#utility.yul\":11749:11767   */\n      0x44\n      add\n        /* \"contracts/tokens/BTSPair.sol\":17161:17197  factoryInstance.getPath(token, weth) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_566\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_566:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_567\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_320\n      jump\t// in\n    tag_567:\n        /* \"contracts/tokens/BTSPair.sol\":17253:17297  factoryInstance.getAmountsOut(reserve, path) */\n      mload(0x40)\n      shl(0xe0, 0xd06ca61f)\n      dup2\n      mstore\n        /* \"contracts/tokens/BTSPair.sol\":17137:17197  address[] memory path = factoryInstance.getPath(token, weth) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/BTSPair.sol\":17253:17282  factoryInstance.getAmountsOut */\n      dup9\n      and\n      swap1\n      0xd06ca61f\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":17253:17297  factoryInstance.getAmountsOut(reserve, path) */\n      tag_568\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":17283:17290  reserve */\n      dup7\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":17137:17197  address[] memory path = factoryInstance.getPath(token, weth) */\n      dup6\n      swap1\n        /* \"contracts/tokens/BTSPair.sol\":17253:17297  factoryInstance.getAmountsOut(reserve, path) */\n      0x04\n      add\n      tag_325\n      jump\t// in\n    tag_568:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_570\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_570:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_571\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_571:\n        /* \"contracts/tokens/BTSPair.sol\":17233:17297  totalReservedETH += factoryInstance.getAmountsOut(reserve, path) */\n      tag_572\n      swap1\n      dup10\n      tag_180\n      jump\t// in\n    tag_572:\n      swap8\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":17049:17312  {... */\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":17032:17312  if (reserve > 0) {... */\n    tag_560:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":17354:17357  ++i */\n      0x01\n      add\n        /* \"contracts/tokens/BTSPair.sol\":16941:17382  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_554)\n    tag_555:\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":16768:17388  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/BTSPair.sol\":16691:17388  function _totalReservedETH() private view returns (uint256 totalReservedETH) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10957:11444  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_479:\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11122:11141  owner == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11118:11207  if (owner == address(0)) {... */\n      tag_575\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11164:11196  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11193:11194  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11164:11196  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5460:5511   */\n      mstore\n        /* \"#utility.yul\":5433:5451   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11164:11196  ERC20InvalidApprover(address(0)) */\n      tag_211\n        /* \"#utility.yul\":5314:5517   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11118:11207  if (owner == address(0)) {... */\n    tag_575:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11220:11241  spender == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11216:11306  if (spender == address(0)) {... */\n      tag_577\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11295  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11292:11293  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11295  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5460:5511   */\n      mstore\n        /* \"#utility.yul\":5433:5451   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11295  ERC20InvalidSpender(address(0)) */\n      tag_211\n        /* \"#utility.yul\":5314:5517   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11216:11306  if (spender == address(0)) {... */\n    tag_577:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11335  $._allowances[owner] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11328  $._allowances */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11335  $._allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11344  $._allowances[owner][spender] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11315:11352  $._allowances[owner][spender] = value */\n      dup4\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11362:11438  if (emitEvent) {... */\n      dup2\n      iszero\n      tag_579\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11412:11419  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11405:11410  owner */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11421:11426  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_580\n      swap2\n        /* \"#utility.yul\":583:608   */\n      dup2\n      mstore\n        /* \"#utility.yul\":571:573   */\n      0x20\n        /* \"#utility.yul\":556:574   */\n      add\n      swap1\n        /* \"#utility.yul\":437:614   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11396:11427  Approval(owner, spender, value) */\n    tag_580:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11362:11438  if (emitEvent) {... */\n    tag_579:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11055:11444  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10957:11444  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7201:8371  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_493:\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7343:7361  from == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n      tag_583\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7497:7502  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7480  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7493  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7479:7502  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_584\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_584:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n      tag_585\n      swap1\n      pop\n      jump\n    tag_583:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7572  $._balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7533:7552  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7555:7572  $._balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7590:7609  fromBalance < value */\n      dup3\n      dup2\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7701  if (fromBalance < value) {... */\n      iszero\n      tag_586\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7636:7686  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14728:14760   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7636:7686  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14710:14761   */\n      mstore\n        /* \"#utility.yul\":14777:14795   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14770:14804   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":14820:14838   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14813:14847   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14683:14701   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7636:7686  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_211\n        /* \"#utility.yul\":14508:14853   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7701  if (fromBalance < value) {... */\n    tag_586:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7838  $._balances[from] */\n      dup6\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7832  $._balances */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7838  $._balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup4\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7841:7860  fromBalance - value */\n      swap1\n      dup4\n      swap1\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:7860  $._balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7339:7885  if (from == address(0)) {... */\n    tag_585:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7899:7915  to == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n      tag_588\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8062:8076  $._totalSupply */\n      0x02\n      dup2\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8062:8085  $._totalSupply -= value */\n      dup1\n      sload\n      dup4\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n      jump(tag_589)\n    tag_588:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8290  $._balances[to] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8286  $._balances */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8290  $._balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8275:8299  $._balances[to] += value */\n      dup1\n      sload\n      dup4\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7895:8324  if (to == address(0)) {... */\n    tag_589:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8354:8356  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8348:8352  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8363  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n      mload(0x40)\n      tag_590\n      swap2\n        /* \"#utility.yul\":583:608   */\n      dup2\n      mstore\n        /* \"#utility.yul\":571:573   */\n      0x20\n        /* \"#utility.yul\":556:574   */\n      add\n      swap1\n        /* \"#utility.yul\":437:614   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8339:8364  Transfer(from, to, value) */\n    tag_590:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7276:8371  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7201:8371  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_499:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_593\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_594\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_593:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_502:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_597\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_499\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_597:\n      mload(0x00)\n      codecopy(0x00, data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2588  $._name */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2596  $._name = name_ */\n      tag_600\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2591:2596  name_ */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2588  $._name */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2596  $._name = name_ */\n      tag_601\n      jump\t// in\n    tag_600:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2615  $._symbol */\n      0x04\n      dup2\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2625  $._symbol = symbol_ */\n      tag_486\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2618:2625  symbol_ */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2615  $._symbol */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2625  $._symbol = symbol_ */\n      tag_601\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_507:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_470\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_499\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5328:5981  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n    tag_525:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5758:5781  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5784:5853  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_610\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5812:5816  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5784:5853  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5792:5797  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5784:5811  address(token).functionCall */\n      and\n      tag_611\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5784:5853  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_610:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5758:5853  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5871:5881  returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5871:5888  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5892:5893  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5871:5893  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5871:5927  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_613\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5908:5918  returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5897:5927  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_613\n      swap2\n      swap1\n      tag_614\n      jump\t// in\n    tag_613:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5863:5974  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17713:17715   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5863:5974  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17695:17716   */\n      mstore\n        /* \"#utility.yul\":17752:17754   */\n      0x2a\n        /* \"#utility.yul\":17732:17750   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17725:17755   */\n      mstore\n        /* \"#utility.yul\":17791:17825   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":17771:17789   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17764:17826   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":17842:17860   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17835:17875   */\n      mstore\n        /* \"#utility.yul\":17892:17911   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":5863:5974  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_211\n        /* \"#utility.yul\":17511:17917   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_594:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_619\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_619:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4119:4342  function functionCall(... */\n    tag_611:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4252:4264  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4283:4335  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_621\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4305:4311  target */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4313:4317  data */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4319:4320  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4322:4334  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4283:4304  functionCallWithValue */\n      tag_622\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4283:4335  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_621:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4276:4335  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4119:4342  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5176:5622  function functionCallWithValue(... */\n    tag_622:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5341:5353  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5398:5403  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5373:5394  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5373:5403  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5365:5446  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_624\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18124:18126   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5365:5446  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18106:18127   */\n      mstore\n        /* \"#utility.yul\":18163:18165   */\n      0x26\n        /* \"#utility.yul\":18143:18161   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18136:18166   */\n      mstore\n        /* \"#utility.yul\":18202:18236   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":18182:18200   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18175:18237   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":18253:18271   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18246:18282   */\n      mstore\n        /* \"#utility.yul\":18299:18318   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5365:5446  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_211\n        /* \"#utility.yul\":17922:18324   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5365:5446  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_624:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5457:5469  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5471:5494  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5498:5504  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5498:5509  target.call */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5517:5522  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5524:5528  data */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5498:5529  target.call{value: value}(data) */\n      mload(0x40)\n      tag_627\n      swap2\n      swap1\n      tag_628\n      jump\t// in\n    tag_627:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_631\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_630)\n    tag_631:\n      0x60\n      swap2\n      pop\n    tag_630:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5456:5529  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5546:5615  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_632\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5573:5579  target */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5581:5588  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5590:5600  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5602:5614  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5546:5572  verifyCallResultFromTarget */\n      tag_633\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5546:5615  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_632:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5539:5615  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5176:5622  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n    tag_633:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7862:7874  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7890:7897  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n      iszero\n      tag_635\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7927  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7934  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7938:7939  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7939  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7913:8199  if (returndata.length == 0) {... */\n      tag_639\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_639\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18726:18728   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18708:18729   */\n      mstore\n        /* \"#utility.yul\":18765:18767   */\n      0x1d\n        /* \"#utility.yul\":18745:18763   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18738:18768   */\n      mstore\n        /* \"#utility.yul\":18804:18835   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":18784:18802   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18777:18836   */\n      mstore\n        /* \"#utility.yul\":18853:18871   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_211\n        /* \"#utility.yul\":18524:18877   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n    tag_639:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8219:8229  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8212:8229  return returndata */\n      jump(tag_621)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n    tag_635:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      tag_621\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8268:8278  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8280:8292  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9008  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9012  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n      tag_647\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9219:9229  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9213:9230  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9275:9290  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9262:9272  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9258:9260  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9254:9273  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9247:9291  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n    tag_647:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9342:9354  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9335:9355  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_220:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_652\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_651:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_652\n      jumpi\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      calldataload\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_651)\n    tag_652:\n      pop\n      tag_653\n      swap3\n      swap2\n      pop\n      tag_654\n      jump\t// in\n    tag_653:\n      pop\n      swap1\n      jump\t// out\n    tag_226:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_652\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_656:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_652\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_656)\n    tag_654:\n    tag_659:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_653\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_659)\n        /* \"#utility.yul\":14:432   */\n    tag_45:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":619:750   */\n    tag_661:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":694:725   */\n      dup2\n      and\n        /* \"#utility.yul\":684:726   */\n      dup2\n      eq\n        /* \"#utility.yul\":674:744   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":740:741   */\n      0x00\n        /* \"#utility.yul\":737:738   */\n      0x00\n        /* \"#utility.yul\":730:742   */\n      revert\n        /* \"#utility.yul\":755:1122   */\n    tag_52:\n        /* \"#utility.yul\":823:829   */\n      0x00\n        /* \"#utility.yul\":831:837   */\n      0x00\n        /* \"#utility.yul\":884:886   */\n      0x40\n        /* \"#utility.yul\":872:881   */\n      dup4\n        /* \"#utility.yul\":863:870   */\n      dup6\n        /* \"#utility.yul\":859:882   */\n      sub\n        /* \"#utility.yul\":855:887   */\n      slt\n        /* \"#utility.yul\":852:904   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":900:901   */\n      0x00\n        /* \"#utility.yul\":897:898   */\n      0x00\n        /* \"#utility.yul\":890:902   */\n      revert\n        /* \"#utility.yul\":852:904   */\n    tag_678:\n        /* \"#utility.yul\":939:948   */\n      dup3\n        /* \"#utility.yul\":926:949   */\n      calldataload\n        /* \"#utility.yul\":958:989   */\n      tag_679\n        /* \"#utility.yul\":983:988   */\n      dup2\n        /* \"#utility.yul\":958:989   */\n      tag_661\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":1008:1013   */\n      swap5\n        /* \"#utility.yul\":1086:1088   */\n      0x20\n        /* \"#utility.yul\":1071:1089   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1058:1090   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":755:1122   */\n      jump\t// out\n        /* \"#utility.yul\":1319:1827   */\n    tag_61:\n        /* \"#utility.yul\":1396:1402   */\n      0x00\n        /* \"#utility.yul\":1404:1410   */\n      0x00\n        /* \"#utility.yul\":1412:1418   */\n      0x00\n        /* \"#utility.yul\":1465:1467   */\n      0x60\n        /* \"#utility.yul\":1453:1462   */\n      dup5\n        /* \"#utility.yul\":1444:1451   */\n      dup7\n        /* \"#utility.yul\":1440:1463   */\n      sub\n        /* \"#utility.yul\":1436:1468   */\n      slt\n        /* \"#utility.yul\":1433:1485   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":1481:1482   */\n      0x00\n        /* \"#utility.yul\":1478:1479   */\n      0x00\n        /* \"#utility.yul\":1471:1483   */\n      revert\n        /* \"#utility.yul\":1433:1485   */\n    tag_682:\n        /* \"#utility.yul\":1520:1529   */\n      dup4\n        /* \"#utility.yul\":1507:1530   */\n      calldataload\n        /* \"#utility.yul\":1539:1570   */\n      tag_683\n        /* \"#utility.yul\":1564:1569   */\n      dup2\n        /* \"#utility.yul\":1539:1570   */\n      tag_661\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":1589:1594   */\n      swap3\n      pop\n        /* \"#utility.yul\":1646:1648   */\n      0x20\n        /* \"#utility.yul\":1631:1649   */\n      dup5\n      add\n        /* \"#utility.yul\":1618:1650   */\n      calldataload\n        /* \"#utility.yul\":1659:1692   */\n      tag_684\n        /* \"#utility.yul\":1618:1650   */\n      dup2\n        /* \"#utility.yul\":1659:1692   */\n      tag_661\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":1319:1827   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1711:1718   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1791:1793   */\n      0x40\n        /* \"#utility.yul\":1776:1794   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1763:1795   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1319:1827   */\n      jump\t// out\n        /* \"#utility.yul\":1832:2278   */\n    tag_662:\n        /* \"#utility.yul\":1885:1888   */\n      0x00\n        /* \"#utility.yul\":1923:1928   */\n      dup2\n        /* \"#utility.yul\":1917:1929   */\n      mload\n        /* \"#utility.yul\":1950:1956   */\n      dup1\n        /* \"#utility.yul\":1945:1948   */\n      dup5\n        /* \"#utility.yul\":1938:1957   */\n      mstore\n        /* \"#utility.yul\":1982:1986   */\n      0x20\n        /* \"#utility.yul\":1977:1980   */\n      dup5\n        /* \"#utility.yul\":1973:1987   */\n      add\n        /* \"#utility.yul\":1966:1987   */\n      swap4\n      pop\n        /* \"#utility.yul\":2021:2025   */\n      0x20\n        /* \"#utility.yul\":2014:2019   */\n      dup4\n        /* \"#utility.yul\":2010:2026   */\n      add\n        /* \"#utility.yul\":2044:2045   */\n      0x00\n        /* \"#utility.yul\":2054:2253   */\n    tag_686:\n        /* \"#utility.yul\":2068:2074   */\n      dup3\n        /* \"#utility.yul\":2065:2066   */\n      dup2\n        /* \"#utility.yul\":2062:2075   */\n      lt\n        /* \"#utility.yul\":2054:2253   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":2133:2146   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2129:2168   */\n      and\n        /* \"#utility.yul\":2117:2169   */\n      dup7\n      mstore\n        /* \"#utility.yul\":2198:2202   */\n      0x20\n        /* \"#utility.yul\":2189:2203   */\n      swap6\n      dup7\n      add\n      swap6\n        /* \"#utility.yul\":2226:2243   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":2165:2166   */\n      0x01\n        /* \"#utility.yul\":2083:2092   */\n      add\n        /* \"#utility.yul\":2054:2253   */\n      jump(tag_686)\n    tag_688:\n      pop\n        /* \"#utility.yul\":2269:2272   */\n      swap4\n      swap5\n        /* \"#utility.yul\":1832:2278   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2283:2544   */\n    tag_67:\n        /* \"#utility.yul\":2462:2464   */\n      0x20\n        /* \"#utility.yul\":2451:2460   */\n      dup2\n        /* \"#utility.yul\":2444:2465   */\n      mstore\n        /* \"#utility.yul\":2425:2429   */\n      0x00\n        /* \"#utility.yul\":2482:2538   */\n      tag_463\n        /* \"#utility.yul\":2534:2536   */\n      0x20\n        /* \"#utility.yul\":2523:2532   */\n      dup4\n        /* \"#utility.yul\":2519:2537   */\n      add\n        /* \"#utility.yul\":2511:2517   */\n      dup5\n        /* \"#utility.yul\":2482:2538   */\n      tag_662\n      jump\t// in\n        /* \"#utility.yul\":2738:2865   */\n    tag_223:\n        /* \"#utility.yul\":2799:2809   */\n      0x4e487b71\n        /* \"#utility.yul\":2794:2797   */\n      0xe0\n        /* \"#utility.yul\":2790:2810   */\n      shl\n        /* \"#utility.yul\":2787:2788   */\n      0x00\n        /* \"#utility.yul\":2780:2811   */\n      mstore\n        /* \"#utility.yul\":2830:2834   */\n      0x41\n        /* \"#utility.yul\":2827:2828   */\n      0x04\n        /* \"#utility.yul\":2820:2835   */\n      mstore\n        /* \"#utility.yul\":2854:2858   */\n      0x24\n        /* \"#utility.yul\":2851:2852   */\n      0x00\n        /* \"#utility.yul\":2844:2859   */\n      revert\n        /* \"#utility.yul\":2870:3145   */\n    tag_663:\n        /* \"#utility.yul\":2941:2943   */\n      0x40\n        /* \"#utility.yul\":2935:2944   */\n      mload\n        /* \"#utility.yul\":3006:3008   */\n      0x1f\n        /* \"#utility.yul\":2987:3000   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2983:3010   */\n      and\n        /* \"#utility.yul\":2971:3011   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3026:3060   */\n      dup2\n      gt\n        /* \"#utility.yul\":3062:3084   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3023:3085   */\n      or\n        /* \"#utility.yul\":3020:3108   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":3088:3106   */\n      tag_695\n      tag_223\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":3124:3126   */\n      0x40\n        /* \"#utility.yul\":3117:3139   */\n      mstore\n        /* \"#utility.yul\":2870:3145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3517   */\n    tag_664:\n        /* \"#utility.yul\":3213:3221   */\n      0x00\n        /* \"#utility.yul\":3223:3229   */\n      0x00\n        /* \"#utility.yul\":3277:3280   */\n      dup4\n        /* \"#utility.yul\":3270:3274   */\n      0x1f\n        /* \"#utility.yul\":3262:3268   */\n      dup5\n        /* \"#utility.yul\":3258:3275   */\n      add\n        /* \"#utility.yul\":3254:3281   */\n      slt\n        /* \"#utility.yul\":3244:3299   */\n      tag_697\n      jumpi\n        /* \"#utility.yul\":3295:3296   */\n      0x00\n        /* \"#utility.yul\":3292:3293   */\n      0x00\n        /* \"#utility.yul\":3285:3297   */\n      revert\n        /* \"#utility.yul\":3244:3299   */\n    tag_697:\n      pop\n        /* \"#utility.yul\":3318:3338   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3350:3380   */\n      dup2\n      gt\n        /* \"#utility.yul\":3347:3397   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":3393:3394   */\n      0x00\n        /* \"#utility.yul\":3390:3391   */\n      0x00\n        /* \"#utility.yul\":3383:3395   */\n      revert\n        /* \"#utility.yul\":3347:3397   */\n    tag_698:\n        /* \"#utility.yul\":3430:3434   */\n      0x20\n        /* \"#utility.yul\":3422:3428   */\n      dup4\n        /* \"#utility.yul\":3418:3435   */\n      add\n        /* \"#utility.yul\":3406:3435   */\n      swap2\n      pop\n        /* \"#utility.yul\":3490:3493   */\n      dup4\n        /* \"#utility.yul\":3483:3487   */\n      0x20\n        /* \"#utility.yul\":3473:3479   */\n      dup3\n        /* \"#utility.yul\":3470:3471   */\n      0x05\n        /* \"#utility.yul\":3466:3480   */\n      shl\n        /* \"#utility.yul\":3458:3464   */\n      dup6\n        /* \"#utility.yul\":3454:3481   */\n      add\n        /* \"#utility.yul\":3450:3488   */\n      add\n        /* \"#utility.yul\":3447:3494   */\n      gt\n        /* \"#utility.yul\":3444:3511   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":3507:3508   */\n      0x00\n        /* \"#utility.yul\":3504:3505   */\n      0x00\n        /* \"#utility.yul\":3497:3509   */\n      revert\n        /* \"#utility.yul\":3444:3511   */\n    tag_699:\n        /* \"#utility.yul\":3150:3517   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3522:4754   */\n    tag_74:\n        /* \"#utility.yul\":3636:3642   */\n      0x00\n        /* \"#utility.yul\":3644:3650   */\n      0x00\n        /* \"#utility.yul\":3652:3658   */\n      0x00\n        /* \"#utility.yul\":3660:3666   */\n      0x00\n        /* \"#utility.yul\":3713:3715   */\n      0x60\n        /* \"#utility.yul\":3701:3710   */\n      dup6\n        /* \"#utility.yul\":3692:3699   */\n      dup8\n        /* \"#utility.yul\":3688:3711   */\n      sub\n        /* \"#utility.yul\":3684:3716   */\n      slt\n        /* \"#utility.yul\":3681:3733   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":3729:3730   */\n      0x00\n        /* \"#utility.yul\":3726:3727   */\n      0x00\n        /* \"#utility.yul\":3719:3731   */\n      revert\n        /* \"#utility.yul\":3681:3733   */\n    tag_701:\n        /* \"#utility.yul\":3768:3777   */\n      dup5\n        /* \"#utility.yul\":3755:3778   */\n      calldataload\n        /* \"#utility.yul\":3787:3818   */\n      tag_702\n        /* \"#utility.yul\":3812:3817   */\n      dup2\n        /* \"#utility.yul\":3787:3818   */\n      tag_661\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":3837:3842   */\n      swap4\n      pop\n        /* \"#utility.yul\":3893:3895   */\n      0x20\n        /* \"#utility.yul\":3878:3896   */\n      dup6\n      add\n        /* \"#utility.yul\":3865:3897   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3909:3939   */\n      dup2\n      gt\n        /* \"#utility.yul\":3906:3956   */\n      iszero\n      tag_703\n      jumpi\n        /* \"#utility.yul\":3952:3953   */\n      0x00\n        /* \"#utility.yul\":3949:3950   */\n      0x00\n        /* \"#utility.yul\":3942:3954   */\n      revert\n        /* \"#utility.yul\":3906:3956   */\n    tag_703:\n        /* \"#utility.yul\":3975:3997   */\n      dup6\n      add\n        /* \"#utility.yul\":4028:4032   */\n      0x1f\n        /* \"#utility.yul\":4020:4033   */\n      dup2\n      add\n        /* \"#utility.yul\":4016:4043   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4006:4061   */\n      tag_704\n      jumpi\n        /* \"#utility.yul\":4057:4058   */\n      0x00\n        /* \"#utility.yul\":4054:4055   */\n      0x00\n        /* \"#utility.yul\":4047:4059   */\n      revert\n        /* \"#utility.yul\":4006:4061   */\n    tag_704:\n        /* \"#utility.yul\":4097:4099   */\n      dup1\n        /* \"#utility.yul\":4084:4100   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4115:4121   */\n      dup2\n        /* \"#utility.yul\":4112:4142   */\n      gt\n        /* \"#utility.yul\":4109:4165   */\n      iszero\n      tag_706\n      jumpi\n        /* \"#utility.yul\":4145:4163   */\n      tag_706\n      tag_223\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":4187:4244   */\n      tag_707\n        /* \"#utility.yul\":4234:4236   */\n      0x1f\n        /* \"#utility.yul\":4211:4228   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4207:4238   */\n      and\n        /* \"#utility.yul\":4240:4242   */\n      0x20\n        /* \"#utility.yul\":4203:4243   */\n      add\n        /* \"#utility.yul\":4187:4244   */\n      tag_663\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":4267:4273   */\n      dup2\n        /* \"#utility.yul\":4260:4265   */\n      dup2\n        /* \"#utility.yul\":4253:4274   */\n      mstore\n        /* \"#utility.yul\":4315:4322   */\n      dup9\n        /* \"#utility.yul\":4310:4312   */\n      0x20\n        /* \"#utility.yul\":4301:4307   */\n      dup4\n        /* \"#utility.yul\":4297:4299   */\n      dup6\n        /* \"#utility.yul\":4293:4308   */\n      add\n        /* \"#utility.yul\":4289:4313   */\n      add\n        /* \"#utility.yul\":4286:4323   */\n      gt\n        /* \"#utility.yul\":4283:4340   */\n      iszero\n      tag_708\n      jumpi\n        /* \"#utility.yul\":4336:4337   */\n      0x00\n        /* \"#utility.yul\":4333:4334   */\n      0x00\n        /* \"#utility.yul\":4326:4338   */\n      revert\n        /* \"#utility.yul\":4283:4340   */\n    tag_708:\n        /* \"#utility.yul\":4391:4397   */\n      dup2\n        /* \"#utility.yul\":4386:4388   */\n      0x20\n        /* \"#utility.yul\":4382:4384   */\n      dup5\n        /* \"#utility.yul\":4378:4389   */\n      add\n        /* \"#utility.yul\":4373:4375   */\n      0x20\n        /* \"#utility.yul\":4366:4371   */\n      dup4\n        /* \"#utility.yul\":4362:4376   */\n      add\n        /* \"#utility.yul\":4349:4398   */\n      calldatacopy\n        /* \"#utility.yul\":4443:4444   */\n      0x00\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4429:4435   */\n      dup4\n        /* \"#utility.yul\":4422:4427   */\n      dup4\n        /* \"#utility.yul\":4418:4436   */\n      add\n        /* \"#utility.yul\":4414:4441   */\n      add\n        /* \"#utility.yul\":4407:4445   */\n      mstore\n        /* \"#utility.yul\":4464:4469   */\n      dup1\n        /* \"#utility.yul\":4454:4469   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4522:4524   */\n      0x40\n        /* \"#utility.yul\":4511:4520   */\n      dup6\n        /* \"#utility.yul\":4507:4525   */\n      add\n        /* \"#utility.yul\":4494:4526   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4541:4549   */\n      dup2\n        /* \"#utility.yul\":4538:4570   */\n      gt\n        /* \"#utility.yul\":4535:4587   */\n      iszero\n      tag_709\n      jumpi\n        /* \"#utility.yul\":4583:4584   */\n      0x00\n        /* \"#utility.yul\":4580:4581   */\n      0x00\n        /* \"#utility.yul\":4573:4585   */\n      revert\n        /* \"#utility.yul\":4535:4587   */\n    tag_709:\n        /* \"#utility.yul\":4622:4694   */\n      tag_710\n        /* \"#utility.yul\":4686:4693   */\n      dup8\n        /* \"#utility.yul\":4675:4683   */\n      dup3\n        /* \"#utility.yul\":4664:4673   */\n      dup9\n        /* \"#utility.yul\":4660:4684   */\n      add\n        /* \"#utility.yul\":4622:4694   */\n      tag_664\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":3522:4754   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":4713:4721   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3522:4754   */\n      jump\t// out\n        /* \"#utility.yul\":5083:5309   */\n    tag_85:\n        /* \"#utility.yul\":5142:5148   */\n      0x00\n        /* \"#utility.yul\":5195:5197   */\n      0x20\n        /* \"#utility.yul\":5183:5192   */\n      dup3\n        /* \"#utility.yul\":5174:5181   */\n      dup5\n        /* \"#utility.yul\":5170:5193   */\n      sub\n        /* \"#utility.yul\":5166:5198   */\n      slt\n        /* \"#utility.yul\":5163:5215   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":5211:5212   */\n      0x00\n        /* \"#utility.yul\":5208:5209   */\n      0x00\n        /* \"#utility.yul\":5201:5213   */\n      revert\n        /* \"#utility.yul\":5163:5215   */\n    tag_713:\n      pop\n        /* \"#utility.yul\":5256:5279   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5083:5309   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5522:5769   */\n    tag_91:\n        /* \"#utility.yul\":5581:5587   */\n      0x00\n        /* \"#utility.yul\":5634:5636   */\n      0x20\n        /* \"#utility.yul\":5622:5631   */\n      dup3\n        /* \"#utility.yul\":5613:5620   */\n      dup5\n        /* \"#utility.yul\":5609:5632   */\n      sub\n        /* \"#utility.yul\":5605:5637   */\n      slt\n        /* \"#utility.yul\":5602:5654   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":5650:5651   */\n      0x00\n        /* \"#utility.yul\":5647:5648   */\n      0x00\n        /* \"#utility.yul\":5640:5652   */\n      revert\n        /* \"#utility.yul\":5602:5654   */\n    tag_716:\n        /* \"#utility.yul\":5689:5698   */\n      dup2\n        /* \"#utility.yul\":5676:5699   */\n      calldataload\n        /* \"#utility.yul\":5708:5739   */\n      tag_463\n        /* \"#utility.yul\":5733:5738   */\n      dup2\n        /* \"#utility.yul\":5708:5739   */\n      tag_661\n      jump\t// in\n        /* \"#utility.yul\":5774:6194   */\n    tag_665:\n        /* \"#utility.yul\":5827:5830   */\n      0x00\n        /* \"#utility.yul\":5865:5870   */\n      dup2\n        /* \"#utility.yul\":5859:5871   */\n      mload\n        /* \"#utility.yul\":5892:5898   */\n      dup1\n        /* \"#utility.yul\":5887:5890   */\n      dup5\n        /* \"#utility.yul\":5880:5899   */\n      mstore\n        /* \"#utility.yul\":5924:5928   */\n      0x20\n        /* \"#utility.yul\":5919:5922   */\n      dup5\n        /* \"#utility.yul\":5915:5929   */\n      add\n        /* \"#utility.yul\":5908:5929   */\n      swap4\n      pop\n        /* \"#utility.yul\":5963:5967   */\n      0x20\n        /* \"#utility.yul\":5956:5961   */\n      dup4\n        /* \"#utility.yul\":5952:5968   */\n      add\n        /* \"#utility.yul\":5986:5987   */\n      0x00\n        /* \"#utility.yul\":5996:6169   */\n    tag_719:\n        /* \"#utility.yul\":6010:6016   */\n      dup3\n        /* \"#utility.yul\":6007:6008   */\n      dup2\n        /* \"#utility.yul\":6004:6017   */\n      lt\n        /* \"#utility.yul\":5996:6169   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":6071:6084   */\n      dup2\n      mload\n        /* \"#utility.yul\":6059:6085   */\n      dup7\n      mstore\n        /* \"#utility.yul\":6114:6118   */\n      0x20\n        /* \"#utility.yul\":6105:6119   */\n      swap6\n      dup7\n      add\n      swap6\n        /* \"#utility.yul\":6142:6159   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":6032:6033   */\n      0x01\n        /* \"#utility.yul\":6025:6034   */\n      add\n        /* \"#utility.yul\":5996:6169   */\n      jump(tag_719)\n        /* \"#utility.yul\":6199:6460   */\n    tag_100:\n        /* \"#utility.yul\":6378:6380   */\n      0x20\n        /* \"#utility.yul\":6367:6376   */\n      dup2\n        /* \"#utility.yul\":6360:6381   */\n      mstore\n        /* \"#utility.yul\":6341:6345   */\n      0x00\n        /* \"#utility.yul\":6398:6454   */\n      tag_463\n        /* \"#utility.yul\":6450:6452   */\n      0x20\n        /* \"#utility.yul\":6439:6448   */\n      dup4\n        /* \"#utility.yul\":6435:6453   */\n      add\n        /* \"#utility.yul\":6427:6433   */\n      dup5\n        /* \"#utility.yul\":6398:6454   */\n      tag_665\n      jump\t// in\n        /* \"#utility.yul\":6465:6868   */\n    tag_119:\n        /* \"#utility.yul\":6700:6702   */\n      0x60\n        /* \"#utility.yul\":6689:6698   */\n      dup2\n        /* \"#utility.yul\":6682:6703   */\n      mstore\n        /* \"#utility.yul\":6663:6667   */\n      0x00\n        /* \"#utility.yul\":6720:6776   */\n      tag_725\n        /* \"#utility.yul\":6772:6774   */\n      0x60\n        /* \"#utility.yul\":6761:6770   */\n      dup4\n        /* \"#utility.yul\":6757:6775   */\n      add\n        /* \"#utility.yul\":6749:6755   */\n      dup7\n        /* \"#utility.yul\":6720:6776   */\n      tag_665\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":6807:6809   */\n      0x20\n        /* \"#utility.yul\":6792:6810   */\n      dup4\n      add\n        /* \"#utility.yul\":6785:6819   */\n      swap5\n      swap1\n      swap5\n      mstore\n      pop\n        /* \"#utility.yul\":6850:6852   */\n      0x40\n        /* \"#utility.yul\":6835:6853   */\n      add\n        /* \"#utility.yul\":6828:6862   */\n      mstore\n        /* \"#utility.yul\":6712:6776   */\n      swap2\n        /* \"#utility.yul\":6465:6868   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6873:6991   */\n    tag_666:\n        /* \"#utility.yul\":6959:6964   */\n      dup1\n        /* \"#utility.yul\":6952:6965   */\n      iszero\n        /* \"#utility.yul\":6945:6966   */\n      iszero\n        /* \"#utility.yul\":6938:6943   */\n      dup2\n        /* \"#utility.yul\":6935:6967   */\n      eq\n        /* \"#utility.yul\":6925:6985   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6981:6982   */\n      0x00\n        /* \"#utility.yul\":6978:6979   */\n      0x00\n        /* \"#utility.yul\":6971:6983   */\n      revert\n        /* \"#utility.yul\":6996:7237   */\n    tag_130:\n        /* \"#utility.yul\":7052:7058   */\n      0x00\n        /* \"#utility.yul\":7105:7107   */\n      0x20\n        /* \"#utility.yul\":7093:7102   */\n      dup3\n        /* \"#utility.yul\":7084:7091   */\n      dup5\n        /* \"#utility.yul\":7080:7103   */\n      sub\n        /* \"#utility.yul\":7076:7108   */\n      slt\n        /* \"#utility.yul\":7073:7125   */\n      iszero\n      tag_729\n      jumpi\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7118:7119   */\n      0x00\n        /* \"#utility.yul\":7111:7123   */\n      revert\n        /* \"#utility.yul\":7073:7125   */\n    tag_729:\n        /* \"#utility.yul\":7160:7169   */\n      dup2\n        /* \"#utility.yul\":7147:7170   */\n      calldataload\n        /* \"#utility.yul\":7179:7207   */\n      tag_463\n        /* \"#utility.yul\":7201:7206   */\n      dup2\n        /* \"#utility.yul\":7179:7207   */\n      tag_666\n      jump\t// in\n        /* \"#utility.yul\":7242:7630   */\n    tag_144:\n        /* \"#utility.yul\":7310:7316   */\n      0x00\n        /* \"#utility.yul\":7318:7324   */\n      0x00\n        /* \"#utility.yul\":7371:7373   */\n      0x40\n        /* \"#utility.yul\":7359:7368   */\n      dup4\n        /* \"#utility.yul\":7350:7357   */\n      dup6\n        /* \"#utility.yul\":7346:7369   */\n      sub\n        /* \"#utility.yul\":7342:7374   */\n      slt\n        /* \"#utility.yul\":7339:7391   */\n      iszero\n      tag_732\n      jumpi\n        /* \"#utility.yul\":7387:7388   */\n      0x00\n        /* \"#utility.yul\":7384:7385   */\n      0x00\n        /* \"#utility.yul\":7377:7389   */\n      revert\n        /* \"#utility.yul\":7339:7391   */\n    tag_732:\n        /* \"#utility.yul\":7426:7435   */\n      dup3\n        /* \"#utility.yul\":7413:7436   */\n      calldataload\n        /* \"#utility.yul\":7445:7476   */\n      tag_733\n        /* \"#utility.yul\":7470:7475   */\n      dup2\n        /* \"#utility.yul\":7445:7476   */\n      tag_661\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":7495:7500   */\n      swap2\n      pop\n        /* \"#utility.yul\":7552:7554   */\n      0x20\n        /* \"#utility.yul\":7537:7555   */\n      dup4\n      add\n        /* \"#utility.yul\":7524:7556   */\n      calldataload\n        /* \"#utility.yul\":7565:7598   */\n      tag_734\n        /* \"#utility.yul\":7524:7556   */\n      dup2\n        /* \"#utility.yul\":7565:7598   */\n      tag_661\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":7617:7624   */\n      dup1\n        /* \"#utility.yul\":7607:7624   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7242:7630   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7635:8072   */\n    tag_149:\n        /* \"#utility.yul\":7721:7727   */\n      0x00\n        /* \"#utility.yul\":7729:7735   */\n      0x00\n        /* \"#utility.yul\":7782:7784   */\n      0x20\n        /* \"#utility.yul\":7770:7779   */\n      dup4\n        /* \"#utility.yul\":7761:7768   */\n      dup6\n        /* \"#utility.yul\":7757:7780   */\n      sub\n        /* \"#utility.yul\":7753:7785   */\n      slt\n        /* \"#utility.yul\":7750:7802   */\n      iszero\n      tag_736\n      jumpi\n        /* \"#utility.yul\":7798:7799   */\n      0x00\n        /* \"#utility.yul\":7795:7796   */\n      0x00\n        /* \"#utility.yul\":7788:7800   */\n      revert\n        /* \"#utility.yul\":7750:7802   */\n    tag_736:\n        /* \"#utility.yul\":7838:7847   */\n      dup3\n        /* \"#utility.yul\":7825:7848   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7863:7869   */\n      dup2\n        /* \"#utility.yul\":7860:7890   */\n      gt\n        /* \"#utility.yul\":7857:7907   */\n      iszero\n      tag_737\n      jumpi\n        /* \"#utility.yul\":7903:7904   */\n      0x00\n        /* \"#utility.yul\":7900:7901   */\n      0x00\n        /* \"#utility.yul\":7893:7905   */\n      revert\n        /* \"#utility.yul\":7857:7907   */\n    tag_737:\n        /* \"#utility.yul\":7942:8012   */\n      tag_738\n        /* \"#utility.yul\":8004:8011   */\n      dup6\n        /* \"#utility.yul\":7995:8001   */\n      dup3\n        /* \"#utility.yul\":7984:7993   */\n      dup7\n        /* \"#utility.yul\":7980:8002   */\n      add\n        /* \"#utility.yul\":7942:8012   */\n      tag_664\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":8031:8039   */\n      swap1\n      swap7\n        /* \"#utility.yul\":7916:8012   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":7635:8072   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8077:8649   */\n    tag_153:\n        /* \"#utility.yul\":8172:8178   */\n      0x00\n        /* \"#utility.yul\":8180:8186   */\n      0x00\n        /* \"#utility.yul\":8188:8194   */\n      0x00\n        /* \"#utility.yul\":8241:8243   */\n      0x40\n        /* \"#utility.yul\":8229:8238   */\n      dup5\n        /* \"#utility.yul\":8220:8227   */\n      dup7\n        /* \"#utility.yul\":8216:8239   */\n      sub\n        /* \"#utility.yul\":8212:8244   */\n      slt\n        /* \"#utility.yul\":8209:8261   */\n      iszero\n      tag_740\n      jumpi\n        /* \"#utility.yul\":8257:8258   */\n      0x00\n        /* \"#utility.yul\":8254:8255   */\n      0x00\n        /* \"#utility.yul\":8247:8259   */\n      revert\n        /* \"#utility.yul\":8209:8261   */\n    tag_740:\n        /* \"#utility.yul\":8296:8305   */\n      dup4\n        /* \"#utility.yul\":8283:8306   */\n      calldataload\n        /* \"#utility.yul\":8315:8346   */\n      tag_741\n        /* \"#utility.yul\":8340:8345   */\n      dup2\n        /* \"#utility.yul\":8315:8346   */\n      tag_661\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":8365:8370   */\n      swap3\n      pop\n        /* \"#utility.yul\":8421:8423   */\n      0x20\n        /* \"#utility.yul\":8406:8424   */\n      dup5\n      add\n        /* \"#utility.yul\":8393:8425   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8437:8467   */\n      dup2\n      gt\n        /* \"#utility.yul\":8434:8484   */\n      iszero\n      tag_742\n      jumpi\n        /* \"#utility.yul\":8480:8481   */\n      0x00\n        /* \"#utility.yul\":8477:8478   */\n      0x00\n        /* \"#utility.yul\":8470:8482   */\n      revert\n        /* \"#utility.yul\":8434:8484   */\n    tag_742:\n        /* \"#utility.yul\":8519:8589   */\n      tag_743\n        /* \"#utility.yul\":8581:8588   */\n      dup7\n        /* \"#utility.yul\":8572:8578   */\n      dup3\n        /* \"#utility.yul\":8561:8570   */\n      dup8\n        /* \"#utility.yul\":8557:8579   */\n      add\n        /* \"#utility.yul\":8519:8589   */\n      tag_664\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":8077:8649   */\n      swap5\n      swap8\n        /* \"#utility.yul\":8608:8616   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":8493:8589   */\n      swap4\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8077:8649   */\n      jump\t// out\n        /* \"#utility.yul\":8654:9034   */\n    tag_170:\n        /* \"#utility.yul\":8733:8734   */\n      0x01\n        /* \"#utility.yul\":8729:8741   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8776:8788   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8797:8858   */\n      tag_745\n      jumpi\n        /* \"#utility.yul\":8851:8855   */\n      0x7f\n        /* \"#utility.yul\":8843:8849   */\n      dup3\n        /* \"#utility.yul\":8839:8856   */\n      and\n        /* \"#utility.yul\":8829:8856   */\n      swap2\n      pop\n        /* \"#utility.yul\":8797:8858   */\n    tag_745:\n        /* \"#utility.yul\":8904:8906   */\n      0x20\n        /* \"#utility.yul\":8896:8902   */\n      dup3\n        /* \"#utility.yul\":8893:8907   */\n      lt\n        /* \"#utility.yul\":8873:8891   */\n      dup2\n        /* \"#utility.yul\":8870:8908   */\n      sub\n        /* \"#utility.yul\":8867:9028   */\n      tag_746\n      jumpi\n        /* \"#utility.yul\":8950:8960   */\n      0x4e487b71\n        /* \"#utility.yul\":8945:8948   */\n      0xe0\n        /* \"#utility.yul\":8941:8961   */\n      shl\n        /* \"#utility.yul\":8938:8939   */\n      0x00\n        /* \"#utility.yul\":8931:8962   */\n      mstore\n        /* \"#utility.yul\":8985:8989   */\n      0x22\n        /* \"#utility.yul\":8982:8983   */\n      0x04\n        /* \"#utility.yul\":8975:8990   */\n      mstore\n        /* \"#utility.yul\":9013:9017   */\n      0x24\n        /* \"#utility.yul\":9010:9011   */\n      0x00\n        /* \"#utility.yul\":9003:9018   */\n      revert\n        /* \"#utility.yul\":8867:9028   */\n    tag_746:\n      pop\n        /* \"#utility.yul\":8654:9034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9039:9166   */\n    tag_667:\n        /* \"#utility.yul\":9100:9110   */\n      0x4e487b71\n        /* \"#utility.yul\":9095:9098   */\n      0xe0\n        /* \"#utility.yul\":9091:9111   */\n      shl\n        /* \"#utility.yul\":9088:9089   */\n      0x00\n        /* \"#utility.yul\":9081:9112   */\n      mstore\n        /* \"#utility.yul\":9131:9135   */\n      0x11\n        /* \"#utility.yul\":9128:9129   */\n      0x04\n        /* \"#utility.yul\":9121:9136   */\n      mstore\n        /* \"#utility.yul\":9155:9159   */\n      0x24\n        /* \"#utility.yul\":9152:9153   */\n      0x00\n        /* \"#utility.yul\":9145:9160   */\n      revert\n        /* \"#utility.yul\":9171:9296   */\n    tag_180:\n        /* \"#utility.yul\":9236:9245   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9257:9267   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9254:9290   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":9270:9288   */\n      tag_181\n      tag_667\n      jump\t// in\n        /* \"#utility.yul\":9633:9845   */\n    tag_668:\n        /* \"#utility.yul\":9675:9678   */\n      0x00\n        /* \"#utility.yul\":9713:9718   */\n      dup2\n        /* \"#utility.yul\":9707:9719   */\n      mload\n        /* \"#utility.yul\":9757:9763   */\n      dup1\n        /* \"#utility.yul\":9750:9754   */\n      0x20\n        /* \"#utility.yul\":9743:9748   */\n      dup5\n        /* \"#utility.yul\":9739:9755   */\n      add\n        /* \"#utility.yul\":9734:9737   */\n      dup6\n        /* \"#utility.yul\":9728:9764   */\n      mcopy\n        /* \"#utility.yul\":9819:9820   */\n      0x00\n        /* \"#utility.yul\":9783:9799   */\n      swap4\n      add\n        /* \"#utility.yul\":9808:9821   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":9783:9799   */\n      swap1\n      swap2\n        /* \"#utility.yul\":9633:9845   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9850:10198   */\n    tag_214:\n        /* \"#utility.yul\":10082:10085   */\n      0x00\n        /* \"#utility.yul\":10110:10140   */\n      tag_754\n        /* \"#utility.yul\":10136:10139   */\n      dup3\n        /* \"#utility.yul\":10128:10134   */\n      dup5\n        /* \"#utility.yul\":10110:10140   */\n      tag_668\n      jump\t// in\n    tag_754:\n      shl(0xec, 0x02d4c5)\n        /* \"#utility.yul\":10149:10166   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10190:10191   */\n      0x03\n        /* \"#utility.yul\":10182:10192   */\n      add\n      swap4\n        /* \"#utility.yul\":9850:10198   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10417:10545   */\n    tag_232:\n        /* \"#utility.yul\":10484:10493   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":10505:10516   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":10502:10539   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":10519:10537   */\n      tag_181\n      tag_667\n      jump\t// in\n        /* \"#utility.yul\":10550:10767   */\n    tag_234:\n        /* \"#utility.yul\":10590:10591   */\n      0x00\n        /* \"#utility.yul\":10616:10617   */\n      dup3\n        /* \"#utility.yul\":10606:10738   */\n      tag_760\n      jumpi\n        /* \"#utility.yul\":10660:10670   */\n      0x4e487b71\n        /* \"#utility.yul\":10655:10658   */\n      0xe0\n        /* \"#utility.yul\":10651:10671   */\n      shl\n        /* \"#utility.yul\":10648:10649   */\n      0x00\n        /* \"#utility.yul\":10641:10672   */\n      mstore\n        /* \"#utility.yul\":10695:10699   */\n      0x12\n        /* \"#utility.yul\":10692:10693   */\n      0x04\n        /* \"#utility.yul\":10685:10700   */\n      mstore\n        /* \"#utility.yul\":10723:10727   */\n      0x24\n        /* \"#utility.yul\":10720:10721   */\n      0x00\n        /* \"#utility.yul\":10713:10728   */\n      revert\n        /* \"#utility.yul\":10606:10738   */\n    tag_760:\n      pop\n        /* \"#utility.yul\":10752:10761   */\n      div\n      swap1\n        /* \"#utility.yul\":10550:10767   */\n      jump\t// out\n        /* \"#utility.yul\":11025:11209   */\n    tag_245:\n        /* \"#utility.yul\":11095:11101   */\n      0x00\n        /* \"#utility.yul\":11148:11150   */\n      0x20\n        /* \"#utility.yul\":11136:11145   */\n      dup3\n        /* \"#utility.yul\":11127:11134   */\n      dup5\n        /* \"#utility.yul\":11123:11146   */\n      sub\n        /* \"#utility.yul\":11119:11151   */\n      slt\n        /* \"#utility.yul\":11116:11168   */\n      iszero\n      tag_763\n      jumpi\n        /* \"#utility.yul\":11164:11165   */\n      0x00\n        /* \"#utility.yul\":11161:11162   */\n      0x00\n        /* \"#utility.yul\":11154:11166   */\n      revert\n        /* \"#utility.yul\":11116:11168   */\n    tag_763:\n      pop\n        /* \"#utility.yul\":11187:11203   */\n      mload\n      swap2\n        /* \"#utility.yul\":11025:11209   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11214:11341   */\n    tag_251:\n        /* \"#utility.yul\":11275:11285   */\n      0x4e487b71\n        /* \"#utility.yul\":11270:11273   */\n      0xe0\n        /* \"#utility.yul\":11266:11286   */\n      shl\n        /* \"#utility.yul\":11263:11264   */\n      0x00\n        /* \"#utility.yul\":11256:11287   */\n      mstore\n        /* \"#utility.yul\":11306:11310   */\n      0x32\n        /* \"#utility.yul\":11303:11304   */\n      0x04\n        /* \"#utility.yul\":11296:11311   */\n      mstore\n        /* \"#utility.yul\":11330:11334   */\n      0x24\n        /* \"#utility.yul\":11327:11328   */\n      0x00\n        /* \"#utility.yul\":11320:11335   */\n      revert\n        /* \"#utility.yul\":11346:11597   */\n    tag_304:\n        /* \"#utility.yul\":11416:11422   */\n      0x00\n        /* \"#utility.yul\":11469:11471   */\n      0x20\n        /* \"#utility.yul\":11457:11466   */\n      dup3\n        /* \"#utility.yul\":11448:11455   */\n      dup5\n        /* \"#utility.yul\":11444:11467   */\n      sub\n        /* \"#utility.yul\":11440:11472   */\n      slt\n        /* \"#utility.yul\":11437:11489   */\n      iszero\n      tag_766\n      jumpi\n        /* \"#utility.yul\":11485:11486   */\n      0x00\n        /* \"#utility.yul\":11482:11483   */\n      0x00\n        /* \"#utility.yul\":11475:11487   */\n      revert\n        /* \"#utility.yul\":11437:11489   */\n    tag_766:\n        /* \"#utility.yul\":11517:11526   */\n      dup2\n        /* \"#utility.yul\":11511:11527   */\n      mload\n        /* \"#utility.yul\":11536:11567   */\n      tag_463\n        /* \"#utility.yul\":11561:11566   */\n      dup2\n        /* \"#utility.yul\":11536:11567   */\n      tag_661\n      jump\t// in\n        /* \"#utility.yul\":11907:12908   */\n    tag_320:\n        /* \"#utility.yul\":12002:12008   */\n      0x00\n        /* \"#utility.yul\":12055:12057   */\n      0x20\n        /* \"#utility.yul\":12043:12052   */\n      dup3\n        /* \"#utility.yul\":12034:12041   */\n      dup5\n        /* \"#utility.yul\":12030:12053   */\n      sub\n        /* \"#utility.yul\":12026:12058   */\n      slt\n        /* \"#utility.yul\":12023:12075   */\n      iszero\n      tag_770\n      jumpi\n        /* \"#utility.yul\":12071:12072   */\n      0x00\n        /* \"#utility.yul\":12068:12069   */\n      0x00\n        /* \"#utility.yul\":12061:12073   */\n      revert\n        /* \"#utility.yul\":12023:12075   */\n    tag_770:\n        /* \"#utility.yul\":12104:12113   */\n      dup2\n        /* \"#utility.yul\":12098:12114   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":12129:12135   */\n      dup2\n        /* \"#utility.yul\":12126:12156   */\n      gt\n        /* \"#utility.yul\":12123:12173   */\n      iszero\n      tag_771\n      jumpi\n        /* \"#utility.yul\":12169:12170   */\n      0x00\n        /* \"#utility.yul\":12166:12167   */\n      0x00\n        /* \"#utility.yul\":12159:12171   */\n      revert\n        /* \"#utility.yul\":12123:12173   */\n    tag_771:\n        /* \"#utility.yul\":12192:12214   */\n      dup3\n      add\n        /* \"#utility.yul\":12245:12249   */\n      0x1f\n        /* \"#utility.yul\":12237:12250   */\n      dup2\n      add\n        /* \"#utility.yul\":12233:12260   */\n      dup5\n      sgt\n        /* \"#utility.yul\":12223:12278   */\n      tag_772\n      jumpi\n        /* \"#utility.yul\":12274:12275   */\n      0x00\n        /* \"#utility.yul\":12271:12272   */\n      0x00\n        /* \"#utility.yul\":12264:12276   */\n      revert\n        /* \"#utility.yul\":12223:12278   */\n    tag_772:\n        /* \"#utility.yul\":12307:12309   */\n      dup1\n        /* \"#utility.yul\":12301:12310   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":12325:12331   */\n      dup2\n        /* \"#utility.yul\":12322:12352   */\n      gt\n        /* \"#utility.yul\":12319:12375   */\n      iszero\n      tag_774\n      jumpi\n        /* \"#utility.yul\":12355:12373   */\n      tag_774\n      tag_223\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":12401:12407   */\n      dup1\n        /* \"#utility.yul\":12398:12399   */\n      0x05\n        /* \"#utility.yul\":12394:12408   */\n      shl\n        /* \"#utility.yul\":12428:12456   */\n      tag_775\n        /* \"#utility.yul\":12452:12454   */\n      0x20\n        /* \"#utility.yul\":12448:12450   */\n      dup3\n        /* \"#utility.yul\":12444:12455   */\n      add\n        /* \"#utility.yul\":12428:12456   */\n      tag_663\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":12490:12509   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":12534:12536   */\n      0x20\n        /* \"#utility.yul\":12564:12575   */\n      dup2\n      dup5\n      add\n        /* \"#utility.yul\":12560:12580   */\n      dup2\n      add\n      swap3\n        /* \"#utility.yul\":12525:12537   */\n      swap1\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":12592:12611   */\n      dup8\n      dup5\n      gt\n        /* \"#utility.yul\":12589:12628   */\n      iszero\n      tag_776\n      jumpi\n        /* \"#utility.yul\":12624:12625   */\n      0x00\n        /* \"#utility.yul\":12621:12622   */\n      0x00\n        /* \"#utility.yul\":12614:12626   */\n      revert\n        /* \"#utility.yul\":12589:12628   */\n    tag_776:\n        /* \"#utility.yul\":12656:12658   */\n      0x20\n        /* \"#utility.yul\":12652:12654   */\n      dup6\n        /* \"#utility.yul\":12648:12659   */\n      add\n        /* \"#utility.yul\":12637:12659   */\n      swap5\n      pop\n        /* \"#utility.yul\":12668:12878   */\n    tag_777:\n        /* \"#utility.yul\":12684:12690   */\n      dup4\n        /* \"#utility.yul\":12679:12682   */\n      dup6\n        /* \"#utility.yul\":12676:12691   */\n      lt\n        /* \"#utility.yul\":12668:12878   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":12757:12760   */\n      dup5\n        /* \"#utility.yul\":12751:12761   */\n      mload\n        /* \"#utility.yul\":12738:12761   */\n      swap3\n      pop\n        /* \"#utility.yul\":12774:12805   */\n      tag_780\n        /* \"#utility.yul\":12799:12804   */\n      dup4\n        /* \"#utility.yul\":12774:12805   */\n      tag_661\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":12818:12836   */\n      dup3\n      dup3\n      mstore\n        /* \"#utility.yul\":12865:12867   */\n      0x20\n        /* \"#utility.yul\":12701:12713   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":12856:12868   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":12668:12878   */\n      jump(tag_777)\n        /* \"#utility.yul\":12913:13081   */\n    tag_322:\n        /* \"#utility.yul\":12986:12995   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":13017:13026   */\n      dup2\n      iszero\n        /* \"#utility.yul\":13034:13049   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":13028:13050   */\n      dup5\n      eq\n        /* \"#utility.yul\":13014:13051   */\n      or\n        /* \"#utility.yul\":13004:13075   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":13055:13073   */\n      tag_181\n      tag_667\n      jump\t// in\n        /* \"#utility.yul\":13086:13418   */\n    tag_325:\n        /* \"#utility.yul\":13293:13299   */\n      dup3\n        /* \"#utility.yul\":13282:13291   */\n      dup2\n        /* \"#utility.yul\":13275:13300   */\n      mstore\n        /* \"#utility.yul\":13336:13338   */\n      0x40\n        /* \"#utility.yul\":13331:13333   */\n      0x20\n        /* \"#utility.yul\":13320:13329   */\n      dup3\n        /* \"#utility.yul\":13316:13334   */\n      add\n        /* \"#utility.yul\":13309:13339   */\n      mstore\n        /* \"#utility.yul\":13256:13260   */\n      0x00\n        /* \"#utility.yul\":13356:13412   */\n      tag_621\n        /* \"#utility.yul\":13408:13410   */\n      0x40\n        /* \"#utility.yul\":13397:13406   */\n      dup4\n        /* \"#utility.yul\":13393:13411   */\n      add\n        /* \"#utility.yul\":13385:13391   */\n      dup5\n        /* \"#utility.yul\":13356:13412   */\n      tag_662\n      jump\t// in\n        /* \"#utility.yul\":13819:14503   */\n    tag_414:\n        /* \"#utility.yul\":14019:14021   */\n      0x20\n        /* \"#utility.yul\":14031:14052   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14004:14022   */\n      dup2\n      add\n        /* \"#utility.yul\":14087:14109   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":13971:13975   */\n      0x00\n        /* \"#utility.yul\":14166:14172   */\n      dup4\n        /* \"#utility.yul\":14140:14142   */\n      0x40\n        /* \"#utility.yul\":14125:14143   */\n      dup4\n      add\n        /* \"#utility.yul\":13971:13975   */\n      dup3\n        /* \"#utility.yul\":14200:14477   */\n    tag_788:\n        /* \"#utility.yul\":14214:14220   */\n      dup6\n        /* \"#utility.yul\":14211:14212   */\n      dup2\n        /* \"#utility.yul\":14208:14221   */\n      lt\n        /* \"#utility.yul\":14200:14477   */\n      iszero\n      tag_790\n      jumpi\n        /* \"#utility.yul\":14289:14295   */\n      dup3\n        /* \"#utility.yul\":14276:14296   */\n      calldataload\n        /* \"#utility.yul\":14309:14340   */\n      tag_791\n        /* \"#utility.yul\":14334:14339   */\n      dup2\n        /* \"#utility.yul\":14309:14340   */\n      tag_661\n      jump\t// in\n    tag_791:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14365:14396   */\n      and\n        /* \"#utility.yul\":14353:14397   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14426:14428   */\n      0x20\n        /* \"#utility.yul\":14452:14467   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":14417:14429   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":14393:14394   */\n      0x01\n        /* \"#utility.yul\":14229:14238   */\n      add\n        /* \"#utility.yul\":14200:14477   */\n      jump(tag_788)\n    tag_790:\n      pop\n        /* \"#utility.yul\":14494:14497   */\n      swap6\n        /* \"#utility.yul\":13819:14503   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15263:15781   */\n    tag_670:\n        /* \"#utility.yul\":15365:15367   */\n      0x1f\n        /* \"#utility.yul\":15360:15363   */\n      dup3\n        /* \"#utility.yul\":15357:15368   */\n      gt\n        /* \"#utility.yul\":15354:15775   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":15401:15406   */\n      dup1\n        /* \"#utility.yul\":15398:15399   */\n      0x00\n        /* \"#utility.yul\":15391:15407   */\n      mstore\n        /* \"#utility.yul\":15445:15449   */\n      0x20\n        /* \"#utility.yul\":15442:15443   */\n      0x00\n        /* \"#utility.yul\":15432:15450   */\n      keccak256\n        /* \"#utility.yul\":15515:15517   */\n      0x1f\n        /* \"#utility.yul\":15503:15513   */\n      dup5\n        /* \"#utility.yul\":15499:15518   */\n      add\n        /* \"#utility.yul\":15496:15497   */\n      0x05\n        /* \"#utility.yul\":15492:15519   */\n      shr\n        /* \"#utility.yul\":15486:15490   */\n      dup2\n        /* \"#utility.yul\":15482:15520   */\n      add\n        /* \"#utility.yul\":15551:15555   */\n      0x20\n        /* \"#utility.yul\":15539:15549   */\n      dup6\n        /* \"#utility.yul\":15536:15556   */\n      lt\n        /* \"#utility.yul\":15533:15580   */\n      iszero\n      tag_797\n      jumpi\n      pop\n        /* \"#utility.yul\":15574:15578   */\n      dup1\n        /* \"#utility.yul\":15533:15580   */\n    tag_797:\n        /* \"#utility.yul\":15629:15631   */\n      0x1f\n        /* \"#utility.yul\":15624:15627   */\n      dup5\n        /* \"#utility.yul\":15620:15632   */\n      add\n        /* \"#utility.yul\":15617:15618   */\n      0x05\n        /* \"#utility.yul\":15613:15633   */\n      shr\n        /* \"#utility.yul\":15607:15611   */\n      dup3\n        /* \"#utility.yul\":15603:15634   */\n      add\n        /* \"#utility.yul\":15593:15634   */\n      swap2\n      pop\n        /* \"#utility.yul\":15684:15765   */\n    tag_798:\n        /* \"#utility.yul\":15702:15704   */\n      dup2\n        /* \"#utility.yul\":15695:15700   */\n      dup2\n        /* \"#utility.yul\":15692:15705   */\n      lt\n        /* \"#utility.yul\":15684:15765   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":15761:15762   */\n      0x00\n        /* \"#utility.yul\":15747:15763   */\n      dup2\n      sstore\n        /* \"#utility.yul\":15728:15729   */\n      0x01\n        /* \"#utility.yul\":15717:15730   */\n      add\n        /* \"#utility.yul\":15684:15765   */\n      jump(tag_798)\n        /* \"#utility.yul\":15957:17256   */\n    tag_601:\n        /* \"#utility.yul\":16083:16086   */\n      dup2\n        /* \"#utility.yul\":16077:16087   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":16102:16108   */\n      dup2\n        /* \"#utility.yul\":16099:16129   */\n      gt\n        /* \"#utility.yul\":16096:16152   */\n      iszero\n      tag_804\n      jumpi\n        /* \"#utility.yul\":16132:16150   */\n      tag_804\n      tag_223\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":16161:16258   */\n      tag_805\n        /* \"#utility.yul\":16251:16257   */\n      dup2\n        /* \"#utility.yul\":16211:16249   */\n      tag_806\n        /* \"#utility.yul\":16243:16247   */\n      dup5\n        /* \"#utility.yul\":16237:16248   */\n      sload\n        /* \"#utility.yul\":16211:16249   */\n      tag_170\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":16205:16209   */\n      dup5\n        /* \"#utility.yul\":16161:16258   */\n      tag_670\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":16307:16311   */\n      0x20\n        /* \"#utility.yul\":16338:16340   */\n      0x1f\n        /* \"#utility.yul\":16327:16341   */\n      dup3\n      gt\n        /* \"#utility.yul\":16355:16356   */\n      0x01\n        /* \"#utility.yul\":16350:16999   */\n      dup2\n      eq\n      tag_808\n      jumpi\n        /* \"#utility.yul\":17043:17044   */\n      0x00\n        /* \"#utility.yul\":17060:17066   */\n      dup4\n        /* \"#utility.yul\":17057:17146   */\n      iszero\n      tag_809\n      jumpi\n      pop\n        /* \"#utility.yul\":17112:17131   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":17106:17132   */\n      mload\n        /* \"#utility.yul\":17057:17146   */\n    tag_809:\n      not(0x00)\n        /* \"#utility.yul\":15914:15915   */\n      0x03\n        /* \"#utility.yul\":15910:15921   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":15906:15930   */\n      shr\n        /* \"#utility.yul\":15902:15931   */\n      not\n        /* \"#utility.yul\":15892:15932   */\n      and\n        /* \"#utility.yul\":15938:15939   */\n      0x01\n        /* \"#utility.yul\":15934:15945   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":15889:15946   */\n      or\n        /* \"#utility.yul\":17159:17240   */\n      dup5\n      sstore\n        /* \"#utility.yul\":16320:17250   */\n      jump(tag_579)\n        /* \"#utility.yul\":16350:16999   */\n    tag_808:\n        /* \"#utility.yul\":15210:15211   */\n      0x00\n        /* \"#utility.yul\":15203:15217   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":15247:15251   */\n      0x20\n        /* \"#utility.yul\":15234:15252   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":16386:16406   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":16504:16726   */\n    tag_812:\n        /* \"#utility.yul\":16518:16525   */\n      dup3\n        /* \"#utility.yul\":16515:16516   */\n      dup2\n        /* \"#utility.yul\":16512:16526   */\n      lt\n        /* \"#utility.yul\":16504:16726   */\n      iszero\n      tag_814\n      jumpi\n        /* \"#utility.yul\":16600:16619   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":16594:16620   */\n      mload\n        /* \"#utility.yul\":16579:16621   */\n      dup3\n      sstore\n        /* \"#utility.yul\":16707:16711   */\n      0x20\n        /* \"#utility.yul\":16692:16712   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":16660:16661   */\n      0x01\n        /* \"#utility.yul\":16648:16662   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":16534:16546   */\n      add\n        /* \"#utility.yul\":16504:16726   */\n      jump(tag_812)\n    tag_814:\n        /* \"#utility.yul\":16508:16511   */\n      pop\n        /* \"#utility.yul\":16754:16760   */\n      dup5\n        /* \"#utility.yul\":16745:16752   */\n      dup3\n        /* \"#utility.yul\":16742:16761   */\n      lt\n        /* \"#utility.yul\":16739:16940   */\n      iszero\n      tag_815\n      jumpi\n        /* \"#utility.yul\":16815:16834   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":16809:16835   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":16898:16899   */\n      0x03\n        /* \"#utility.yul\":16894:16908   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":16910:16913   */\n      0xf8\n        /* \"#utility.yul\":16890:16914   */\n      and\n        /* \"#utility.yul\":16886:16923   */\n      shr\n        /* \"#utility.yul\":16882:16924   */\n      not\n        /* \"#utility.yul\":16867:16925   */\n      and\n        /* \"#utility.yul\":16852:16926   */\n      dup2\n      sstore\n        /* \"#utility.yul\":16739:16940   */\n    tag_815:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16986:16987   */\n      0x01\n        /* \"#utility.yul\":16970:16984   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":16966:16988   */\n      add\n        /* \"#utility.yul\":16953:16989   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":15957:17256   */\n      jump\t// out\n        /* \"#utility.yul\":17261:17506   */\n    tag_614:\n        /* \"#utility.yul\":17328:17334   */\n      0x00\n        /* \"#utility.yul\":17381:17383   */\n      0x20\n        /* \"#utility.yul\":17369:17378   */\n      dup3\n        /* \"#utility.yul\":17360:17367   */\n      dup5\n        /* \"#utility.yul\":17356:17379   */\n      sub\n        /* \"#utility.yul\":17352:17384   */\n      slt\n        /* \"#utility.yul\":17349:17401   */\n      iszero\n      tag_817\n      jumpi\n        /* \"#utility.yul\":17397:17398   */\n      0x00\n        /* \"#utility.yul\":17394:17395   */\n      0x00\n        /* \"#utility.yul\":17387:17399   */\n      revert\n        /* \"#utility.yul\":17349:17401   */\n    tag_817:\n        /* \"#utility.yul\":17429:17438   */\n      dup2\n        /* \"#utility.yul\":17423:17439   */\n      mload\n        /* \"#utility.yul\":17448:17476   */\n      tag_463\n        /* \"#utility.yul\":17470:17475   */\n      dup2\n        /* \"#utility.yul\":17448:17476   */\n      tag_666\n      jump\t// in\n        /* \"#utility.yul\":18329:18519   */\n    tag_628:\n        /* \"#utility.yul\":18458:18461   */\n      0x00\n        /* \"#utility.yul\":18483:18513   */\n      tag_463\n        /* \"#utility.yul\":18509:18512   */\n      dup3\n        /* \"#utility.yul\":18501:18507   */\n      dup5\n        /* \"#utility.yul\":18483:18513   */\n      tag_668\n      jump\t// in\n    stop\n    data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b 52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n    data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d 52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02\n\n    auxdata: 0xa2646970667358221220cb19986944f508eb69ba00ae534455059cf7526c67241b26a7c16baa945a70b564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506128498061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106101e7575f3560e01c80639257fa0711610109578063d2c725e01161009e578063de836ebd1161006e578063de836ebd1461041a578063e54ef9a01461042d578063ec5975c614610440578063f2fde38b14610448575f5ffd5b8063d2c725e0146103d4578063d410ad7d146103e1578063dd62ed3e146103f4578063de41691c14610407575f5ffd5b8063a9059cbb116100d9578063a9059cbb14610394578063b4b93c8c146103a7578063ba6ba385146103af578063c45a0155146103c2575f5ffd5b80639257fa071461034f57806395d89b4114610362578063a131d4361461036a578063a7c7fdeb1461038c575f5ffd5b80635483067d1161017f578063715018a61161014f578063715018a61461030c57806389afcb44146103145780638da5cb5b146103345780638e73f1b41461033c575f5ffd5b80635483067d146102a257806355917ebe146102ab57806367ccdf38146102ce57806370a08231146102f9575f5ffd5b806323b872dd116101ba57806323b872dd14610256578063273cbaa014610269578063313ce5671461027e5780633a105cfb1461028d575f5ffd5b806306fdde03146101eb578063090318fb14610209578063095ea7b31461021f57806318160ddd14610242575b5f5ffd5b6101f361045b565b604051610200919061209b565b60405180910390f35b61021161051b565b604051908152602001610200565b61023261022d3660046120e4565b610544565b6040519015158152602001610200565b5f5160206127f45f395f51905f5254610211565b61023261026436600461210e565b61055d565b610271610580565b604051610200919061218f565b60405160128152602001610200565b6102a061029b36600461222c565b610605565b005b61021160015481565b6102b3610813565b60408051938452602084019290925290820152606001610200565b6102e16102dc3660046122fc565b6108e4565b6040516001600160a01b039091168152602001610200565b610211610307366004612313565b610937565b6102a061095d565b610327610322366004612313565b610970565b604051610200919061235e565b6102e1610a93565b61021161034a3660046122fc565b610ac1565b61021161035d3660046122fc565b610b0a565b6101f3610d4e565b61037d610378366004612313565b610d8c565b60405161020093929190612370565b6102a0610e7c565b6102326103a23660046120e4565b610f13565b6102a0610f20565b6102a06103bd3660046123a1565b610fe2565b5f546102e1906001600160a01b031681565b6002546102329060ff1681565b6103276103ef3660046122fc565b610ffd565b6102116104023660046123bc565b6110ff565b6102a06104153660046123f3565b611148565b610211610428366004612431565b6111c3565b61021161043b3660046122fc565b61144e565b6103276114c8565b6102a0610456366004612313565b611542565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f5160206127d45f395f51905f529161049990612481565b80601f01602080910402602001604051908101604052809291908181526020018280546104c590612481565b80156105105780601f106104e757610100808354040283529160200191610510565b820191905f5260205f20905b8154815290600101906020018083116104f357829003601f168201915b505050505091505090565b5f5f610525610813565b92505050610534610307610a93565b61053e90826124cd565b91505090565b5f3361055181858561157f565b60019150505b92915050565b5f3361056a85828561158c565b6105758585856115f0565b506001949350505050565b60025460609060ff16156105a7576040516306fda65d60e31b815260040160405180910390fd5b60038054806020026020016040519081016040528092919081815260200182805480156105fb57602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116105dd575b5050505050905090565b5f61060e61164d565b805490915060ff600160401b82041615906001600160401b03165f811580156106345750825b90505f826001600160401b0316600114801561064f5750303b155b90508115801561065d575080155b1561067b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156106a557845460ff60401b1916600160401b1785555b5f8690036106c65760405163c1ab6dc160e01b815260040160405180910390fd5b87515f0361070957604051632432186360e21b8152600401610700906020808252600490820152636e616d6560e01b604082015260600190565b60405180910390fd5b8760405160200161071a91906124f7565b60405160208183030381529060405297506107358889611675565b61073e3361168b565b61074a60038888611fed565b506003546001600160401b03811115610765576107656121a1565b60405190808252806020026020018201604052801561078e578160200160208202803683370190505b5080516107a39160049160209091019061204e565b505f80546001600160a01b0319166001600160a01b038b1617905542600155831561080857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b5f5f5f62278d00600154426108289190612515565b6108329190612528565b92506108495f5160206127f45f395f51905f525490565b9150821580610856575081155b15610862575090915f90565b5f546001600160a01b031660405163d23aaed360e01b815260048101859052602481018490526001600160a01b03919091169063d23aaed390604401602060405180830381865afa1580156108b9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108dd9190612547565b9050909192565b6002545f9060ff161561090a576040516306fda65d60e31b815260040160405180910390fd5b6003828154811061091d5761091d61255e565b5f918252602090912001546001600160a01b031692915050565b6001600160a01b03165f9081525f5160206127d45f395f51905f52602052604090205490565b61096561169c565b61096e5f6116ce565b565b606061097a61169c565b6001600160a01b0382166109a157604051634e46966960e11b815260040160405180910390fd5b6109a9610f20565b5f6109b330610937565b9050805f036109d55760405163bb55fd2760e01b815260040160405180910390fd5b6109de81610ffd565b91506109ea308261173e565b6003545f5b81811015610a8b575f848281518110610a0a57610a0a61255e565b602002602001015190505f811115610a53575f60038381548110610a3057610a3061255e565b5f918252602090912001546001600160a01b03169050610a51818884611772565b505b8060048381548110610a6757610a6761255e565b905f5260205f20015f828254610a7d9190612515565b9091555050506001016109ef565b505050919050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6002545f9060ff1615610ae7576040516306fda65d60e31b815260040160405180910390fd5b60048281548110610afa57610afa61255e565b905f5260205f2001549050919050565b6002545f9060ff1615610b30576040516306fda65d60e31b815260040160405180910390fd5b5f610b465f5160206127f45f395f51905f525490565b9050805f03610b5757505f92915050565b5f80546001600160a01b031690505f60048054905090505f826001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bab573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bcf9190612572565b90505f5b82811015610d44575f60038281548110610bef57610bef61255e565b5f918252602082200154600480546001600160a01b0390921693509084908110610c1b57610c1b61255e565b905f5260205f20015490505f811115610d3a5760405163d88e3e3b60e01b81526001600160a01b03838116600483015285811660248301525f919088169063d88e3e3b906044015f60405180830381865afa158015610c7c573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610ca3919081019061258d565b90505f88610cb1848d612634565b610cbb9190612528565b60405163d06ca61f60e01b81529091506001600160a01b0389169063d06ca61f90610cec908490869060040161264b565b602060405180830381865afa158015610d07573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d2b9190612547565b610d35908b6124cd565b995050505b5050600101610bd3565b5050505050919050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f5160206127d45f395f51905f529161049990612481565b6002546060905f90819060ff1615610db7576040516306fda65d60e31b815260040160405180910390fd5b6003545f816001600160401b03811115610dd357610dd36121a1565b604051908082528060200260200182016040528015610dfc578160200160208202803683370190505b5090505f5b82811015610e4a5760048181548110610e1c57610e1c61255e565b905f5260205f200154828281518110610e3757610e3761255e565b6020908102919091010152600101610e01565b505f610e615f5160206127f45f395f51905f525490565b90505f610e6d88610937565b92989197509195509350505050565b610e8461169c565b5f610e8d610a93565b6003549091505f5b81811015610f0e575f60038281548110610eb157610eb161255e565b5f918252602082200154600480546001600160a01b0390921693509084908110610edd57610edd61255e565b905f5260205f20015490505f811115610f0457610f046001600160a01b0383168683611772565b5050600101610e95565b505050565b5f336105518185856115f0565b5f5f5f610f2b610813565b925092509250825f03610f3d57505050565b8015610f5457610f54610f4e610a93565b826117c4565b610f618362278d00612634565b60015f828254610f7191906124cd565b90915550610f7f9050610a93565b6001600160a01b03167f06ef86d1d001d3f4d5d79d6a6647502b17af442209a78bbbafb8867cb5cf6fb7848484600154604051610fd5949392919093845260208401929092526040830152606082015260800190565b60405180910390a2505050565b610fea61169c565b6002805460ff1916911515919091179055565b60025460609060ff1615611024576040516306fda65d60e31b815260040160405180910390fd5b5f61103a5f5160206127f45f395f51905f525490565b6003549091506001600160401b03811115611057576110576121a1565b604051908082528060200260200182016040528015611080578160200160208202803683370190505b509150805f036110905750919050565b5f5b6004548110156110f8575f600482815481106110b0576110b061255e565b905f5260205f20015490508281866110c89190612634565b6110d29190612528565b8483815181106110e4576110e461255e565b602090810291909101015250600101611092565b5050919050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b61115061169c565b5f8190036111715760405163c1ab6dc160e01b815260040160405180910390fd5b61117d60038383611fed565b506111866117f8565b7f3ca096a4c913a6f222a557151d17832dddab787e6ddf59063cab45e15b9a9fac82826040516111b7929190612663565b60405180910390a15050565b5f6111cc61169c565b6001600160a01b0384166111f357604051634e46966960e11b815260040160405180910390fd5b5f80546001600160a01b031690505f816001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561123e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112629190612572565b905061126c610f20565b6003545f805b828110156113af575f6003828154811061128e5761128e61255e565b5f91825260208220015460405163d88e3e3b60e01b81526001600160a01b0391821660048201819052888316602483015293509088169063d88e3e3b906044015f60405180830381865afa1580156112e8573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261130f919081019061258d565b9050866001600160a01b031663d06ca61f8b8b868181106113325761133261255e565b90506020020135836040518363ffffffff1660e01b815260040161135792919061264b565b602060405180830381865afa158015611372573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113969190612547565b6113a090856124cd565b93508260010192505050611272565b505f5160206127f45f395f51905f5254156113d2576113cd8161144e565b6113dd565b683635c9adc5dea000005b94506113e988866117c4565b5f5b86811015611442578787828181106114055761140561255e565b905060200201356004828154811061141f5761141f61255e565b905f5260205f20015f82825461143591906124cd565b90915550506001016113eb565b50505050509392505050565b6002545f9060ff1615611474576040516306fda65d60e31b815260040160405180910390fd5b5f61147d61190c565b9050805f036114975750683635c9adc5dea0000092915050565b806114ad5f5160206127f45f395f51905f525490565b6114b79085612634565b6114c19190612528565b9392505050565b60025460609060ff16156114ef576040516306fda65d60e31b815260040160405180910390fd5b60048054806020026020016040519081016040528092919081815260200182805480156105fb57602002820191905f5260205f20905b815481526020019060010190808311611525575050505050905090565b61154a61169c565b6001600160a01b03811661157357604051631e4fbdf760e01b81525f6004820152602401610700565b61157c816116ce565b50565b610f0e8383836001611add565b5f61159784846110ff565b90505f198110156115ea57818110156115dc57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610700565b6115ea84848484035f611add565b50505050565b6001600160a01b03831661161957604051634b637e8f60e11b81525f6004820152602401610700565b6001600160a01b0382166116425760405163ec442f0560e01b81525f6004820152602401610700565b610f0e838383611bc1565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610557565b61167d611cfa565b6116878282611d1f565b5050565b611693611cfa565b61157c81611d6f565b336116a5610a93565b6001600160a01b03161461096e5760405163118cdaa760e01b8152336004820152602401610700565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6001600160a01b03821661176757604051634b637e8f60e11b81525f6004820152602401610700565b611687825f83611bc1565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610f0e908490611d77565b6001600160a01b0382166117ed5760405163ec442f0560e01b81525f6004820152602401610700565b6116875f8383611bc1565b600354806001600160401b03811115611813576118136121a1565b60405190808252806020026020018201604052801561183c578160200160208202803683370190505b5080516118519160049160209091019061204e565b505f5b81811015611687575f600382815481106118705761187061255e565b5f918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116915081906370a0823190602401602060405180830381865afa1580156118c1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118e59190612547565b600483815481106118f8576118f861255e565b5f9182526020909120015550600101611854565b5f5f61191f5f546001600160a01b031690565b90505f816001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561195e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119829190612572565b6004549091505f5b81811015611ad6575f600482815481106119a6576119a661255e565b905f5260205f20015490505f811115611acd575f600383815481106119cd576119cd61255e565b5f91825260208220015460405163d88e3e3b60e01b81526001600160a01b0391821660048201819052888316602483015293509088169063d88e3e3b906044015f60405180830381865afa158015611a27573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611a4e919081019061258d565b60405163d06ca61f60e01b81529091506001600160a01b0388169063d06ca61f90611a7f908690859060040161264b565b602060405180830381865afa158015611a9a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611abe9190612547565b611ac890896124cd565b975050505b5060010161198a565b5050505090565b5f5160206127d45f395f51905f526001600160a01b038516611b145760405163e602df0560e01b81525f6004820152602401610700565b6001600160a01b038416611b3d57604051634a1406b160e11b81525f6004820152602401610700565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115611bba57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611bb191815260200190565b60405180910390a35b5050505050565b5f5160206127d45f395f51905f526001600160a01b038416611bfb5781816002015f828254611bf091906124cd565b90915550611c6b9050565b6001600160a01b0384165f9081526020829052604090205482811015611c4d5760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610700565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316611c89576002810180548390039055611ca7565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611cec91815260200190565b60405180910390a350505050565b611d02611e4a565b61096e57604051631afcd79f60e31b815260040160405180910390fd5b611d27611cfa565b5f5160206127d45f395f51905f527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611d6084826126f3565b50600481016115ea83826126f3565b61154a611cfa565b5f611dcb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e639092919063ffffffff16565b905080515f1480611deb575080806020019051810190611deb91906127ad565b610f0e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610700565b5f611e5361164d565b54600160401b900460ff16919050565b6060611e7184845f85611e79565b949350505050565b606082471015611eda5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610700565b5f5f866001600160a01b03168587604051611ef591906127c8565b5f6040518083038185875af1925050503d805f8114611f2f576040519150601f19603f3d011682016040523d82523d5f602084013e611f34565b606091505b5091509150611f4587838387611f50565b979650505050505050565b60608315611fbe5782515f03611fb7576001600160a01b0385163b611fb75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610700565b5081611e71565b611e718383815115611fd35781518083602001fd5b8060405162461bcd60e51b8152600401610700919061209b565b828054828255905f5260205f2090810192821561203e579160200282015b8281111561203e5781546001600160a01b0319166001600160a01b0384351617825560209092019160019091019061200b565b5061204a929150612087565b5090565b828054828255905f5260205f2090810192821561203e579160200282015b8281111561203e57825182559160200191906001019061206c565b5b8082111561204a575f8155600101612088565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461157c575f5ffd5b5f5f604083850312156120f5575f5ffd5b8235612100816120d0565b946020939093013593505050565b5f5f5f60608486031215612120575f5ffd5b833561212b816120d0565b9250602084013561213b816120d0565b929592945050506040919091013590565b5f8151808452602084019350602083015f5b828110156121855781516001600160a01b031686526020958601959091019060010161215e565b5093949350505050565b602081525f6114c1602083018461214c565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156121dd576121dd6121a1565b604052919050565b5f5f83601f8401126121f5575f5ffd5b5081356001600160401b0381111561220b575f5ffd5b6020830191508360208260051b8501011115612225575f5ffd5b9250929050565b5f5f5f5f6060858703121561223f575f5ffd5b843561224a816120d0565b935060208501356001600160401b03811115612264575f5ffd5b8501601f81018713612274575f5ffd5b80356001600160401b0381111561228d5761228d6121a1565b6122a0601f8201601f19166020016121b5565b8181528860208385010111156122b4575f5ffd5b816020840160208301375f6020838301015280955050505060408501356001600160401b038111156122e4575f5ffd5b6122f0878288016121e5565b95989497509550505050565b5f6020828403121561230c575f5ffd5b5035919050565b5f60208284031215612323575f5ffd5b81356114c1816120d0565b5f8151808452602084019350602083015f5b82811015612185578151865260209586019590910190600101612340565b602081525f6114c1602083018461232e565b606081525f612382606083018661232e565b60208301949094525060400152919050565b801515811461157c575f5ffd5b5f602082840312156123b1575f5ffd5b81356114c181612394565b5f5f604083850312156123cd575f5ffd5b82356123d8816120d0565b915060208301356123e8816120d0565b809150509250929050565b5f5f60208385031215612404575f5ffd5b82356001600160401b03811115612419575f5ffd5b612425858286016121e5565b90969095509350505050565b5f5f5f60408486031215612443575f5ffd5b833561244e816120d0565b925060208401356001600160401b03811115612468575f5ffd5b612474868287016121e5565b9497909650939450505050565b600181811c9082168061249557607f821691505b6020821081036124b357634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610557576105576124b9565b5f81518060208401855e5f93019283525090919050565b5f61250282846124e0565b6202d4c560ec1b81526003019392505050565b81810381811115610557576105576124b9565b5f8261254257634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612557575f5ffd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215612582575f5ffd5b81516114c1816120d0565b5f6020828403121561259d575f5ffd5b81516001600160401b038111156125b2575f5ffd5b8201601f810184136125c2575f5ffd5b80516001600160401b038111156125db576125db6121a1565b8060051b6125eb602082016121b5565b91825260208184018101929081019087841115612606575f5ffd5b6020850194505b83851015611f455784519250612622836120d0565b8282526020948501949091019061260d565b8082028115828204841417610557576105576124b9565b828152604060208201525f611e71604083018461214c565b602080825281018290525f8360408301825b858110156126a5578235612688816120d0565b6001600160a01b0316825260209283019290910190600101612675565b5095945050505050565b601f821115610f0e57805f5260205f20601f840160051c810160208510156126d45750805b601f840160051c820191505b81811015611bba575f81556001016126e0565b81516001600160401b0381111561270c5761270c6121a1565b6127208161271a8454612481565b846126af565b6020601f821160018114612752575f831561273b5750848201515b5f19600385901b1c1916600184901b178455611bba565b5f84815260208120601f198516915b828110156127815787850151825560209485019460019092019101612761565b508482101561279e57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f602082840312156127bd575f5ffd5b81516114c181612394565b5f6114c182846124e056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02a2646970667358221220cb19986944f508eb69ba00ae534455059cf7526c67241b26a7c16baa945a70b564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2849 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9257FA07 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xD2C725E0 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDE836EBD GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE54EF9A0 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xEC5975C6 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x448 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xD2C725E0 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xD410AD7D EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xDE41691C EQ PUSH2 0x407 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xB4B93C8C EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xBA6BA385 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x3C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x9257FA07 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xA131D436 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xA7C7FDEB EQ PUSH2 0x38C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5483067D GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x8E73F1B4 EQ PUSH2 0x33C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5483067D EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x55917EBE EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x67CCDF38 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x273CBAA0 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x3A105CFB EQ PUSH2 0x28D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x90318FB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x242 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x209B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH2 0x211 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x210E JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH2 0x271 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x218F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x2313 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x95D JUMP JUMPDEST PUSH2 0x327 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x2313 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x235E JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0xD4E JUMP JUMPDEST PUSH2 0x37D PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x2313 JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2370 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x232 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0xF13 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x23A1 JUMP JUMPDEST PUSH2 0xFE2 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x2E1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x232 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x327 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST PUSH2 0x211 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x23F3 JUMP JUMPDEST PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0x144E JUMP JUMPDEST PUSH2 0x327 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x2313 JUMP JUMPDEST PUSH2 0x1542 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 PUSH2 0x499 SWAP1 PUSH2 0x2481 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C5 SWAP1 PUSH2 0x2481 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x510 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x510 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x525 PUSH2 0x813 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x534 PUSH2 0x307 PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x53E SWAP1 DUP3 PUSH2 0x24CD JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x551 DUP2 DUP6 DUP6 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x56A DUP6 DUP3 DUP6 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x575 DUP6 DUP6 DUP6 PUSH2 0x15F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DD JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x60E PUSH2 0x164D JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x634 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x64F JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x65D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x6A5 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH0 DUP7 SWAP1 SUB PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH0 SUB PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH4 0x24321863 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x6E616D65 PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP8 POP PUSH2 0x735 DUP9 DUP10 PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x73E CALLER PUSH2 0x168B JUMP JUMPDEST PUSH2 0x74A PUSH1 0x3 DUP9 DUP9 PUSH2 0x1FED JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x765 JUMPI PUSH2 0x765 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x78E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x7A3 SWAP2 PUSH1 0x4 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x1 SSTORE DUP4 ISZERO PUSH2 0x808 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH3 0x278D00 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x2515 JUMP JUMPDEST PUSH2 0x832 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST SWAP3 POP PUSH2 0x849 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP2 POP DUP3 ISZERO DUP1 PUSH2 0x856 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x862 JUMPI POP SWAP1 SWAP2 PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH4 0xD23AAED3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xD23AAED3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x91D JUMPI PUSH2 0x91D PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x965 PUSH2 0x169C JUMP JUMPDEST PUSH2 0x96E PUSH0 PUSH2 0x16CE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x97A PUSH2 0x169C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A9 PUSH2 0xF20 JUMP JUMPDEST PUSH0 PUSH2 0x9B3 ADDRESS PUSH2 0x937 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DE DUP2 PUSH2 0xFFD JUMP JUMPDEST SWAP2 POP PUSH2 0x9EA ADDRESS DUP3 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA0A JUMPI PUSH2 0xA0A PUSH2 0x255E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA30 JUMPI PUSH2 0xA30 PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0xA51 DUP2 DUP9 DUP5 PUSH2 0x1772 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA67 JUMPI PUSH2 0xA67 PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA7D SWAP2 SWAP1 PUSH2 0x2515 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 ADD PUSH2 0x9EF JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAFA JUMPI PUSH2 0xAFA PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB46 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0xB57 JUMPI POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FC8CEF3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAB JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBCF SWAP2 SWAP1 PUSH2 0x2572 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD44 JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBEF JUMPI PUSH2 0xBEF PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xC1B JUMPI PUSH2 0xC1B PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD88E3E3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH0 SWAP2 SWAP1 DUP9 AND SWAP1 PUSH4 0xD88E3E3B SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCA3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x258D JUMP JUMPDEST SWAP1 POP PUSH0 DUP9 PUSH2 0xCB1 DUP5 DUP14 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0xCEC SWAP1 DUP5 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x264B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD07 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0xD35 SWAP1 DUP12 PUSH2 0x24CD JUMP JUMPDEST SWAP10 POP POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xBD3 JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 PUSH2 0x499 SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xDD3 JUMPI PUSH2 0xDD3 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDFC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE1C JUMPI PUSH2 0xE1C PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE37 JUMPI PUSH2 0xE37 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xE01 JUMP JUMPDEST POP PUSH0 PUSH2 0xE61 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE6D DUP9 PUSH2 0x937 JUMP JUMPDEST SWAP3 SWAP9 SWAP2 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xE84 PUSH2 0x169C JUMP JUMPDEST PUSH0 PUSH2 0xE8D PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF0E JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEB1 JUMPI PUSH2 0xEB1 PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xEDD JUMPI PUSH2 0xEDD PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xF04 JUMPI PUSH2 0xF04 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP7 DUP4 PUSH2 0x1772 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xE95 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x551 DUP2 DUP6 DUP6 PUSH2 0x15F0 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0xF2B PUSH2 0x813 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH0 SUB PUSH2 0xF3D JUMPI POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF54 JUMPI PUSH2 0xF54 PUSH2 0xF4E PUSH2 0xA93 JUMP JUMPDEST DUP3 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0xF61 DUP4 PUSH3 0x278D00 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x24CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF7F SWAP1 POP PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6EF86D1D001D3F4D5D79D6A6647502B17AF442209A78BBBAFB8867CB5CF6FB7 DUP5 DUP5 DUP5 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xFD5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xFEA PUSH2 0x169C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x103A PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1057 JUMPI PUSH2 0x1057 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1080 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP1 PUSH0 SUB PUSH2 0x1090 JUMPI POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x10F8 JUMPI PUSH0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10B0 JUMPI PUSH2 0x10B0 PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP3 DUP2 DUP7 PUSH2 0x10C8 SWAP2 SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x10D2 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10E4 JUMPI PUSH2 0x10E4 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1092 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1150 PUSH2 0x169C JUMP JUMPDEST PUSH0 DUP2 SWAP1 SUB PUSH2 0x1171 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x117D PUSH1 0x3 DUP4 DUP4 PUSH2 0x1FED JUMP JUMPDEST POP PUSH2 0x1186 PUSH2 0x17F8 JUMP JUMPDEST PUSH32 0x3CA096A4C913A6F222A557151D17832DDDAB787E6DDF59063CAB45E15B9A9FAC DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11B7 SWAP3 SWAP2 SWAP1 PUSH2 0x2663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11CC PUSH2 0x169C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FC8CEF3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x2572 JUMP JUMPDEST SWAP1 POP PUSH2 0x126C PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13AF JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x128E JUMPI PUSH2 0x128E PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD88E3E3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE DUP9 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP4 POP SWAP1 DUP9 AND SWAP1 PUSH4 0xD88E3E3B SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x130F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x258D JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP12 DUP12 DUP7 DUP2 DUP2 LT PUSH2 0x1332 JUMPI PUSH2 0x1332 PUSH2 0x255E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1357 SWAP3 SWAP2 SWAP1 PUSH2 0x264B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1372 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x13A0 SWAP1 DUP6 PUSH2 0x24CD JUMP JUMPDEST SWAP4 POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0x1272 JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13CD DUP2 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x13DD JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 JUMPDEST SWAP5 POP PUSH2 0x13E9 DUP9 DUP7 PUSH2 0x17C4 JUMP JUMPDEST PUSH0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1442 JUMPI DUP8 DUP8 DUP3 DUP2 DUP2 LT PUSH2 0x1405 JUMPI PUSH2 0x1405 PUSH2 0x255E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x141F JUMPI PUSH2 0x141F PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x24CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x13EB JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1474 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x147D PUSH2 0x190C JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x1497 JUMPI POP PUSH9 0x3635C9ADC5DEA00000 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x14AD PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14B7 SWAP1 DUP6 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x14C1 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1525 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x154A PUSH2 0x169C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1573 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x157C DUP2 PUSH2 0x16CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF0E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1ADD JUMP JUMPDEST PUSH0 PUSH2 0x1597 DUP5 DUP5 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0x15EA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x15DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x15EA DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1ADD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1619 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1642 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH2 0xF0E DUP4 DUP4 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x557 JUMP JUMPDEST PUSH2 0x167D PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x1687 DUP3 DUP3 PUSH2 0x1D1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1693 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x157C DUP2 PUSH2 0x1D6F JUMP JUMPDEST CALLER PUSH2 0x16A5 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1767 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x1687 DUP3 PUSH0 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF0E SWAP1 DUP5 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17ED JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x1687 PUSH0 DUP4 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1813 JUMPI PUSH2 0x1813 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x183C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1851 SWAP2 PUSH1 0x4 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1687 JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1870 JUMPI PUSH2 0x1870 PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18C1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18E5 SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18F8 JUMPI PUSH2 0x18F8 PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE POP PUSH1 0x1 ADD PUSH2 0x1854 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x191F PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FC8CEF3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x195E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1982 SWAP2 SWAP1 PUSH2 0x2572 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AD6 JUMPI PUSH0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19A6 JUMPI PUSH2 0x19A6 PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1ACD JUMPI PUSH0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x19CD JUMPI PUSH2 0x19CD PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD88E3E3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE DUP9 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP4 POP SWAP1 DUP9 AND SWAP1 PUSH4 0xD88E3E3B SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A27 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1A4E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x258D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x1A7F SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x264B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A9A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ABE SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x1AC8 SWAP1 DUP10 PUSH2 0x24CD JUMP JUMPDEST SWAP8 POP POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x198A JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1B14 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1B3D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x1BBA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1BB1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1BFB JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1BF0 SWAP2 SWAP1 PUSH2 0x24CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1C6B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x1C4D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C89 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CEC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x1D02 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D27 PUSH2 0x1CFA JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x1D60 DUP5 DUP3 PUSH2 0x26F3 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x15EA DUP4 DUP3 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x154A PUSH2 0x1CFA JUMP JUMPDEST PUSH0 PUSH2 0x1DCB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ DUP1 PUSH2 0x1DEB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1DEB SWAP2 SWAP1 PUSH2 0x27AD JUMP JUMPDEST PUSH2 0xF0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x700 JUMP JUMPDEST PUSH0 PUSH2 0x1E53 PUSH2 0x164D JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E71 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x1E79 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x700 JUMP JUMPDEST PUSH0 PUSH0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1EF5 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1F2F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F45 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1F50 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FBE JUMPI DUP3 MLOAD PUSH0 SUB PUSH2 0x1FB7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1FB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x700 JUMP JUMPDEST POP DUP2 PUSH2 0x1E71 JUMP JUMPDEST PUSH2 0x1E71 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1FD3 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x209B JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x203E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x203E JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x200B JUMP JUMPDEST POP PUSH2 0x204A SWAP3 SWAP2 POP PUSH2 0x2087 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x203E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x203E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x206C JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x204A JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x157C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2100 DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2120 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x212B DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x213B DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2185 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x215E JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x14C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x214C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x21DD JUMPI PUSH2 0x21DD PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x21F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x220B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2225 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x223F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x224A DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2264 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2274 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x228D JUMPI PUSH2 0x228D PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x22A0 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x21B5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP9 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x22B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x22E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x22F0 DUP8 DUP3 DUP9 ADD PUSH2 0x21E5 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x230C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2323 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14C1 DUP2 PUSH2 0x20D0 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2185 JUMPI DUP2 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x14C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH0 PUSH2 0x2382 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x157C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14C1 DUP2 PUSH2 0x2394 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x23D8 DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x23E8 DUP2 PUSH2 0x20D0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2404 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2419 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2425 DUP6 DUP3 DUP7 ADD PUSH2 0x21E5 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2443 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x244E DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2468 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2474 DUP7 DUP3 DUP8 ADD PUSH2 0x21E5 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2495 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x24B9 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2502 DUP3 DUP5 PUSH2 0x24E0 JUMP JUMPDEST PUSH3 0x2D4C5 PUSH1 0xEC SHL DUP2 MSTORE PUSH1 0x3 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x24B9 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2542 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2557 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2582 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14C1 DUP2 PUSH2 0x20D0 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x259D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25B2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x25C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25DB JUMPI PUSH2 0x25DB PUSH2 0x21A1 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x25EB PUSH1 0x20 DUP3 ADD PUSH2 0x21B5 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 DUP8 DUP5 GT ISZERO PUSH2 0x2606 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1F45 JUMPI DUP5 MLOAD SWAP3 POP PUSH2 0x2622 DUP4 PUSH2 0x20D0 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x260D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x24B9 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1E71 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 DUP4 PUSH1 0x40 DUP4 ADD DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x26A5 JUMPI DUP3 CALLDATALOAD PUSH2 0x2688 DUP2 PUSH2 0x20D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2675 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xF0E JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x26D4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BBA JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x26E0 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x270C JUMPI PUSH2 0x270C PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x2720 DUP2 PUSH2 0x271A DUP5 SLOAD PUSH2 0x2481 JUMP JUMPDEST DUP5 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2752 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x273B JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1BBA JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2781 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2761 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x279E JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14C1 DUP2 PUSH2 0x2394 JUMP JUMPDEST PUSH0 PUSH2 0x14C1 DUP3 DUP5 PUSH2 0x24E0 JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE RJUMPI 0xF47D 0xB1 SWAP14 TLOAD RJUMP 0x4600 ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE STOP MSTORE 0xC6 ORIGIN SELFBALANCE RJUMPI 0xF47D 0xB1 SWAP14 TLOAD RJUMP 0x4600 ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE MUL LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB NOT SWAP9 PUSH10 0x44F508EB69BA00AE5344 SSTORE SDIV SWAP13 0xF7 MSTORE PUSH13 0x67241B26A7C16BAA945A70B564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "584:16806:13:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__ERC20_init_530": {
									"entryPoint": 5749,
									"id": 530,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_558": {
									"entryPoint": 7455,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 5771,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 7535,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_approve_1030": {
									"entryPoint": 6877,
									"id": 1030,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_962": {
									"entryPoint": 5503,
									"id": 962,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_944": {
									"entryPoint": 5950,
									"id": 944,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1520": {
									"entryPoint": 7543,
									"id": 1520,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 7418,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 5788,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_factory_3462": {
									"entryPoint": null,
									"id": 3462,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getERC20Storage_514": {
									"entryPoint": null,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_461": {
									"entryPoint": 5709,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 7754,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_911": {
									"entryPoint": 6084,
									"id": 911,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1927": {
									"entryPoint": null,
									"id": 1927,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1898": {
									"entryPoint": null,
									"id": 1898,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_1078": {
									"entryPoint": 5516,
									"id": 1078,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_totalReservedETH_3586": {
									"entryPoint": 6412,
									"id": 3586,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 5838,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_786": {
									"entryPoint": 5616,
									"id": 786,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateRebalanceReserve_3513": {
									"entryPoint": 6136,
									"id": 3513,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_878": {
									"entryPoint": 7105,
									"id": 878,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_683": {
									"entryPoint": 4351,
									"id": 683,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_707": {
									"entryPoint": 1348,
									"id": 707,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_635": {
									"entryPoint": 2359,
									"id": 635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_3010": {
									"entryPoint": 2416,
									"id": 3010,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calFee_3377": {
									"entryPoint": 2067,
									"id": 3377,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@calculateShareETH_3197": {
									"entryPoint": 2826,
									"id": 3197,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateShareLP_3100": {
									"entryPoint": 5198,
									"id": 3100,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateShareTokens_3260": {
									"entryPoint": 4093,
									"id": 3260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_599": {
									"entryPoint": null,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@distMgmtFee_3067": {
									"entryPoint": 3872,
									"id": 3067,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@factory_2559": {
									"entryPoint": null,
									"id": 2559,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_1723": {
									"entryPoint": 7801,
									"id": 1723,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1659": {
									"entryPoint": 7779,
									"id": 1659,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getTokenAddress_3392": {
									"entryPoint": 2276,
									"id": 3392,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenAndUserBal_3329": {
									"entryPoint": 3468,
									"id": 3329,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@getTokenList_3419": {
									"entryPoint": 1408,
									"id": 3419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenReserve_3407": {
									"entryPoint": 2753,
									"id": 3407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokensReserve_3431": {
									"entryPoint": 5320,
									"id": 3431,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalMgmtFee_3450": {
									"entryPoint": 1307,
									"id": 3450,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2696": {
									"entryPoint": 1541,
									"id": 2696,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@isContract_1587": {
									"entryPoint": null,
									"id": 1587,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastAccruedAt_2562": {
									"entryPoint": null,
									"id": 2562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_2906": {
									"entryPoint": 4547,
									"id": 2906,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@name_574": {
									"entryPoint": 1115,
									"id": 574,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 2707,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reentrancyGuardEntered_2565": {
									"entryPoint": null,
									"id": 2565,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_136": {
									"entryPoint": 2397,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_1226": {
									"entryPoint": 6002,
									"id": 1226,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setReentrancyGuardStatus_3023": {
									"entryPoint": 4066,
									"id": 3023,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_590": {
									"entryPoint": 3406,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_739": {
									"entryPoint": 1373,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 5442,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokensToOwner_2751": {
									"entryPoint": 3708,
									"id": 2751,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transfer_659": {
									"entryPoint": 3859,
									"id": 659,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateTokens_2780": {
									"entryPoint": 4424,
									"id": 2780,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1854": {
									"entryPoint": 8016,
									"id": 1854,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 8677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 9586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 9265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 8748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 9203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 9613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 9121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 8524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 9006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 9440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_d99d682fc356fa21b92bd2fb80417dfa6820fd52fa032cb0ed3383e56770a7d7__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9072,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9803,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 9903,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9401,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9566,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 9108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18879:14",
										"nodeType": "YulBlock",
										"src": "0:18879:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:14",
													"nodeType": "YulBlock",
													"src": "135:297:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:14",
																		"nodeType": "YulLiteral",
																		"src": "163:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:14"
																},
																"nativeSrc": "145:21:14",
																"nodeType": "YulFunctionCall",
																"src": "145:21:14"
															},
															"nativeSrc": "145:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:14"
														},
														{
															"nativeSrc": "175:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:14"
																},
																"nativeSrc": "189:13:14",
																"nodeType": "YulFunctionCall",
																"src": "189:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:14",
																	"nodeType": "YulTypedName",
																	"src": "179:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:14",
																				"nodeType": "YulLiteral",
																				"src": "233:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:14"
																		},
																		"nativeSrc": "218:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:14"
																},
																"nativeSrc": "211:34:14",
																"nodeType": "YulFunctionCall",
																"src": "211:34:14"
															},
															"nativeSrc": "211:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:14",
																				"nodeType": "YulLiteral",
																				"src": "275:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:14"
																		},
																		"nativeSrc": "260:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:14",
																				"nodeType": "YulLiteral",
																				"src": "292:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:14"
																		},
																		"nativeSrc": "280:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:14"
																},
																"nativeSrc": "254:50:14",
																"nodeType": "YulFunctionCall",
																"src": "254:50:14"
															},
															"nativeSrc": "254:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:14"
																				},
																				"nativeSrc": "324:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:14",
																				"nodeType": "YulLiteral",
																				"src": "348:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:14"
																		},
																		"nativeSrc": "320:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:14",
																		"nodeType": "YulLiteral",
																		"src": "353:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:14"
																},
																"nativeSrc": "313:42:14",
																"nodeType": "YulFunctionCall",
																"src": "313:42:14"
															},
															"nativeSrc": "313:42:14",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:14"
														},
														{
															"nativeSrc": "364:62:14",
															"nodeType": "YulAssignment",
															"src": "364:62:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:14",
																								"nodeType": "YulLiteral",
																								"src": "407:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:14"
																						},
																						"nativeSrc": "395:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:14",
																								"nodeType": "YulLiteral",
																								"src": "416:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:14"
																						},
																						"nativeSrc": "412:7:14",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:14"
																				},
																				"nativeSrc": "391:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:14"
																		},
																		"nativeSrc": "376:45:14",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:14",
																		"nodeType": "YulLiteral",
																		"src": "423:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:14"
																},
																"nativeSrc": "372:54:14",
																"nodeType": "YulFunctionCall",
																"src": "372:54:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:14",
														"nodeType": "YulTypedName",
														"src": "104:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:14",
														"nodeType": "YulTypedName",
														"src": "115:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:14",
														"nodeType": "YulTypedName",
														"src": "126:4:14",
														"type": ""
													}
												],
												"src": "14:418:14"
											},
											{
												"body": {
													"nativeSrc": "538:76:14",
													"nodeType": "YulBlock",
													"src": "538:76:14",
													"statements": [
														{
															"nativeSrc": "548:26:14",
															"nodeType": "YulAssignment",
															"src": "548:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "560:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "560:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "571:2:14",
																		"nodeType": "YulLiteral",
																		"src": "571:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "556:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "556:3:14"
																},
																"nativeSrc": "556:18:14",
																"nodeType": "YulFunctionCall",
																"src": "556:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "548:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "548:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "590:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "601:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "601:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "583:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "583:6:14"
																},
																"nativeSrc": "583:25:14",
																"nodeType": "YulFunctionCall",
																"src": "583:25:14"
															},
															"nativeSrc": "583:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "583:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "437:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "507:9:14",
														"nodeType": "YulTypedName",
														"src": "507:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "518:6:14",
														"nodeType": "YulTypedName",
														"src": "518:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "529:4:14",
														"nodeType": "YulTypedName",
														"src": "529:4:14",
														"type": ""
													}
												],
												"src": "437:177:14"
											},
											{
												"body": {
													"nativeSrc": "664:86:14",
													"nodeType": "YulBlock",
													"src": "664:86:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "728:16:14",
																"nodeType": "YulBlock",
																"src": "728:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "737:1:14",
																					"nodeType": "YulLiteral",
																					"src": "737:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "740:1:14",
																					"nodeType": "YulLiteral",
																					"src": "740:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "730:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "730:6:14"
																			},
																			"nativeSrc": "730:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "730:12:14"
																		},
																		"nativeSrc": "730:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "730:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "687:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "687:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "698:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "698:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "713:3:14",
																										"nodeType": "YulLiteral",
																										"src": "713:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "718:1:14",
																										"nodeType": "YulLiteral",
																										"src": "718:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "709:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "709:3:14"
																								},
																								"nativeSrc": "709:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "709:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "722:1:14",
																								"nodeType": "YulLiteral",
																								"src": "722:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "705:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "705:3:14"
																						},
																						"nativeSrc": "705:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "705:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "694:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "694:3:14"
																				},
																				"nativeSrc": "694:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "694:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "684:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "684:2:14"
																		},
																		"nativeSrc": "684:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "684:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "677:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "677:6:14"
																},
																"nativeSrc": "677:50:14",
																"nodeType": "YulFunctionCall",
																"src": "677:50:14"
															},
															"nativeSrc": "674:70:14",
															"nodeType": "YulIf",
															"src": "674:70:14"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "619:131:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "653:5:14",
														"nodeType": "YulTypedName",
														"src": "653:5:14",
														"type": ""
													}
												],
												"src": "619:131:14"
											},
											{
												"body": {
													"nativeSrc": "842:280:14",
													"nodeType": "YulBlock",
													"src": "842:280:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "888:16:14",
																"nodeType": "YulBlock",
																"src": "888:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "897:1:14",
																					"nodeType": "YulLiteral",
																					"src": "897:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "900:1:14",
																					"nodeType": "YulLiteral",
																					"src": "900:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "890:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "890:6:14"
																			},
																			"nativeSrc": "890:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "890:12:14"
																		},
																		"nativeSrc": "890:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "890:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "863:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "863:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "872:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "872:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "859:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:14"
																		},
																		"nativeSrc": "859:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "859:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "884:2:14",
																		"nodeType": "YulLiteral",
																		"src": "884:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "855:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "855:3:14"
																},
																"nativeSrc": "855:32:14",
																"nodeType": "YulFunctionCall",
																"src": "855:32:14"
															},
															"nativeSrc": "852:52:14",
															"nodeType": "YulIf",
															"src": "852:52:14"
														},
														{
															"nativeSrc": "913:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "913:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "939:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "939:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "926:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "926:12:14"
																},
																"nativeSrc": "926:23:14",
																"nodeType": "YulFunctionCall",
																"src": "926:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "917:5:14",
																	"nodeType": "YulTypedName",
																	"src": "917:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "983:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "958:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "958:24:14"
																},
																"nativeSrc": "958:31:14",
																"nodeType": "YulFunctionCall",
																"src": "958:31:14"
															},
															"nativeSrc": "958:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "958:31:14"
														},
														{
															"nativeSrc": "998:15:14",
															"nodeType": "YulAssignment",
															"src": "998:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "1008:5:14",
																"nodeType": "YulIdentifier",
																"src": "1008:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "998:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "998:6:14"
																}
															]
														},
														{
															"nativeSrc": "1022:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1022:16:14",
															"value": {
																"kind": "number",
																"nativeSrc": "1037:1:14",
																"nodeType": "YulLiteral",
																"src": "1037:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1026:7:14",
																	"nodeType": "YulTypedName",
																	"src": "1026:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1047:43:14",
															"nodeType": "YulAssignment",
															"src": "1047:43:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1075:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1075:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1086:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1086:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1071:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1071:3:14"
																		},
																		"nativeSrc": "1071:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1071:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1058:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1058:12:14"
																},
																"nativeSrc": "1058:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1058:32:14"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1047:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1047:7:14"
																}
															]
														},
														{
															"nativeSrc": "1099:17:14",
															"nodeType": "YulAssignment",
															"src": "1099:17:14",
															"value": {
																"name": "value_1",
																"nativeSrc": "1109:7:14",
																"nodeType": "YulIdentifier",
																"src": "1109:7:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1099:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1099:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "755:367:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "800:9:14",
														"nodeType": "YulTypedName",
														"src": "800:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "811:7:14",
														"nodeType": "YulTypedName",
														"src": "811:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "823:6:14",
														"nodeType": "YulTypedName",
														"src": "823:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "831:6:14",
														"nodeType": "YulTypedName",
														"src": "831:6:14",
														"type": ""
													}
												],
												"src": "755:367:14"
											},
											{
												"body": {
													"nativeSrc": "1222:92:14",
													"nodeType": "YulBlock",
													"src": "1222:92:14",
													"statements": [
														{
															"nativeSrc": "1232:26:14",
															"nodeType": "YulAssignment",
															"src": "1232:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1244:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1244:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1255:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1255:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1240:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1240:3:14"
																},
																"nativeSrc": "1240:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1240:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1232:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1232:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1274:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1274:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1299:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1299:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1292:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "1292:6:14"
																				},
																				"nativeSrc": "1292:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1292:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1285:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1285:6:14"
																		},
																		"nativeSrc": "1285:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1285:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1267:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1267:6:14"
																},
																"nativeSrc": "1267:41:14",
																"nodeType": "YulFunctionCall",
																"src": "1267:41:14"
															},
															"nativeSrc": "1267:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "1267:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1127:187:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1191:9:14",
														"nodeType": "YulTypedName",
														"src": "1191:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1202:6:14",
														"nodeType": "YulTypedName",
														"src": "1202:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1213:4:14",
														"nodeType": "YulTypedName",
														"src": "1213:4:14",
														"type": ""
													}
												],
												"src": "1127:187:14"
											},
											{
												"body": {
													"nativeSrc": "1423:404:14",
													"nodeType": "YulBlock",
													"src": "1423:404:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1469:16:14",
																"nodeType": "YulBlock",
																"src": "1469:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1478:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1478:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1481:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1471:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1471:6:14"
																			},
																			"nativeSrc": "1471:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1471:12:14"
																		},
																		"nativeSrc": "1471:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1471:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1444:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1444:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1453:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1453:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1440:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:14"
																		},
																		"nativeSrc": "1440:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1440:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1465:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1465:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1436:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1436:3:14"
																},
																"nativeSrc": "1436:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1436:32:14"
															},
															"nativeSrc": "1433:52:14",
															"nodeType": "YulIf",
															"src": "1433:52:14"
														},
														{
															"nativeSrc": "1494:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1494:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1520:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1520:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1507:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1507:12:14"
																},
																"nativeSrc": "1507:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1507:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1498:5:14",
																	"nodeType": "YulTypedName",
																	"src": "1498:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1564:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1564:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1539:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "1539:24:14"
																},
																"nativeSrc": "1539:31:14",
																"nodeType": "YulFunctionCall",
																"src": "1539:31:14"
															},
															"nativeSrc": "1539:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "1539:31:14"
														},
														{
															"nativeSrc": "1579:15:14",
															"nodeType": "YulAssignment",
															"src": "1579:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "1589:5:14",
																"nodeType": "YulIdentifier",
																"src": "1589:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1579:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1579:6:14"
																}
															]
														},
														{
															"nativeSrc": "1603:47:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1603:47:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1635:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1635:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1646:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1646:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1631:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1631:3:14"
																		},
																		"nativeSrc": "1631:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1618:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1618:12:14"
																},
																"nativeSrc": "1618:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1618:32:14"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1607:7:14",
																	"nodeType": "YulTypedName",
																	"src": "1607:7:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "1684:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "1684:7:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1659:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "1659:24:14"
																},
																"nativeSrc": "1659:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1659:33:14"
															},
															"nativeSrc": "1659:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1659:33:14"
														},
														{
															"nativeSrc": "1701:17:14",
															"nodeType": "YulAssignment",
															"src": "1701:17:14",
															"value": {
																"name": "value_1",
																"nativeSrc": "1711:7:14",
																"nodeType": "YulIdentifier",
																"src": "1711:7:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1701:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1701:6:14"
																}
															]
														},
														{
															"nativeSrc": "1727:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1727:16:14",
															"value": {
																"kind": "number",
																"nativeSrc": "1742:1:14",
																"nodeType": "YulLiteral",
																"src": "1742:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "1731:7:14",
																	"nodeType": "YulTypedName",
																	"src": "1731:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1752:43:14",
															"nodeType": "YulAssignment",
															"src": "1752:43:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1780:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1780:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1791:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1791:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1776:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1776:3:14"
																		},
																		"nativeSrc": "1776:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1776:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1763:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1763:12:14"
																},
																"nativeSrc": "1763:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1763:32:14"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "1752:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1752:7:14"
																}
															]
														},
														{
															"nativeSrc": "1804:17:14",
															"nodeType": "YulAssignment",
															"src": "1804:17:14",
															"value": {
																"name": "value_2",
																"nativeSrc": "1814:7:14",
																"nodeType": "YulIdentifier",
																"src": "1814:7:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1804:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1804:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1319:508:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1373:9:14",
														"nodeType": "YulTypedName",
														"src": "1373:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1384:7:14",
														"nodeType": "YulTypedName",
														"src": "1384:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1396:6:14",
														"nodeType": "YulTypedName",
														"src": "1396:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1404:6:14",
														"nodeType": "YulTypedName",
														"src": "1404:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1412:6:14",
														"nodeType": "YulTypedName",
														"src": "1412:6:14",
														"type": ""
													}
												],
												"src": "1319:508:14"
											},
											{
												"body": {
													"nativeSrc": "1893:385:14",
													"nodeType": "YulBlock",
													"src": "1893:385:14",
													"statements": [
														{
															"nativeSrc": "1903:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1903:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1923:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1923:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1917:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1917:5:14"
																},
																"nativeSrc": "1917:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1917:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1907:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1907:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1945:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1945:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1950:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1950:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1938:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:14"
																},
																"nativeSrc": "1938:19:14",
																"nodeType": "YulFunctionCall",
																"src": "1938:19:14"
															},
															"nativeSrc": "1938:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "1938:19:14"
														},
														{
															"nativeSrc": "1966:21:14",
															"nodeType": "YulAssignment",
															"src": "1966:21:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1977:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1977:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1982:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1973:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1973:3:14"
																},
																"nativeSrc": "1973:14:14",
																"nodeType": "YulFunctionCall",
																"src": "1973:14:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1966:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1966:3:14"
																}
															]
														},
														{
															"nativeSrc": "1996:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1996:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2014:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2014:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2021:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2021:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2010:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2010:3:14"
																},
																"nativeSrc": "2010:16:14",
																"nodeType": "YulFunctionCall",
																"src": "2010:16:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2000:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2000:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2035:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2035:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "2044:1:14",
																"nodeType": "YulLiteral",
																"src": "2044:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2039:1:14",
																	"nodeType": "YulTypedName",
																	"src": "2039:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2103:150:14",
																"nodeType": "YulBlock",
																"src": "2103:150:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2124:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2124:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "2139:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "2139:6:14"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "2133:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "2133:5:14"
																							},
																							"nativeSrc": "2133:13:14",
																							"nodeType": "YulFunctionCall",
																							"src": "2133:13:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2156:3:14",
																											"nodeType": "YulLiteral",
																											"src": "2156:3:14",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2161:1:14",
																											"nodeType": "YulLiteral",
																											"src": "2161:1:14",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2152:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "2152:3:14"
																									},
																									"nativeSrc": "2152:11:14",
																									"nodeType": "YulFunctionCall",
																									"src": "2152:11:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2165:1:14",
																									"nodeType": "YulLiteral",
																									"src": "2165:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "2148:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "2148:3:14"
																							},
																							"nativeSrc": "2148:19:14",
																							"nodeType": "YulFunctionCall",
																							"src": "2148:19:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2129:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "2129:3:14"
																					},
																					"nativeSrc": "2129:39:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2129:39:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2117:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2117:6:14"
																			},
																			"nativeSrc": "2117:52:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2117:52:14"
																		},
																		"nativeSrc": "2117:52:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2117:52:14"
																	},
																	{
																		"nativeSrc": "2182:21:14",
																		"nodeType": "YulAssignment",
																		"src": "2182:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2193:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2193:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:4:14",
																					"nodeType": "YulLiteral",
																					"src": "2198:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2189:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2189:3:14"
																			},
																			"nativeSrc": "2189:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2189:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2182:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2182:3:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2216:27:14",
																		"nodeType": "YulAssignment",
																		"src": "2216:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2230:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "2230:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2238:4:14",
																					"nodeType": "YulLiteral",
																					"src": "2238:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2226:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2226:3:14"
																			},
																			"nativeSrc": "2226:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2216:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2216:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2065:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2065:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2068:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2068:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2062:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2062:2:14"
																},
																"nativeSrc": "2062:13:14",
																"nodeType": "YulFunctionCall",
																"src": "2062:13:14"
															},
															"nativeSrc": "2054:199:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2076:18:14",
																"nodeType": "YulBlock",
																"src": "2076:18:14",
																"statements": [
																	{
																		"nativeSrc": "2078:14:14",
																		"nodeType": "YulAssignment",
																		"src": "2078:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2087:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "2087:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2090:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2090:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2083:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2083:3:14"
																			},
																			"nativeSrc": "2083:9:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2083:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2078:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "2078:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2058:3:14",
																"nodeType": "YulBlock",
																"src": "2058:3:14",
																"statements": []
															},
															"src": "2054:199:14"
														},
														{
															"nativeSrc": "2262:10:14",
															"nodeType": "YulAssignment",
															"src": "2262:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "2269:3:14",
																"nodeType": "YulIdentifier",
																"src": "2269:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2262:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2262:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_address_dyn",
												"nativeSrc": "1832:446:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1870:5:14",
														"nodeType": "YulTypedName",
														"src": "1870:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1877:3:14",
														"nodeType": "YulTypedName",
														"src": "1877:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1885:3:14",
														"nodeType": "YulTypedName",
														"src": "1885:3:14",
														"type": ""
													}
												],
												"src": "1832:446:14"
											},
											{
												"body": {
													"nativeSrc": "2434:110:14",
													"nodeType": "YulBlock",
													"src": "2434:110:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2451:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2451:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2462:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2462:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2444:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2444:6:14"
																},
																"nativeSrc": "2444:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2444:21:14"
															},
															"nativeSrc": "2444:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "2444:21:14"
														},
														{
															"nativeSrc": "2474:64:14",
															"nodeType": "YulAssignment",
															"src": "2474:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2511:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2523:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2523:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2534:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2534:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2519:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2519:3:14"
																		},
																		"nativeSrc": "2519:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2519:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nativeSrc": "2482:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "2482:28:14"
																},
																"nativeSrc": "2482:56:14",
																"nodeType": "YulFunctionCall",
																"src": "2482:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2474:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2474:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2283:261:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:14",
														"nodeType": "YulTypedName",
														"src": "2403:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2414:6:14",
														"nodeType": "YulTypedName",
														"src": "2414:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2425:4:14",
														"nodeType": "YulTypedName",
														"src": "2425:4:14",
														"type": ""
													}
												],
												"src": "2283:261:14"
											},
											{
												"body": {
													"nativeSrc": "2646:87:14",
													"nodeType": "YulBlock",
													"src": "2646:87:14",
													"statements": [
														{
															"nativeSrc": "2656:26:14",
															"nodeType": "YulAssignment",
															"src": "2656:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2668:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2668:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2679:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2664:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2664:3:14"
																},
																"nativeSrc": "2664:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2664:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2656:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2656:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2698:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2698:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2713:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2713:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2721:4:14",
																				"nodeType": "YulLiteral",
																				"src": "2721:4:14",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2709:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2709:3:14"
																		},
																		"nativeSrc": "2709:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2709:17:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2691:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:14"
																},
																"nativeSrc": "2691:36:14",
																"nodeType": "YulFunctionCall",
																"src": "2691:36:14"
															},
															"nativeSrc": "2691:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "2691:36:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2549:184:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2615:9:14",
														"nodeType": "YulTypedName",
														"src": "2615:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2626:6:14",
														"nodeType": "YulTypedName",
														"src": "2626:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2637:4:14",
														"nodeType": "YulTypedName",
														"src": "2637:4:14",
														"type": ""
													}
												],
												"src": "2549:184:14"
											},
											{
												"body": {
													"nativeSrc": "2770:95:14",
													"nodeType": "YulBlock",
													"src": "2770:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2787:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2787:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2794:3:14",
																				"nodeType": "YulLiteral",
																				"src": "2794:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2799:10:14",
																				"nodeType": "YulLiteral",
																				"src": "2799:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2790:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:14"
																		},
																		"nativeSrc": "2790:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2790:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2780:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2780:6:14"
																},
																"nativeSrc": "2780:31:14",
																"nodeType": "YulFunctionCall",
																"src": "2780:31:14"
															},
															"nativeSrc": "2780:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "2780:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2827:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2827:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2830:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2820:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2820:6:14"
																},
																"nativeSrc": "2820:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2820:15:14"
															},
															"nativeSrc": "2820:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2820:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2851:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2851:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2854:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2854:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2844:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:14"
																},
																"nativeSrc": "2844:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2844:15:14"
															},
															"nativeSrc": "2844:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2844:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2738:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2738:127:14"
											},
											{
												"body": {
													"nativeSrc": "2915:230:14",
													"nodeType": "YulBlock",
													"src": "2915:230:14",
													"statements": [
														{
															"nativeSrc": "2925:19:14",
															"nodeType": "YulAssignment",
															"src": "2925:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2941:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2941:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2935:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2935:5:14"
																},
																"nativeSrc": "2935:9:14",
																"nodeType": "YulFunctionCall",
																"src": "2935:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2925:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2925:6:14"
																}
															]
														},
														{
															"nativeSrc": "2953:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2953:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2975:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2975:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "2991:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "2991:4:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2997:2:14",
																						"nodeType": "YulLiteral",
																						"src": "2997:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2987:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2987:3:14"
																				},
																				"nativeSrc": "2987:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2987:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3006:2:14",
																						"nodeType": "YulLiteral",
																						"src": "3006:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3002:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3002:3:14"
																				},
																				"nativeSrc": "3002:7:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3002:7:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2983:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2983:3:14"
																		},
																		"nativeSrc": "2983:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2971:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2971:3:14"
																},
																"nativeSrc": "2971:40:14",
																"nodeType": "YulFunctionCall",
																"src": "2971:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2957:10:14",
																	"nodeType": "YulTypedName",
																	"src": "2957:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3086:22:14",
																"nodeType": "YulBlock",
																"src": "3086:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3088:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "3088:16:14"
																			},
																			"nativeSrc": "3088:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3088:18:14"
																		},
																		"nativeSrc": "3088:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3088:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3029:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "3029:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3041:18:14",
																				"nodeType": "YulLiteral",
																				"src": "3041:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3026:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3026:2:14"
																		},
																		"nativeSrc": "3026:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3026:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3065:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "3065:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3077:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3077:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3062:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3062:2:14"
																		},
																		"nativeSrc": "3062:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3062:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3023:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3023:2:14"
																},
																"nativeSrc": "3023:62:14",
																"nodeType": "YulFunctionCall",
																"src": "3023:62:14"
															},
															"nativeSrc": "3020:88:14",
															"nodeType": "YulIf",
															"src": "3020:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3124:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3124:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3128:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "3128:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3117:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:14"
																},
																"nativeSrc": "3117:22:14",
																"nodeType": "YulFunctionCall",
																"src": "3117:22:14"
															},
															"nativeSrc": "3117:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "3117:22:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2870:275:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2895:4:14",
														"nodeType": "YulTypedName",
														"src": "2895:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2904:6:14",
														"nodeType": "YulTypedName",
														"src": "2904:6:14",
														"type": ""
													}
												],
												"src": "2870:275:14"
											},
											{
												"body": {
													"nativeSrc": "3234:283:14",
													"nodeType": "YulBlock",
													"src": "3234:283:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3283:16:14",
																"nodeType": "YulBlock",
																"src": "3283:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3292:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3292:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3295:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3295:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3285:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3285:6:14"
																			},
																			"nativeSrc": "3285:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3285:12:14"
																		},
																		"nativeSrc": "3285:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3285:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3262:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3262:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3270:4:14",
																						"nodeType": "YulLiteral",
																						"src": "3270:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3258:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3258:3:14"
																				},
																				"nativeSrc": "3258:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3258:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3277:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3277:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3254:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3254:3:14"
																		},
																		"nativeSrc": "3254:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3254:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3247:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3247:6:14"
																},
																"nativeSrc": "3247:35:14",
																"nodeType": "YulFunctionCall",
																"src": "3247:35:14"
															},
															"nativeSrc": "3244:55:14",
															"nodeType": "YulIf",
															"src": "3244:55:14"
														},
														{
															"nativeSrc": "3308:30:14",
															"nodeType": "YulAssignment",
															"src": "3308:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3331:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3331:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3318:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3318:12:14"
																},
																"nativeSrc": "3318:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3318:20:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3308:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3308:6:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3381:16:14",
																"nodeType": "YulBlock",
																"src": "3381:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3390:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3390:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3393:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3393:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3383:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3383:6:14"
																			},
																			"nativeSrc": "3383:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3383:12:14"
																		},
																		"nativeSrc": "3383:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3383:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3353:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3353:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3361:18:14",
																		"nodeType": "YulLiteral",
																		"src": "3361:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3350:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3350:2:14"
																},
																"nativeSrc": "3350:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3350:30:14"
															},
															"nativeSrc": "3347:50:14",
															"nodeType": "YulIf",
															"src": "3347:50:14"
														},
														{
															"nativeSrc": "3406:29:14",
															"nodeType": "YulAssignment",
															"src": "3406:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3422:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3422:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3430:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3430:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3418:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:14"
																},
																"nativeSrc": "3418:17:14",
																"nodeType": "YulFunctionCall",
																"src": "3418:17:14"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "3406:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "3406:8:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3495:16:14",
																"nodeType": "YulBlock",
																"src": "3495:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3504:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3504:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3507:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3507:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3497:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3497:6:14"
																			},
																			"nativeSrc": "3497:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3497:12:14"
																		},
																		"nativeSrc": "3497:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3497:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3458:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3458:6:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3470:1:14",
																								"nodeType": "YulLiteral",
																								"src": "3470:1:14",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "3473:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "3473:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3466:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3466:3:14"
																						},
																						"nativeSrc": "3466:14:14",
																						"nodeType": "YulFunctionCall",
																						"src": "3466:14:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3454:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3454:3:14"
																				},
																				"nativeSrc": "3454:27:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3454:27:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3483:4:14",
																				"nodeType": "YulLiteral",
																				"src": "3483:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3450:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3450:3:14"
																		},
																		"nativeSrc": "3450:38:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3450:38:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3490:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3490:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3447:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3447:2:14"
																},
																"nativeSrc": "3447:47:14",
																"nodeType": "YulFunctionCall",
																"src": "3447:47:14"
															},
															"nativeSrc": "3444:67:14",
															"nodeType": "YulIf",
															"src": "3444:67:14"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nativeSrc": "3150:367:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3197:6:14",
														"nodeType": "YulTypedName",
														"src": "3197:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3205:3:14",
														"nodeType": "YulTypedName",
														"src": "3205:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "3213:8:14",
														"nodeType": "YulTypedName",
														"src": "3213:8:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3223:6:14",
														"nodeType": "YulTypedName",
														"src": "3223:6:14",
														"type": ""
													}
												],
												"src": "3150:367:14"
											},
											{
												"body": {
													"nativeSrc": "3671:1083:14",
													"nodeType": "YulBlock",
													"src": "3671:1083:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3717:16:14",
																"nodeType": "YulBlock",
																"src": "3717:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3726:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3726:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3729:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3729:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3719:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3719:6:14"
																			},
																			"nativeSrc": "3719:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3719:12:14"
																		},
																		"nativeSrc": "3719:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3719:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3692:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3692:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3701:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3701:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3688:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3688:3:14"
																		},
																		"nativeSrc": "3688:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3688:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3713:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3713:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3684:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3684:3:14"
																},
																"nativeSrc": "3684:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3684:32:14"
															},
															"nativeSrc": "3681:52:14",
															"nodeType": "YulIf",
															"src": "3681:52:14"
														},
														{
															"nativeSrc": "3742:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3742:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3768:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3768:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3755:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3755:12:14"
																},
																"nativeSrc": "3755:23:14",
																"nodeType": "YulFunctionCall",
																"src": "3755:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3746:5:14",
																	"nodeType": "YulTypedName",
																	"src": "3746:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3812:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3812:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3787:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "3787:24:14"
																},
																"nativeSrc": "3787:31:14",
																"nodeType": "YulFunctionCall",
																"src": "3787:31:14"
															},
															"nativeSrc": "3787:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "3787:31:14"
														},
														{
															"nativeSrc": "3827:15:14",
															"nodeType": "YulAssignment",
															"src": "3827:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "3837:5:14",
																"nodeType": "YulIdentifier",
																"src": "3837:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3827:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3827:6:14"
																}
															]
														},
														{
															"nativeSrc": "3851:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3851:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3882:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3893:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3878:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:14"
																		},
																		"nativeSrc": "3878:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3865:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3865:12:14"
																},
																"nativeSrc": "3865:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3865:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3855:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3855:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3940:16:14",
																"nodeType": "YulBlock",
																"src": "3940:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3949:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3949:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3952:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3952:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3942:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:14"
																			},
																			"nativeSrc": "3942:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3942:12:14"
																		},
																		"nativeSrc": "3942:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3942:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3912:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3912:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3920:18:14",
																		"nodeType": "YulLiteral",
																		"src": "3920:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3909:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3909:2:14"
																},
																"nativeSrc": "3909:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3909:30:14"
															},
															"nativeSrc": "3906:50:14",
															"nodeType": "YulIf",
															"src": "3906:50:14"
														},
														{
															"nativeSrc": "3965:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3965:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3979:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3979:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3990:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3975:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3975:3:14"
																},
																"nativeSrc": "3975:22:14",
																"nodeType": "YulFunctionCall",
																"src": "3975:22:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3969:2:14",
																	"nodeType": "YulTypedName",
																	"src": "3969:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4045:16:14",
																"nodeType": "YulBlock",
																"src": "4045:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4054:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4054:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4057:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4057:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4047:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4047:6:14"
																			},
																			"nativeSrc": "4047:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4047:12:14"
																		},
																		"nativeSrc": "4047:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4047:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4024:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4024:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4028:4:14",
																						"nodeType": "YulLiteral",
																						"src": "4028:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4020:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:14"
																				},
																				"nativeSrc": "4020:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4020:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4035:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4035:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4016:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4016:3:14"
																		},
																		"nativeSrc": "4016:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4016:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4009:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4009:6:14"
																},
																"nativeSrc": "4009:35:14",
																"nodeType": "YulFunctionCall",
																"src": "4009:35:14"
															},
															"nativeSrc": "4006:55:14",
															"nodeType": "YulIf",
															"src": "4006:55:14"
														},
														{
															"nativeSrc": "4070:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4070:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4097:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "4097:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4084:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4084:12:14"
																},
																"nativeSrc": "4084:16:14",
																"nodeType": "YulFunctionCall",
																"src": "4084:16:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4074:6:14",
																	"nodeType": "YulTypedName",
																	"src": "4074:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4143:22:14",
																"nodeType": "YulBlock",
																"src": "4143:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4145:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4145:16:14"
																			},
																			"nativeSrc": "4145:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4145:18:14"
																		},
																		"nativeSrc": "4145:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4145:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4115:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4115:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4123:18:14",
																		"nodeType": "YulLiteral",
																		"src": "4123:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4112:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4112:2:14"
																},
																"nativeSrc": "4112:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4112:30:14"
															},
															"nativeSrc": "4109:56:14",
															"nodeType": "YulIf",
															"src": "4109:56:14"
														},
														{
															"nativeSrc": "4174:70:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4174:70:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4215:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "4215:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4223:4:14",
																								"nodeType": "YulLiteral",
																								"src": "4223:4:14",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4211:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "4211:3:14"
																						},
																						"nativeSrc": "4211:17:14",
																						"nodeType": "YulFunctionCall",
																						"src": "4211:17:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4234:2:14",
																								"nodeType": "YulLiteral",
																								"src": "4234:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4230:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "4230:3:14"
																						},
																						"nativeSrc": "4230:7:14",
																						"nodeType": "YulFunctionCall",
																						"src": "4230:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4207:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4207:3:14"
																				},
																				"nativeSrc": "4207:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4207:31:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4240:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4240:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4203:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4203:3:14"
																		},
																		"nativeSrc": "4203:40:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4203:40:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4187:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "4187:15:14"
																},
																"nativeSrc": "4187:57:14",
																"nodeType": "YulFunctionCall",
																"src": "4187:57:14"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "4178:5:14",
																	"nodeType": "YulTypedName",
																	"src": "4178:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4260:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4260:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4267:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4267:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4253:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:14"
																},
																"nativeSrc": "4253:21:14",
																"nodeType": "YulFunctionCall",
																"src": "4253:21:14"
															},
															"nativeSrc": "4253:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "4253:21:14"
														},
														{
															"body": {
																"nativeSrc": "4324:16:14",
																"nodeType": "YulBlock",
																"src": "4324:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4333:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4333:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4336:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4336:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4326:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4326:6:14"
																			},
																			"nativeSrc": "4326:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4326:12:14"
																		},
																		"nativeSrc": "4326:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4326:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4297:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4297:2:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4301:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4301:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4293:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4293:3:14"
																				},
																				"nativeSrc": "4293:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4293:15:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4310:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4310:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4289:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4289:3:14"
																		},
																		"nativeSrc": "4289:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4289:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4315:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "4315:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4286:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4286:2:14"
																},
																"nativeSrc": "4286:37:14",
																"nodeType": "YulFunctionCall",
																"src": "4286:37:14"
															},
															"nativeSrc": "4283:57:14",
															"nodeType": "YulIf",
															"src": "4283:57:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "4366:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4366:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4373:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4373:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4362:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:14"
																		},
																		"nativeSrc": "4362:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4362:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4382:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4382:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4386:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4386:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4378:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4378:3:14"
																		},
																		"nativeSrc": "4378:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4378:11:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4391:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4391:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4349:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4349:12:14"
																},
																"nativeSrc": "4349:49:14",
																"nodeType": "YulFunctionCall",
																"src": "4349:49:14"
															},
															"nativeSrc": "4349:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "4349:49:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nativeSrc": "4422:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4422:5:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4429:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4429:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4418:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4418:3:14"
																				},
																				"nativeSrc": "4418:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4418:18:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4438:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4438:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4414:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4414:3:14"
																		},
																		"nativeSrc": "4414:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4414:27:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4443:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4443:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4407:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4407:6:14"
																},
																"nativeSrc": "4407:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4407:38:14"
															},
															"nativeSrc": "4407:38:14",
															"nodeType": "YulExpressionStatement",
															"src": "4407:38:14"
														},
														{
															"nativeSrc": "4454:15:14",
															"nodeType": "YulAssignment",
															"src": "4454:15:14",
															"value": {
																"name": "array",
																"nativeSrc": "4464:5:14",
																"nodeType": "YulIdentifier",
																"src": "4464:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4454:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:14"
																}
															]
														},
														{
															"nativeSrc": "4478:48:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4478:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4511:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4511:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4522:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4522:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4507:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:14"
																		},
																		"nativeSrc": "4507:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4507:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4494:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4494:12:14"
																},
																"nativeSrc": "4494:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4494:32:14"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "4482:8:14",
																	"nodeType": "YulTypedName",
																	"src": "4482:8:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4571:16:14",
																"nodeType": "YulBlock",
																"src": "4571:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4580:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4580:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4583:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4583:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4573:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4573:6:14"
																			},
																			"nativeSrc": "4573:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4573:12:14"
																		},
																		"nativeSrc": "4573:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4573:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "4541:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "4541:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4551:18:14",
																		"nodeType": "YulLiteral",
																		"src": "4551:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4538:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4538:2:14"
																},
																"nativeSrc": "4538:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4538:32:14"
															},
															"nativeSrc": "4535:52:14",
															"nodeType": "YulIf",
															"src": "4535:52:14"
														},
														{
															"nativeSrc": "4596:98:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4596:98:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4664:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:14"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "4675:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "4675:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4660:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4660:3:14"
																		},
																		"nativeSrc": "4660:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4660:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4686:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "4686:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "4622:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "4622:37:14"
																},
																"nativeSrc": "4622:72:14",
																"nodeType": "YulFunctionCall",
																"src": "4622:72:14"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "4600:8:14",
																	"nodeType": "YulTypedName",
																	"src": "4600:8:14",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "4610:8:14",
																	"nodeType": "YulTypedName",
																	"src": "4610:8:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4703:18:14",
															"nodeType": "YulAssignment",
															"src": "4703:18:14",
															"value": {
																"name": "value2_1",
																"nativeSrc": "4713:8:14",
																"nodeType": "YulIdentifier",
																"src": "4713:8:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4703:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4703:6:14"
																}
															]
														},
														{
															"nativeSrc": "4730:18:14",
															"nodeType": "YulAssignment",
															"src": "4730:18:14",
															"value": {
																"name": "value3_1",
																"nativeSrc": "4740:8:14",
																"nodeType": "YulIdentifier",
																"src": "4740:8:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4730:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4730:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "3522:1232:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3613:9:14",
														"nodeType": "YulTypedName",
														"src": "3613:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3624:7:14",
														"nodeType": "YulTypedName",
														"src": "3624:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3636:6:14",
														"nodeType": "YulTypedName",
														"src": "3636:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3644:6:14",
														"nodeType": "YulTypedName",
														"src": "3644:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3652:6:14",
														"nodeType": "YulTypedName",
														"src": "3652:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3660:6:14",
														"nodeType": "YulTypedName",
														"src": "3660:6:14",
														"type": ""
													}
												],
												"src": "3522:1232:14"
											},
											{
												"body": {
													"nativeSrc": "4916:162:14",
													"nodeType": "YulBlock",
													"src": "4916:162:14",
													"statements": [
														{
															"nativeSrc": "4926:26:14",
															"nodeType": "YulAssignment",
															"src": "4926:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4938:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4938:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4949:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4934:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:14"
																},
																"nativeSrc": "4934:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4934:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4926:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4926:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4968:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4968:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4979:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4979:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4961:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4961:6:14"
																},
																"nativeSrc": "4961:25:14",
																"nodeType": "YulFunctionCall",
																"src": "4961:25:14"
															},
															"nativeSrc": "4961:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "4961:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5006:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5006:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5017:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5017:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5002:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5002:3:14"
																		},
																		"nativeSrc": "5002:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5002:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5022:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5022:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4995:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4995:6:14"
																},
																"nativeSrc": "4995:34:14",
																"nodeType": "YulFunctionCall",
																"src": "4995:34:14"
															},
															"nativeSrc": "4995:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "4995:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5049:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5049:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5060:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5060:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5045:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5045:3:14"
																		},
																		"nativeSrc": "5045:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5045:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5065:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5065:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5038:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5038:6:14"
																},
																"nativeSrc": "5038:34:14",
																"nodeType": "YulFunctionCall",
																"src": "5038:34:14"
															},
															"nativeSrc": "5038:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "5038:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4759:319:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4869:9:14",
														"nodeType": "YulTypedName",
														"src": "4869:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4880:6:14",
														"nodeType": "YulTypedName",
														"src": "4880:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4888:6:14",
														"nodeType": "YulTypedName",
														"src": "4888:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4896:6:14",
														"nodeType": "YulTypedName",
														"src": "4896:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4907:4:14",
														"nodeType": "YulTypedName",
														"src": "4907:4:14",
														"type": ""
													}
												],
												"src": "4759:319:14"
											},
											{
												"body": {
													"nativeSrc": "5153:156:14",
													"nodeType": "YulBlock",
													"src": "5153:156:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5199:16:14",
																"nodeType": "YulBlock",
																"src": "5199:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5208:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5208:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5211:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5211:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5201:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5201:6:14"
																			},
																			"nativeSrc": "5201:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5201:12:14"
																		},
																		"nativeSrc": "5201:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5201:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5174:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5174:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5183:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5183:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5170:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5170:3:14"
																		},
																		"nativeSrc": "5170:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5170:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5195:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5195:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5166:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:14"
																},
																"nativeSrc": "5166:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5166:32:14"
															},
															"nativeSrc": "5163:52:14",
															"nodeType": "YulIf",
															"src": "5163:52:14"
														},
														{
															"nativeSrc": "5224:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5224:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "5237:1:14",
																"nodeType": "YulLiteral",
																"src": "5237:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5228:5:14",
																	"nodeType": "YulTypedName",
																	"src": "5228:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5247:32:14",
															"nodeType": "YulAssignment",
															"src": "5247:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5269:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5269:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5256:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5256:12:14"
																},
																"nativeSrc": "5256:23:14",
																"nodeType": "YulFunctionCall",
																"src": "5256:23:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5247:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5247:5:14"
																}
															]
														},
														{
															"nativeSrc": "5288:15:14",
															"nodeType": "YulAssignment",
															"src": "5288:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "5298:5:14",
																"nodeType": "YulIdentifier",
																"src": "5298:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5288:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5288:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5083:226:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5119:9:14",
														"nodeType": "YulTypedName",
														"src": "5119:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5130:7:14",
														"nodeType": "YulTypedName",
														"src": "5130:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5142:6:14",
														"nodeType": "YulTypedName",
														"src": "5142:6:14",
														"type": ""
													}
												],
												"src": "5083:226:14"
											},
											{
												"body": {
													"nativeSrc": "5415:102:14",
													"nodeType": "YulBlock",
													"src": "5415:102:14",
													"statements": [
														{
															"nativeSrc": "5425:26:14",
															"nodeType": "YulAssignment",
															"src": "5425:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5437:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5437:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5448:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5448:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5433:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5433:3:14"
																},
																"nativeSrc": "5433:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5433:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5425:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5425:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5467:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5467:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5482:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5482:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5498:3:14",
																								"nodeType": "YulLiteral",
																								"src": "5498:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5503:1:14",
																								"nodeType": "YulLiteral",
																								"src": "5503:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5494:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "5494:3:14"
																						},
																						"nativeSrc": "5494:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "5494:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5507:1:14",
																						"nodeType": "YulLiteral",
																						"src": "5507:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5490:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5490:3:14"
																				},
																				"nativeSrc": "5490:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5490:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5478:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5478:3:14"
																		},
																		"nativeSrc": "5478:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5478:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5460:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5460:6:14"
																},
																"nativeSrc": "5460:51:14",
																"nodeType": "YulFunctionCall",
																"src": "5460:51:14"
															},
															"nativeSrc": "5460:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "5460:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5314:203:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5384:9:14",
														"nodeType": "YulTypedName",
														"src": "5384:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5395:6:14",
														"nodeType": "YulTypedName",
														"src": "5395:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5406:4:14",
														"nodeType": "YulTypedName",
														"src": "5406:4:14",
														"type": ""
													}
												],
												"src": "5314:203:14"
											},
											{
												"body": {
													"nativeSrc": "5592:177:14",
													"nodeType": "YulBlock",
													"src": "5592:177:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5638:16:14",
																"nodeType": "YulBlock",
																"src": "5638:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5647:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5647:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5650:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5650:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5640:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5640:6:14"
																			},
																			"nativeSrc": "5640:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5640:12:14"
																		},
																		"nativeSrc": "5640:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5640:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5613:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5613:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5622:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5622:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5609:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5609:3:14"
																		},
																		"nativeSrc": "5609:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5609:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5634:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5634:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5605:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5605:3:14"
																},
																"nativeSrc": "5605:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5605:32:14"
															},
															"nativeSrc": "5602:52:14",
															"nodeType": "YulIf",
															"src": "5602:52:14"
														},
														{
															"nativeSrc": "5663:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5663:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5689:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5689:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5676:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5676:12:14"
																},
																"nativeSrc": "5676:23:14",
																"nodeType": "YulFunctionCall",
																"src": "5676:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5667:5:14",
																	"nodeType": "YulTypedName",
																	"src": "5667:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5733:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5733:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5708:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "5708:24:14"
																},
																"nativeSrc": "5708:31:14",
																"nodeType": "YulFunctionCall",
																"src": "5708:31:14"
															},
															"nativeSrc": "5708:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "5708:31:14"
														},
														{
															"nativeSrc": "5748:15:14",
															"nodeType": "YulAssignment",
															"src": "5748:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "5758:5:14",
																"nodeType": "YulIdentifier",
																"src": "5758:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5748:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5748:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5522:247:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5558:9:14",
														"nodeType": "YulTypedName",
														"src": "5558:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5569:7:14",
														"nodeType": "YulTypedName",
														"src": "5569:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5581:6:14",
														"nodeType": "YulTypedName",
														"src": "5581:6:14",
														"type": ""
													}
												],
												"src": "5522:247:14"
											},
											{
												"body": {
													"nativeSrc": "5835:359:14",
													"nodeType": "YulBlock",
													"src": "5835:359:14",
													"statements": [
														{
															"nativeSrc": "5845:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5845:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5865:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5865:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5859:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5859:5:14"
																},
																"nativeSrc": "5859:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5859:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5849:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5849:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5887:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5887:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5892:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5892:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5880:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5880:6:14"
																},
																"nativeSrc": "5880:19:14",
																"nodeType": "YulFunctionCall",
																"src": "5880:19:14"
															},
															"nativeSrc": "5880:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "5880:19:14"
														},
														{
															"nativeSrc": "5908:21:14",
															"nodeType": "YulAssignment",
															"src": "5908:21:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5919:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5919:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5924:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5924:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5915:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5915:3:14"
																},
																"nativeSrc": "5915:14:14",
																"nodeType": "YulFunctionCall",
																"src": "5915:14:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5908:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5908:3:14"
																}
															]
														},
														{
															"nativeSrc": "5938:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5938:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5956:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5956:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5963:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5963:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5952:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5952:3:14"
																},
																"nativeSrc": "5952:16:14",
																"nodeType": "YulFunctionCall",
																"src": "5952:16:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "5942:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5942:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5977:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5977:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "5986:1:14",
																"nodeType": "YulLiteral",
																"src": "5986:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5981:1:14",
																	"nodeType": "YulTypedName",
																	"src": "5981:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6045:124:14",
																"nodeType": "YulBlock",
																"src": "6045:124:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6066:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6066:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "6077:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "6077:6:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6071:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "6071:5:14"
																					},
																					"nativeSrc": "6071:13:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6071:13:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6059:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6059:6:14"
																			},
																			"nativeSrc": "6059:26:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6059:26:14"
																		},
																		"nativeSrc": "6059:26:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6059:26:14"
																	},
																	{
																		"nativeSrc": "6098:21:14",
																		"nodeType": "YulAssignment",
																		"src": "6098:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6109:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6109:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6114:4:14",
																					"nodeType": "YulLiteral",
																					"src": "6114:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6105:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6105:3:14"
																			},
																			"nativeSrc": "6105:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6105:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6098:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6098:3:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6132:27:14",
																		"nodeType": "YulAssignment",
																		"src": "6132:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6146:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "6146:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6154:4:14",
																					"nodeType": "YulLiteral",
																					"src": "6154:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6142:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6142:3:14"
																			},
																			"nativeSrc": "6142:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6142:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6132:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6132:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6007:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6007:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6010:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6010:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6004:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6004:2:14"
																},
																"nativeSrc": "6004:13:14",
																"nodeType": "YulFunctionCall",
																"src": "6004:13:14"
															},
															"nativeSrc": "5996:173:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6018:18:14",
																"nodeType": "YulBlock",
																"src": "6018:18:14",
																"statements": [
																	{
																		"nativeSrc": "6020:14:14",
																		"nodeType": "YulAssignment",
																		"src": "6020:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6029:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "6029:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6032:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6032:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6025:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6025:3:14"
																			},
																			"nativeSrc": "6025:9:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6025:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6020:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "6020:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6000:3:14",
																"nodeType": "YulBlock",
																"src": "6000:3:14",
																"statements": []
															},
															"src": "5996:173:14"
														},
														{
															"nativeSrc": "6178:10:14",
															"nodeType": "YulAssignment",
															"src": "6178:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "6185:3:14",
																"nodeType": "YulIdentifier",
																"src": "6185:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6178:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6178:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nativeSrc": "5774:420:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5812:5:14",
														"nodeType": "YulTypedName",
														"src": "5812:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5819:3:14",
														"nodeType": "YulTypedName",
														"src": "5819:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5827:3:14",
														"nodeType": "YulTypedName",
														"src": "5827:3:14",
														"type": ""
													}
												],
												"src": "5774:420:14"
											},
											{
												"body": {
													"nativeSrc": "6350:110:14",
													"nodeType": "YulBlock",
													"src": "6350:110:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6367:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6367:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6378:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6378:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6360:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6360:6:14"
																},
																"nativeSrc": "6360:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6360:21:14"
															},
															"nativeSrc": "6360:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6360:21:14"
														},
														{
															"nativeSrc": "6390:64:14",
															"nodeType": "YulAssignment",
															"src": "6390:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6427:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6427:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6439:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6439:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6450:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6450:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6435:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6435:3:14"
																		},
																		"nativeSrc": "6435:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6435:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "6398:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "6398:28:14"
																},
																"nativeSrc": "6398:56:14",
																"nodeType": "YulFunctionCall",
																"src": "6398:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6390:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6390:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6199:261:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6319:9:14",
														"nodeType": "YulTypedName",
														"src": "6319:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6330:6:14",
														"nodeType": "YulTypedName",
														"src": "6330:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6341:4:14",
														"nodeType": "YulTypedName",
														"src": "6341:4:14",
														"type": ""
													}
												],
												"src": "6199:261:14"
											},
											{
												"body": {
													"nativeSrc": "6672:196:14",
													"nodeType": "YulBlock",
													"src": "6672:196:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6689:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6689:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6700:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6700:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6682:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6682:6:14"
																},
																"nativeSrc": "6682:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6682:21:14"
															},
															"nativeSrc": "6682:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6682:21:14"
														},
														{
															"nativeSrc": "6712:64:14",
															"nodeType": "YulAssignment",
															"src": "6712:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6749:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6749:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6761:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6761:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6772:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6772:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6757:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6757:3:14"
																		},
																		"nativeSrc": "6757:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "6720:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "6720:28:14"
																},
																"nativeSrc": "6720:56:14",
																"nodeType": "YulFunctionCall",
																"src": "6720:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6712:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6712:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6796:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6796:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6807:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6807:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6792:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6792:3:14"
																		},
																		"nativeSrc": "6792:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6792:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6812:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6812:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6785:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6785:6:14"
																},
																"nativeSrc": "6785:34:14",
																"nodeType": "YulFunctionCall",
																"src": "6785:34:14"
															},
															"nativeSrc": "6785:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "6785:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6839:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6839:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6850:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6850:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6835:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6835:3:14"
																		},
																		"nativeSrc": "6835:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6835:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6855:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6855:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6828:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6828:6:14"
																},
																"nativeSrc": "6828:34:14",
																"nodeType": "YulFunctionCall",
																"src": "6828:34:14"
															},
															"nativeSrc": "6828:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "6828:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6465:403:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6625:9:14",
														"nodeType": "YulTypedName",
														"src": "6625:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6636:6:14",
														"nodeType": "YulTypedName",
														"src": "6636:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6644:6:14",
														"nodeType": "YulTypedName",
														"src": "6644:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6652:6:14",
														"nodeType": "YulTypedName",
														"src": "6652:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6663:4:14",
														"nodeType": "YulTypedName",
														"src": "6663:4:14",
														"type": ""
													}
												],
												"src": "6465:403:14"
											},
											{
												"body": {
													"nativeSrc": "6915:76:14",
													"nodeType": "YulBlock",
													"src": "6915:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6969:16:14",
																"nodeType": "YulBlock",
																"src": "6969:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6978:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6978:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6981:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6981:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6971:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6971:6:14"
																			},
																			"nativeSrc": "6971:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6971:12:14"
																		},
																		"nativeSrc": "6971:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6971:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6938:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6938:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "6959:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "6959:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "6952:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "6952:6:14"
																						},
																						"nativeSrc": "6952:13:14",
																						"nodeType": "YulFunctionCall",
																						"src": "6952:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6945:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "6945:6:14"
																				},
																				"nativeSrc": "6945:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6945:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6935:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6935:2:14"
																		},
																		"nativeSrc": "6935:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6935:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6928:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6928:6:14"
																},
																"nativeSrc": "6928:40:14",
																"nodeType": "YulFunctionCall",
																"src": "6928:40:14"
															},
															"nativeSrc": "6925:60:14",
															"nodeType": "YulIf",
															"src": "6925:60:14"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "6873:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6904:5:14",
														"nodeType": "YulTypedName",
														"src": "6904:5:14",
														"type": ""
													}
												],
												"src": "6873:118:14"
											},
											{
												"body": {
													"nativeSrc": "7063:174:14",
													"nodeType": "YulBlock",
													"src": "7063:174:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7109:16:14",
																"nodeType": "YulBlock",
																"src": "7109:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7118:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7118:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7121:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7121:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7111:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7111:6:14"
																			},
																			"nativeSrc": "7111:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7111:12:14"
																		},
																		"nativeSrc": "7111:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7111:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7084:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7084:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7093:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7093:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7080:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:14"
																		},
																		"nativeSrc": "7080:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7080:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7105:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7105:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7076:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:14"
																},
																"nativeSrc": "7076:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7076:32:14"
															},
															"nativeSrc": "7073:52:14",
															"nodeType": "YulIf",
															"src": "7073:52:14"
														},
														{
															"nativeSrc": "7134:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7134:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7160:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7160:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7147:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7147:12:14"
																},
																"nativeSrc": "7147:23:14",
																"nodeType": "YulFunctionCall",
																"src": "7147:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7138:5:14",
																	"nodeType": "YulTypedName",
																	"src": "7138:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7201:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7201:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "7179:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "7179:21:14"
																},
																"nativeSrc": "7179:28:14",
																"nodeType": "YulFunctionCall",
																"src": "7179:28:14"
															},
															"nativeSrc": "7179:28:14",
															"nodeType": "YulExpressionStatement",
															"src": "7179:28:14"
														},
														{
															"nativeSrc": "7216:15:14",
															"nodeType": "YulAssignment",
															"src": "7216:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "7226:5:14",
																"nodeType": "YulIdentifier",
																"src": "7226:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7216:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7216:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "6996:241:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7029:9:14",
														"nodeType": "YulTypedName",
														"src": "7029:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7040:7:14",
														"nodeType": "YulTypedName",
														"src": "7040:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7052:6:14",
														"nodeType": "YulTypedName",
														"src": "7052:6:14",
														"type": ""
													}
												],
												"src": "6996:241:14"
											},
											{
												"body": {
													"nativeSrc": "7329:301:14",
													"nodeType": "YulBlock",
													"src": "7329:301:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7375:16:14",
																"nodeType": "YulBlock",
																"src": "7375:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7384:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7384:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7387:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7387:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7377:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7377:6:14"
																			},
																			"nativeSrc": "7377:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7377:12:14"
																		},
																		"nativeSrc": "7377:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7377:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7350:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7350:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7359:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7359:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7346:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7346:3:14"
																		},
																		"nativeSrc": "7346:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7346:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7371:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7371:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7342:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:14"
																},
																"nativeSrc": "7342:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7342:32:14"
															},
															"nativeSrc": "7339:52:14",
															"nodeType": "YulIf",
															"src": "7339:52:14"
														},
														{
															"nativeSrc": "7400:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7400:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7426:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7426:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7413:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7413:12:14"
																},
																"nativeSrc": "7413:23:14",
																"nodeType": "YulFunctionCall",
																"src": "7413:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7404:5:14",
																	"nodeType": "YulTypedName",
																	"src": "7404:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7470:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7470:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7445:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "7445:24:14"
																},
																"nativeSrc": "7445:31:14",
																"nodeType": "YulFunctionCall",
																"src": "7445:31:14"
															},
															"nativeSrc": "7445:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "7445:31:14"
														},
														{
															"nativeSrc": "7485:15:14",
															"nodeType": "YulAssignment",
															"src": "7485:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "7495:5:14",
																"nodeType": "YulIdentifier",
																"src": "7495:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7485:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7485:6:14"
																}
															]
														},
														{
															"nativeSrc": "7509:47:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7509:47:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7541:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7541:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7552:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7552:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7537:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7537:3:14"
																		},
																		"nativeSrc": "7537:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7537:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7524:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7524:12:14"
																},
																"nativeSrc": "7524:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7524:32:14"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "7513:7:14",
																	"nodeType": "YulTypedName",
																	"src": "7513:7:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "7590:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "7590:7:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7565:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "7565:24:14"
																},
																"nativeSrc": "7565:33:14",
																"nodeType": "YulFunctionCall",
																"src": "7565:33:14"
															},
															"nativeSrc": "7565:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "7565:33:14"
														},
														{
															"nativeSrc": "7607:17:14",
															"nodeType": "YulAssignment",
															"src": "7607:17:14",
															"value": {
																"name": "value_1",
																"nativeSrc": "7617:7:14",
																"nodeType": "YulIdentifier",
																"src": "7617:7:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7607:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7607:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7242:388:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7287:9:14",
														"nodeType": "YulTypedName",
														"src": "7287:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7298:7:14",
														"nodeType": "YulTypedName",
														"src": "7298:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7310:6:14",
														"nodeType": "YulTypedName",
														"src": "7310:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7318:6:14",
														"nodeType": "YulTypedName",
														"src": "7318:6:14",
														"type": ""
													}
												],
												"src": "7242:388:14"
											},
											{
												"body": {
													"nativeSrc": "7740:332:14",
													"nodeType": "YulBlock",
													"src": "7740:332:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7786:16:14",
																"nodeType": "YulBlock",
																"src": "7786:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7795:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7795:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7798:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7798:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7788:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7788:6:14"
																			},
																			"nativeSrc": "7788:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7788:12:14"
																		},
																		"nativeSrc": "7788:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7788:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7761:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7761:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7770:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7770:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7757:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7757:3:14"
																		},
																		"nativeSrc": "7757:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7757:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7782:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7782:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7753:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7753:3:14"
																},
																"nativeSrc": "7753:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7753:32:14"
															},
															"nativeSrc": "7750:52:14",
															"nodeType": "YulIf",
															"src": "7750:52:14"
														},
														{
															"nativeSrc": "7811:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7811:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7838:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7838:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7825:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7825:12:14"
																},
																"nativeSrc": "7825:23:14",
																"nodeType": "YulFunctionCall",
																"src": "7825:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "7815:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7815:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7891:16:14",
																"nodeType": "YulBlock",
																"src": "7891:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7900:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7900:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7903:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7903:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7893:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7893:6:14"
																			},
																			"nativeSrc": "7893:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7893:12:14"
																		},
																		"nativeSrc": "7893:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7893:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7863:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7863:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7871:18:14",
																		"nodeType": "YulLiteral",
																		"src": "7871:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7860:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7860:2:14"
																},
																"nativeSrc": "7860:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7860:30:14"
															},
															"nativeSrc": "7857:50:14",
															"nodeType": "YulIf",
															"src": "7857:50:14"
														},
														{
															"nativeSrc": "7916:96:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7916:96:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7984:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7984:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "7995:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7995:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7980:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7980:3:14"
																		},
																		"nativeSrc": "7980:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7980:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8004:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "8004:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "7942:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "7942:37:14"
																},
																"nativeSrc": "7942:70:14",
																"nodeType": "YulFunctionCall",
																"src": "7942:70:14"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "7920:8:14",
																	"nodeType": "YulTypedName",
																	"src": "7920:8:14",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "7930:8:14",
																	"nodeType": "YulTypedName",
																	"src": "7930:8:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8021:18:14",
															"nodeType": "YulAssignment",
															"src": "8021:18:14",
															"value": {
																"name": "value0_1",
																"nativeSrc": "8031:8:14",
																"nodeType": "YulIdentifier",
																"src": "8031:8:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8021:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:14"
																}
															]
														},
														{
															"nativeSrc": "8048:18:14",
															"nodeType": "YulAssignment",
															"src": "8048:18:14",
															"value": {
																"name": "value1_1",
																"nativeSrc": "8058:8:14",
																"nodeType": "YulIdentifier",
																"src": "8058:8:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8048:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8048:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "7635:437:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7698:9:14",
														"nodeType": "YulTypedName",
														"src": "7698:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7709:7:14",
														"nodeType": "YulTypedName",
														"src": "7709:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7721:6:14",
														"nodeType": "YulTypedName",
														"src": "7721:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7729:6:14",
														"nodeType": "YulTypedName",
														"src": "7729:6:14",
														"type": ""
													}
												],
												"src": "7635:437:14"
											},
											{
												"body": {
													"nativeSrc": "8199:450:14",
													"nodeType": "YulBlock",
													"src": "8199:450:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8245:16:14",
																"nodeType": "YulBlock",
																"src": "8245:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8254:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8254:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8257:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8257:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8247:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8247:6:14"
																			},
																			"nativeSrc": "8247:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8247:12:14"
																		},
																		"nativeSrc": "8247:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8247:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8220:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8220:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8229:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8229:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8216:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8216:3:14"
																		},
																		"nativeSrc": "8216:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8216:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8241:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8241:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8212:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8212:3:14"
																},
																"nativeSrc": "8212:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8212:32:14"
															},
															"nativeSrc": "8209:52:14",
															"nodeType": "YulIf",
															"src": "8209:52:14"
														},
														{
															"nativeSrc": "8270:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8270:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8296:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8296:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8283:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8283:12:14"
																},
																"nativeSrc": "8283:23:14",
																"nodeType": "YulFunctionCall",
																"src": "8283:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8274:5:14",
																	"nodeType": "YulTypedName",
																	"src": "8274:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8340:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8340:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "8315:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "8315:24:14"
																},
																"nativeSrc": "8315:31:14",
																"nodeType": "YulFunctionCall",
																"src": "8315:31:14"
															},
															"nativeSrc": "8315:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "8315:31:14"
														},
														{
															"nativeSrc": "8355:15:14",
															"nodeType": "YulAssignment",
															"src": "8355:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "8365:5:14",
																"nodeType": "YulIdentifier",
																"src": "8365:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8355:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8355:6:14"
																}
															]
														},
														{
															"nativeSrc": "8379:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8379:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8410:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8410:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8421:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8421:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8406:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8406:3:14"
																		},
																		"nativeSrc": "8406:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8406:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8393:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8393:12:14"
																},
																"nativeSrc": "8393:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8393:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "8383:6:14",
																	"nodeType": "YulTypedName",
																	"src": "8383:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8468:16:14",
																"nodeType": "YulBlock",
																"src": "8468:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8477:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8477:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8480:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8480:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8470:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8470:6:14"
																			},
																			"nativeSrc": "8470:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8470:12:14"
																		},
																		"nativeSrc": "8470:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8470:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8440:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8440:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8448:18:14",
																		"nodeType": "YulLiteral",
																		"src": "8448:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8437:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8437:2:14"
																},
																"nativeSrc": "8437:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8437:30:14"
															},
															"nativeSrc": "8434:50:14",
															"nodeType": "YulIf",
															"src": "8434:50:14"
														},
														{
															"nativeSrc": "8493:96:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8493:96:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8561:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8561:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "8572:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8572:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8557:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8557:3:14"
																		},
																		"nativeSrc": "8557:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8557:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8581:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "8581:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "8519:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "8519:37:14"
																},
																"nativeSrc": "8519:70:14",
																"nodeType": "YulFunctionCall",
																"src": "8519:70:14"
															},
															"variables": [
																{
																	"name": "value1_1",
																	"nativeSrc": "8497:8:14",
																	"nodeType": "YulTypedName",
																	"src": "8497:8:14",
																	"type": ""
																},
																{
																	"name": "value2_1",
																	"nativeSrc": "8507:8:14",
																	"nodeType": "YulTypedName",
																	"src": "8507:8:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8598:18:14",
															"nodeType": "YulAssignment",
															"src": "8598:18:14",
															"value": {
																"name": "value1_1",
																"nativeSrc": "8608:8:14",
																"nodeType": "YulIdentifier",
																"src": "8608:8:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8598:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8598:6:14"
																}
															]
														},
														{
															"nativeSrc": "8625:18:14",
															"nodeType": "YulAssignment",
															"src": "8625:18:14",
															"value": {
																"name": "value2_1",
																"nativeSrc": "8635:8:14",
																"nodeType": "YulIdentifier",
																"src": "8635:8:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "8625:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8625:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "8077:572:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8149:9:14",
														"nodeType": "YulTypedName",
														"src": "8149:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8160:7:14",
														"nodeType": "YulTypedName",
														"src": "8160:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8172:6:14",
														"nodeType": "YulTypedName",
														"src": "8172:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8180:6:14",
														"nodeType": "YulTypedName",
														"src": "8180:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8188:6:14",
														"nodeType": "YulTypedName",
														"src": "8188:6:14",
														"type": ""
													}
												],
												"src": "8077:572:14"
											},
											{
												"body": {
													"nativeSrc": "8709:325:14",
													"nodeType": "YulBlock",
													"src": "8709:325:14",
													"statements": [
														{
															"nativeSrc": "8719:22:14",
															"nodeType": "YulAssignment",
															"src": "8719:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8733:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8733:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "8736:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8736:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8729:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8729:3:14"
																},
																"nativeSrc": "8729:12:14",
																"nodeType": "YulFunctionCall",
																"src": "8729:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8719:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8719:6:14"
																}
															]
														},
														{
															"nativeSrc": "8750:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8750:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8780:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8780:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8786:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8786:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8776:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8776:3:14"
																},
																"nativeSrc": "8776:12:14",
																"nodeType": "YulFunctionCall",
																"src": "8776:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8754:18:14",
																	"nodeType": "YulTypedName",
																	"src": "8754:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8827:31:14",
																"nodeType": "YulBlock",
																"src": "8827:31:14",
																"statements": [
																	{
																		"nativeSrc": "8829:27:14",
																		"nodeType": "YulAssignment",
																		"src": "8829:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8843:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "8843:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8851:4:14",
																					"nodeType": "YulLiteral",
																					"src": "8851:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8839:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8839:3:14"
																			},
																			"nativeSrc": "8839:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8839:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8829:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8829:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8807:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "8807:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8800:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8800:6:14"
																},
																"nativeSrc": "8800:26:14",
																"nodeType": "YulFunctionCall",
																"src": "8800:26:14"
															},
															"nativeSrc": "8797:61:14",
															"nodeType": "YulIf",
															"src": "8797:61:14"
														},
														{
															"body": {
																"nativeSrc": "8917:111:14",
																"nodeType": "YulBlock",
																"src": "8917:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8938:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8938:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8945:3:14",
																							"nodeType": "YulLiteral",
																							"src": "8945:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8950:10:14",
																							"nodeType": "YulLiteral",
																							"src": "8950:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8941:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8941:3:14"
																					},
																					"nativeSrc": "8941:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8941:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8931:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8931:6:14"
																			},
																			"nativeSrc": "8931:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8931:31:14"
																		},
																		"nativeSrc": "8931:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8931:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8982:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8982:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8985:4:14",
																					"nodeType": "YulLiteral",
																					"src": "8985:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8975:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8975:6:14"
																			},
																			"nativeSrc": "8975:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8975:15:14"
																		},
																		"nativeSrc": "8975:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8975:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9010:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9010:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9013:4:14",
																					"nodeType": "YulLiteral",
																					"src": "9013:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9003:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:14"
																			},
																			"nativeSrc": "9003:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9003:15:14"
																		},
																		"nativeSrc": "9003:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9003:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8873:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "8873:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8896:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8896:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8904:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8904:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8893:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8893:2:14"
																		},
																		"nativeSrc": "8893:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8893:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8870:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8870:2:14"
																},
																"nativeSrc": "8870:38:14",
																"nodeType": "YulFunctionCall",
																"src": "8870:38:14"
															},
															"nativeSrc": "8867:161:14",
															"nodeType": "YulIf",
															"src": "8867:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8654:380:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8689:4:14",
														"nodeType": "YulTypedName",
														"src": "8689:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8698:6:14",
														"nodeType": "YulTypedName",
														"src": "8698:6:14",
														"type": ""
													}
												],
												"src": "8654:380:14"
											},
											{
												"body": {
													"nativeSrc": "9071:95:14",
													"nodeType": "YulBlock",
													"src": "9071:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9088:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9088:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9095:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9095:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9100:10:14",
																				"nodeType": "YulLiteral",
																				"src": "9100:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9091:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9091:3:14"
																		},
																		"nativeSrc": "9091:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9091:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9081:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9081:6:14"
																},
																"nativeSrc": "9081:31:14",
																"nodeType": "YulFunctionCall",
																"src": "9081:31:14"
															},
															"nativeSrc": "9081:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "9081:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9128:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9128:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9131:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9131:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9121:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9121:6:14"
																},
																"nativeSrc": "9121:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9121:15:14"
															},
															"nativeSrc": "9121:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9121:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9152:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9152:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9155:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9145:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9145:6:14"
																},
																"nativeSrc": "9145:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9145:15:14"
															},
															"nativeSrc": "9145:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9145:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9039:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "9039:127:14"
											},
											{
												"body": {
													"nativeSrc": "9219:77:14",
													"nodeType": "YulBlock",
													"src": "9219:77:14",
													"statements": [
														{
															"nativeSrc": "9229:16:14",
															"nodeType": "YulAssignment",
															"src": "9229:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9240:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9240:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9243:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9243:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9236:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9236:3:14"
																},
																"nativeSrc": "9236:9:14",
																"nodeType": "YulFunctionCall",
																"src": "9236:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9229:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9229:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9268:22:14",
																"nodeType": "YulBlock",
																"src": "9268:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9270:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "9270:16:14"
																			},
																			"nativeSrc": "9270:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9270:18:14"
																		},
																		"nativeSrc": "9270:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9270:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9260:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9260:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9263:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9263:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9257:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9257:2:14"
																},
																"nativeSrc": "9257:10:14",
																"nodeType": "YulFunctionCall",
																"src": "9257:10:14"
															},
															"nativeSrc": "9254:36:14",
															"nodeType": "YulIf",
															"src": "9254:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9171:125:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9202:1:14",
														"nodeType": "YulTypedName",
														"src": "9202:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9205:1:14",
														"nodeType": "YulTypedName",
														"src": "9205:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9211:3:14",
														"nodeType": "YulTypedName",
														"src": "9211:3:14",
														"type": ""
													}
												],
												"src": "9171:125:14"
											},
											{
												"body": {
													"nativeSrc": "9475:153:14",
													"nodeType": "YulBlock",
													"src": "9475:153:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9492:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9492:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9503:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9503:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9485:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9485:6:14"
																},
																"nativeSrc": "9485:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9485:21:14"
															},
															"nativeSrc": "9485:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9485:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9526:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9526:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9537:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9537:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9522:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9522:3:14"
																		},
																		"nativeSrc": "9522:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9522:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9542:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9542:1:14",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9515:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9515:6:14"
																},
																"nativeSrc": "9515:29:14",
																"nodeType": "YulFunctionCall",
																"src": "9515:29:14"
															},
															"nativeSrc": "9515:29:14",
															"nodeType": "YulExpressionStatement",
															"src": "9515:29:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9564:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9564:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9575:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9575:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9560:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9560:3:14"
																		},
																		"nativeSrc": "9560:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9560:18:14"
																	},
																	{
																		"hexValue": "6e616d65",
																		"kind": "string",
																		"nativeSrc": "9580:6:14",
																		"nodeType": "YulLiteral",
																		"src": "9580:6:14",
																		"type": "",
																		"value": "name"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9553:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9553:6:14"
																},
																"nativeSrc": "9553:34:14",
																"nodeType": "YulFunctionCall",
																"src": "9553:34:14"
															},
															"nativeSrc": "9553:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "9553:34:14"
														},
														{
															"nativeSrc": "9596:26:14",
															"nodeType": "YulAssignment",
															"src": "9596:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9608:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9608:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9619:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9619:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9604:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9604:3:14"
																},
																"nativeSrc": "9604:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9604:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9596:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9596:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9301:327:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9452:9:14",
														"nodeType": "YulTypedName",
														"src": "9452:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9466:4:14",
														"nodeType": "YulTypedName",
														"src": "9466:4:14",
														"type": ""
													}
												],
												"src": "9301:327:14"
											},
											{
												"body": {
													"nativeSrc": "9683:162:14",
													"nodeType": "YulBlock",
													"src": "9683:162:14",
													"statements": [
														{
															"nativeSrc": "9693:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9693:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9713:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9713:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9707:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9707:5:14"
																},
																"nativeSrc": "9707:12:14",
																"nodeType": "YulFunctionCall",
																"src": "9707:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9697:6:14",
																	"nodeType": "YulTypedName",
																	"src": "9697:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9734:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9734:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9743:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9743:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9750:4:14",
																				"nodeType": "YulLiteral",
																				"src": "9750:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9739:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9739:3:14"
																		},
																		"nativeSrc": "9739:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9739:16:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9757:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9757:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "9728:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9728:5:14"
																},
																"nativeSrc": "9728:36:14",
																"nodeType": "YulFunctionCall",
																"src": "9728:36:14"
															},
															"nativeSrc": "9728:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "9728:36:14"
														},
														{
															"nativeSrc": "9773:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9773:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9787:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9787:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9792:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9792:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9783:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9783:3:14"
																},
																"nativeSrc": "9783:16:14",
																"nodeType": "YulFunctionCall",
																"src": "9783:16:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9777:2:14",
																	"nodeType": "YulTypedName",
																	"src": "9777:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "9815:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "9815:2:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9819:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9819:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9808:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9808:6:14"
																},
																"nativeSrc": "9808:13:14",
																"nodeType": "YulFunctionCall",
																"src": "9808:13:14"
															},
															"nativeSrc": "9808:13:14",
															"nodeType": "YulExpressionStatement",
															"src": "9808:13:14"
														},
														{
															"nativeSrc": "9830:9:14",
															"nodeType": "YulAssignment",
															"src": "9830:9:14",
															"value": {
																"name": "_1",
																"nativeSrc": "9837:2:14",
																"nodeType": "YulIdentifier",
																"src": "9837:2:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9830:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9830:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "9633:212:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9660:5:14",
														"nodeType": "YulTypedName",
														"src": "9660:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9667:3:14",
														"nodeType": "YulTypedName",
														"src": "9667:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9675:3:14",
														"nodeType": "YulTypedName",
														"src": "9675:3:14",
														"type": ""
													}
												],
												"src": "9633:212:14"
											},
											{
												"body": {
													"nativeSrc": "10090:108:14",
													"nodeType": "YulBlock",
													"src": "10090:108:14",
													"statements": [
														{
															"nativeSrc": "10100:40:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10100:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10128:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10128:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10136:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10136:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "10110:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "10110:17:14"
																},
																"nativeSrc": "10110:30:14",
																"nodeType": "YulFunctionCall",
																"src": "10110:30:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10104:2:14",
																	"nodeType": "YulTypedName",
																	"src": "10104:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "10156:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "10156:2:14"
																	},
																	{
																		"hexValue": "2d4c50",
																		"kind": "string",
																		"nativeSrc": "10160:5:14",
																		"nodeType": "YulLiteral",
																		"src": "10160:5:14",
																		"type": "",
																		"value": "-LP"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10149:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10149:6:14"
																},
																"nativeSrc": "10149:17:14",
																"nodeType": "YulFunctionCall",
																"src": "10149:17:14"
															},
															"nativeSrc": "10149:17:14",
															"nodeType": "YulExpressionStatement",
															"src": "10149:17:14"
														},
														{
															"nativeSrc": "10175:17:14",
															"nodeType": "YulAssignment",
															"src": "10175:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "10186:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "10186:2:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10190:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10190:1:14",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10182:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10182:3:14"
																},
																"nativeSrc": "10182:10:14",
																"nodeType": "YulFunctionCall",
																"src": "10182:10:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10175:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10175:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_d99d682fc356fa21b92bd2fb80417dfa6820fd52fa032cb0ed3383e56770a7d7__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9850:348:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10066:3:14",
														"nodeType": "YulTypedName",
														"src": "10066:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10071:6:14",
														"nodeType": "YulTypedName",
														"src": "10071:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10082:3:14",
														"nodeType": "YulTypedName",
														"src": "10082:3:14",
														"type": ""
													}
												],
												"src": "9850:348:14"
											},
											{
												"body": {
													"nativeSrc": "10311:101:14",
													"nodeType": "YulBlock",
													"src": "10311:101:14",
													"statements": [
														{
															"nativeSrc": "10321:26:14",
															"nodeType": "YulAssignment",
															"src": "10321:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10333:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10333:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10344:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10344:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10329:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10329:3:14"
																},
																"nativeSrc": "10329:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10329:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10321:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10321:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10363:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10363:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10378:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10378:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10386:18:14",
																				"nodeType": "YulLiteral",
																				"src": "10386:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10374:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10374:3:14"
																		},
																		"nativeSrc": "10374:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10374:31:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10356:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10356:6:14"
																},
																"nativeSrc": "10356:50:14",
																"nodeType": "YulFunctionCall",
																"src": "10356:50:14"
															},
															"nativeSrc": "10356:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "10356:50:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "10203:209:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10280:9:14",
														"nodeType": "YulTypedName",
														"src": "10280:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10291:6:14",
														"nodeType": "YulTypedName",
														"src": "10291:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10302:4:14",
														"nodeType": "YulTypedName",
														"src": "10302:4:14",
														"type": ""
													}
												],
												"src": "10203:209:14"
											},
											{
												"body": {
													"nativeSrc": "10466:79:14",
													"nodeType": "YulBlock",
													"src": "10466:79:14",
													"statements": [
														{
															"nativeSrc": "10476:17:14",
															"nodeType": "YulAssignment",
															"src": "10476:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10488:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10488:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10491:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10491:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10484:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10484:3:14"
																},
																"nativeSrc": "10484:9:14",
																"nodeType": "YulFunctionCall",
																"src": "10484:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10476:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10476:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10517:22:14",
																"nodeType": "YulBlock",
																"src": "10517:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10519:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "10519:16:14"
																			},
																			"nativeSrc": "10519:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10519:18:14"
																		},
																		"nativeSrc": "10519:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10519:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10508:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "10508:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10514:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10514:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10505:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "10505:2:14"
																},
																"nativeSrc": "10505:11:14",
																"nodeType": "YulFunctionCall",
																"src": "10505:11:14"
															},
															"nativeSrc": "10502:37:14",
															"nodeType": "YulIf",
															"src": "10502:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10417:128:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10448:1:14",
														"nodeType": "YulTypedName",
														"src": "10448:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10451:1:14",
														"nodeType": "YulTypedName",
														"src": "10451:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10457:4:14",
														"nodeType": "YulTypedName",
														"src": "10457:4:14",
														"type": ""
													}
												],
												"src": "10417:128:14"
											},
											{
												"body": {
													"nativeSrc": "10596:171:14",
													"nodeType": "YulBlock",
													"src": "10596:171:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10627:111:14",
																"nodeType": "YulBlock",
																"src": "10627:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10648:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10648:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10655:3:14",
																							"nodeType": "YulLiteral",
																							"src": "10655:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10660:10:14",
																							"nodeType": "YulLiteral",
																							"src": "10660:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10651:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "10651:3:14"
																					},
																					"nativeSrc": "10651:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10651:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10641:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10641:6:14"
																			},
																			"nativeSrc": "10641:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10641:31:14"
																		},
																		"nativeSrc": "10641:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10641:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10692:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10692:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10695:4:14",
																					"nodeType": "YulLiteral",
																					"src": "10695:4:14",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10685:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10685:6:14"
																			},
																			"nativeSrc": "10685:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10685:15:14"
																		},
																		"nativeSrc": "10685:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10685:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10720:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10720:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10723:4:14",
																					"nodeType": "YulLiteral",
																					"src": "10723:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10713:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10713:6:14"
																			},
																			"nativeSrc": "10713:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10713:15:14"
																		},
																		"nativeSrc": "10713:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10713:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10616:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10616:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10609:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10609:6:14"
																},
																"nativeSrc": "10609:9:14",
																"nodeType": "YulFunctionCall",
																"src": "10609:9:14"
															},
															"nativeSrc": "10606:132:14",
															"nodeType": "YulIf",
															"src": "10606:132:14"
														},
														{
															"nativeSrc": "10747:14:14",
															"nodeType": "YulAssignment",
															"src": "10747:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10756:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10756:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10759:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10759:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10752:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10752:3:14"
																},
																"nativeSrc": "10752:9:14",
																"nodeType": "YulFunctionCall",
																"src": "10752:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10747:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "10747:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10550:217:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10581:1:14",
														"nodeType": "YulTypedName",
														"src": "10581:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10584:1:14",
														"nodeType": "YulTypedName",
														"src": "10584:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10590:1:14",
														"nodeType": "YulTypedName",
														"src": "10590:1:14",
														"type": ""
													}
												],
												"src": "10550:217:14"
											},
											{
												"body": {
													"nativeSrc": "10901:119:14",
													"nodeType": "YulBlock",
													"src": "10901:119:14",
													"statements": [
														{
															"nativeSrc": "10911:26:14",
															"nodeType": "YulAssignment",
															"src": "10911:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10923:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10923:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10934:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10934:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10919:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10919:3:14"
																},
																"nativeSrc": "10919:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10919:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10911:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10911:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10953:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10953:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "10964:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10964:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10946:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10946:6:14"
																},
																"nativeSrc": "10946:25:14",
																"nodeType": "YulFunctionCall",
																"src": "10946:25:14"
															},
															"nativeSrc": "10946:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "10946:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10991:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10991:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11002:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11002:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10987:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10987:3:14"
																		},
																		"nativeSrc": "10987:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10987:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11007:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11007:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10980:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10980:6:14"
																},
																"nativeSrc": "10980:34:14",
																"nodeType": "YulFunctionCall",
																"src": "10980:34:14"
															},
															"nativeSrc": "10980:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "10980:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10772:248:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10862:9:14",
														"nodeType": "YulTypedName",
														"src": "10862:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10873:6:14",
														"nodeType": "YulTypedName",
														"src": "10873:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10881:6:14",
														"nodeType": "YulTypedName",
														"src": "10881:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10892:4:14",
														"nodeType": "YulTypedName",
														"src": "10892:4:14",
														"type": ""
													}
												],
												"src": "10772:248:14"
											},
											{
												"body": {
													"nativeSrc": "11106:103:14",
													"nodeType": "YulBlock",
													"src": "11106:103:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11152:16:14",
																"nodeType": "YulBlock",
																"src": "11152:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11161:1:14",
																					"nodeType": "YulLiteral",
																					"src": "11161:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11164:1:14",
																					"nodeType": "YulLiteral",
																					"src": "11164:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11154:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11154:6:14"
																			},
																			"nativeSrc": "11154:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11154:12:14"
																		},
																		"nativeSrc": "11154:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11154:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11127:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11127:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11136:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11136:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11123:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11123:3:14"
																		},
																		"nativeSrc": "11123:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11123:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11148:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11148:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11119:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11119:3:14"
																},
																"nativeSrc": "11119:32:14",
																"nodeType": "YulFunctionCall",
																"src": "11119:32:14"
															},
															"nativeSrc": "11116:52:14",
															"nodeType": "YulIf",
															"src": "11116:52:14"
														},
														{
															"nativeSrc": "11177:26:14",
															"nodeType": "YulAssignment",
															"src": "11177:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11193:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11193:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11187:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "11187:5:14"
																},
																"nativeSrc": "11187:16:14",
																"nodeType": "YulFunctionCall",
																"src": "11187:16:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11177:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11177:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11025:184:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11072:9:14",
														"nodeType": "YulTypedName",
														"src": "11072:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11083:7:14",
														"nodeType": "YulTypedName",
														"src": "11083:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11095:6:14",
														"nodeType": "YulTypedName",
														"src": "11095:6:14",
														"type": ""
													}
												],
												"src": "11025:184:14"
											},
											{
												"body": {
													"nativeSrc": "11246:95:14",
													"nodeType": "YulBlock",
													"src": "11246:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11263:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11263:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11270:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11270:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11275:10:14",
																				"nodeType": "YulLiteral",
																				"src": "11275:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11266:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11266:3:14"
																		},
																		"nativeSrc": "11266:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11266:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11256:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11256:6:14"
																},
																"nativeSrc": "11256:31:14",
																"nodeType": "YulFunctionCall",
																"src": "11256:31:14"
															},
															"nativeSrc": "11256:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "11256:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11303:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11303:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11306:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11306:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11296:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11296:6:14"
																},
																"nativeSrc": "11296:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11296:15:14"
															},
															"nativeSrc": "11296:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "11296:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11327:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11327:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11330:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11330:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11320:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11320:6:14"
																},
																"nativeSrc": "11320:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11320:15:14"
															},
															"nativeSrc": "11320:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "11320:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "11214:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "11214:127:14"
											},
											{
												"body": {
													"nativeSrc": "11427:170:14",
													"nodeType": "YulBlock",
													"src": "11427:170:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11473:16:14",
																"nodeType": "YulBlock",
																"src": "11473:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11482:1:14",
																					"nodeType": "YulLiteral",
																					"src": "11482:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11485:1:14",
																					"nodeType": "YulLiteral",
																					"src": "11485:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11475:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11475:6:14"
																			},
																			"nativeSrc": "11475:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11475:12:14"
																		},
																		"nativeSrc": "11475:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11475:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11448:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11448:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11457:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11457:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11444:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11444:3:14"
																		},
																		"nativeSrc": "11444:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11444:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11469:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11469:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11440:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11440:3:14"
																},
																"nativeSrc": "11440:32:14",
																"nodeType": "YulFunctionCall",
																"src": "11440:32:14"
															},
															"nativeSrc": "11437:52:14",
															"nodeType": "YulIf",
															"src": "11437:52:14"
														},
														{
															"nativeSrc": "11498:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "11498:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11517:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11517:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11511:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "11511:5:14"
																},
																"nativeSrc": "11511:16:14",
																"nodeType": "YulFunctionCall",
																"src": "11511:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11502:5:14",
																	"nodeType": "YulTypedName",
																	"src": "11502:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11561:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "11561:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "11536:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "11536:24:14"
																},
																"nativeSrc": "11536:31:14",
																"nodeType": "YulFunctionCall",
																"src": "11536:31:14"
															},
															"nativeSrc": "11536:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "11536:31:14"
														},
														{
															"nativeSrc": "11576:15:14",
															"nodeType": "YulAssignment",
															"src": "11576:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "11586:5:14",
																"nodeType": "YulIdentifier",
																"src": "11586:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11576:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "11346:251:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11393:9:14",
														"nodeType": "YulTypedName",
														"src": "11393:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11404:7:14",
														"nodeType": "YulTypedName",
														"src": "11404:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11416:6:14",
														"nodeType": "YulTypedName",
														"src": "11416:6:14",
														"type": ""
													}
												],
												"src": "11346:251:14"
											},
											{
												"body": {
													"nativeSrc": "11731:171:14",
													"nodeType": "YulBlock",
													"src": "11731:171:14",
													"statements": [
														{
															"nativeSrc": "11741:26:14",
															"nodeType": "YulAssignment",
															"src": "11741:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11753:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11753:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11764:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11764:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11749:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11749:3:14"
																},
																"nativeSrc": "11749:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11749:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11741:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11741:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11783:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11783:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11798:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11798:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11814:3:14",
																								"nodeType": "YulLiteral",
																								"src": "11814:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11819:1:14",
																								"nodeType": "YulLiteral",
																								"src": "11819:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11810:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11810:3:14"
																						},
																						"nativeSrc": "11810:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "11810:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11823:1:14",
																						"nodeType": "YulLiteral",
																						"src": "11823:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11806:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11806:3:14"
																				},
																				"nativeSrc": "11806:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11806:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11794:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11794:3:14"
																		},
																		"nativeSrc": "11794:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11794:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11776:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:14"
																},
																"nativeSrc": "11776:51:14",
																"nodeType": "YulFunctionCall",
																"src": "11776:51:14"
															},
															"nativeSrc": "11776:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "11776:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11847:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11847:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11858:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11858:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11843:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11843:3:14"
																		},
																		"nativeSrc": "11843:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11843:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11867:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11867:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11883:3:14",
																								"nodeType": "YulLiteral",
																								"src": "11883:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11888:1:14",
																								"nodeType": "YulLiteral",
																								"src": "11888:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11879:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11879:3:14"
																						},
																						"nativeSrc": "11879:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "11879:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11892:1:14",
																						"nodeType": "YulLiteral",
																						"src": "11892:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11875:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11875:3:14"
																				},
																				"nativeSrc": "11875:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11875:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11863:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11863:3:14"
																		},
																		"nativeSrc": "11863:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11863:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11836:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11836:6:14"
																},
																"nativeSrc": "11836:60:14",
																"nodeType": "YulFunctionCall",
																"src": "11836:60:14"
															},
															"nativeSrc": "11836:60:14",
															"nodeType": "YulExpressionStatement",
															"src": "11836:60:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "11602:300:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11692:9:14",
														"nodeType": "YulTypedName",
														"src": "11692:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11703:6:14",
														"nodeType": "YulTypedName",
														"src": "11703:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11711:6:14",
														"nodeType": "YulTypedName",
														"src": "11711:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11722:4:14",
														"nodeType": "YulTypedName",
														"src": "11722:4:14",
														"type": ""
													}
												],
												"src": "11602:300:14"
											},
											{
												"body": {
													"nativeSrc": "12013:895:14",
													"nodeType": "YulBlock",
													"src": "12013:895:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12059:16:14",
																"nodeType": "YulBlock",
																"src": "12059:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12068:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12068:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12071:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12071:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12061:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12061:6:14"
																			},
																			"nativeSrc": "12061:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12061:12:14"
																		},
																		"nativeSrc": "12061:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12061:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12034:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12034:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12043:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12043:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12030:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12030:3:14"
																		},
																		"nativeSrc": "12030:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12030:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12055:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12055:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12026:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12026:3:14"
																},
																"nativeSrc": "12026:32:14",
																"nodeType": "YulFunctionCall",
																"src": "12026:32:14"
															},
															"nativeSrc": "12023:52:14",
															"nodeType": "YulIf",
															"src": "12023:52:14"
														},
														{
															"nativeSrc": "12084:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12084:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12104:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12104:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12098:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12098:5:14"
																},
																"nativeSrc": "12098:16:14",
																"nodeType": "YulFunctionCall",
																"src": "12098:16:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "12088:6:14",
																	"nodeType": "YulTypedName",
																	"src": "12088:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12157:16:14",
																"nodeType": "YulBlock",
																"src": "12157:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12166:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12166:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12169:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12169:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12159:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12159:6:14"
																			},
																			"nativeSrc": "12159:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12159:12:14"
																		},
																		"nativeSrc": "12159:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12159:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12129:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12129:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12137:18:14",
																		"nodeType": "YulLiteral",
																		"src": "12137:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12126:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12126:2:14"
																},
																"nativeSrc": "12126:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12126:30:14"
															},
															"nativeSrc": "12123:50:14",
															"nodeType": "YulIf",
															"src": "12123:50:14"
														},
														{
															"nativeSrc": "12182:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12182:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12196:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12196:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "12207:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12207:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12192:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12192:3:14"
																},
																"nativeSrc": "12192:22:14",
																"nodeType": "YulFunctionCall",
																"src": "12192:22:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12186:2:14",
																	"nodeType": "YulTypedName",
																	"src": "12186:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12262:16:14",
																"nodeType": "YulBlock",
																"src": "12262:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12271:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12271:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12274:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12274:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12264:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12264:6:14"
																			},
																			"nativeSrc": "12264:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12264:12:14"
																		},
																		"nativeSrc": "12264:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12264:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "12241:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "12241:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12245:4:14",
																						"nodeType": "YulLiteral",
																						"src": "12245:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12237:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12237:3:14"
																				},
																				"nativeSrc": "12237:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12237:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12252:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12252:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12233:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12233:3:14"
																		},
																		"nativeSrc": "12233:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12233:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12226:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12226:6:14"
																},
																"nativeSrc": "12226:35:14",
																"nodeType": "YulFunctionCall",
																"src": "12226:35:14"
															},
															"nativeSrc": "12223:55:14",
															"nodeType": "YulIf",
															"src": "12223:55:14"
														},
														{
															"nativeSrc": "12287:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12287:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "12307:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "12307:2:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12301:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12301:5:14"
																},
																"nativeSrc": "12301:9:14",
																"nodeType": "YulFunctionCall",
																"src": "12301:9:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12291:6:14",
																	"nodeType": "YulTypedName",
																	"src": "12291:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12353:22:14",
																"nodeType": "YulBlock",
																"src": "12353:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12355:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "12355:16:14"
																			},
																			"nativeSrc": "12355:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12355:18:14"
																		},
																		"nativeSrc": "12355:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12355:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12325:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12325:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12333:18:14",
																		"nodeType": "YulLiteral",
																		"src": "12333:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12322:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12322:2:14"
																},
																"nativeSrc": "12322:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12322:30:14"
															},
															"nativeSrc": "12319:56:14",
															"nodeType": "YulIf",
															"src": "12319:56:14"
														},
														{
															"nativeSrc": "12384:24:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12384:24:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12398:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12398:1:14",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12401:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12401:6:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "12394:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12394:3:14"
																},
																"nativeSrc": "12394:14:14",
																"nodeType": "YulFunctionCall",
																"src": "12394:14:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "12388:2:14",
																	"nodeType": "YulTypedName",
																	"src": "12388:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12417:39:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12417:39:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "12448:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "12448:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12452:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12452:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12444:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12444:3:14"
																		},
																		"nativeSrc": "12444:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12444:11:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12428:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "12428:15:14"
																},
																"nativeSrc": "12428:28:14",
																"nodeType": "YulFunctionCall",
																"src": "12428:28:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12421:3:14",
																	"nodeType": "YulTypedName",
																	"src": "12421:3:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12465:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12465:16:14",
															"value": {
																"name": "dst",
																"nativeSrc": "12478:3:14",
																"nodeType": "YulIdentifier",
																"src": "12478:3:14"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "12469:5:14",
																	"nodeType": "YulTypedName",
																	"src": "12469:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "12497:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12497:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12502:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12502:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12490:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12490:6:14"
																},
																"nativeSrc": "12490:19:14",
																"nodeType": "YulFunctionCall",
																"src": "12490:19:14"
															},
															"nativeSrc": "12490:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "12490:19:14"
														},
														{
															"nativeSrc": "12518:19:14",
															"nodeType": "YulAssignment",
															"src": "12518:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "12529:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12529:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12534:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12534:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12525:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12525:3:14"
																},
																"nativeSrc": "12525:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12525:12:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "12518:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12518:3:14"
																}
															]
														},
														{
															"nativeSrc": "12546:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12546:34:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "12568:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "12568:2:14"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "12572:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "12572:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12564:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12564:3:14"
																		},
																		"nativeSrc": "12564:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12564:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12577:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12577:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12560:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12560:3:14"
																},
																"nativeSrc": "12560:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12560:20:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "12550:6:14",
																	"nodeType": "YulTypedName",
																	"src": "12550:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12612:16:14",
																"nodeType": "YulBlock",
																"src": "12612:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12621:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12621:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12624:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12624:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12614:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12614:6:14"
																			},
																			"nativeSrc": "12614:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12614:12:14"
																		},
																		"nativeSrc": "12614:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12614:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12595:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12595:6:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "12603:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "12603:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12592:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12592:2:14"
																},
																"nativeSrc": "12592:19:14",
																"nodeType": "YulFunctionCall",
																"src": "12592:19:14"
															},
															"nativeSrc": "12589:39:14",
															"nodeType": "YulIf",
															"src": "12589:39:14"
														},
														{
															"nativeSrc": "12637:22:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12637:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "12652:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "12652:2:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12656:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12656:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12648:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12648:3:14"
																},
																"nativeSrc": "12648:11:14",
																"nodeType": "YulFunctionCall",
																"src": "12648:11:14"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "12641:3:14",
																	"nodeType": "YulTypedName",
																	"src": "12641:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12724:154:14",
																"nodeType": "YulBlock",
																"src": "12724:154:14",
																"statements": [
																	{
																		"nativeSrc": "12738:23:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12738:23:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "12757:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12757:3:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "12751:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "12751:5:14"
																			},
																			"nativeSrc": "12751:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12751:10:14"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "12742:5:14",
																				"nodeType": "YulTypedName",
																				"src": "12742:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "12799:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "12799:5:14"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nativeSrc": "12774:24:14",
																				"nodeType": "YulIdentifier",
																				"src": "12774:24:14"
																			},
																			"nativeSrc": "12774:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12774:31:14"
																		},
																		"nativeSrc": "12774:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12774:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12825:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12825:3:14"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "12830:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "12830:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12818:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12818:6:14"
																			},
																			"nativeSrc": "12818:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12818:18:14"
																		},
																		"nativeSrc": "12818:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12818:18:14"
																	},
																	{
																		"nativeSrc": "12849:19:14",
																		"nodeType": "YulAssignment",
																		"src": "12849:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12860:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12860:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12865:2:14",
																					"nodeType": "YulLiteral",
																					"src": "12865:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12856:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12856:3:14"
																			},
																			"nativeSrc": "12856:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12856:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "12849:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12849:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12679:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12679:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12684:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12684:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12676:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12676:2:14"
																},
																"nativeSrc": "12676:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12676:15:14"
															},
															"nativeSrc": "12668:210:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12692:23:14",
																"nodeType": "YulBlock",
																"src": "12692:23:14",
																"statements": [
																	{
																		"nativeSrc": "12694:19:14",
																		"nodeType": "YulAssignment",
																		"src": "12694:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "12705:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12705:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12710:2:14",
																					"nodeType": "YulLiteral",
																					"src": "12710:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12701:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12701:3:14"
																			},
																			"nativeSrc": "12701:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12701:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "12694:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12694:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12672:3:14",
																"nodeType": "YulBlock",
																"src": "12672:3:14",
																"statements": []
															},
															"src": "12668:210:14"
														},
														{
															"nativeSrc": "12887:15:14",
															"nodeType": "YulAssignment",
															"src": "12887:15:14",
															"value": {
																"name": "array",
																"nativeSrc": "12897:5:14",
																"nodeType": "YulIdentifier",
																"src": "12897:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12887:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12887:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "11907:1001:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11979:9:14",
														"nodeType": "YulTypedName",
														"src": "11979:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11990:7:14",
														"nodeType": "YulTypedName",
														"src": "11990:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12002:6:14",
														"nodeType": "YulTypedName",
														"src": "12002:6:14",
														"type": ""
													}
												],
												"src": "11907:1001:14"
											},
											{
												"body": {
													"nativeSrc": "12965:116:14",
													"nodeType": "YulBlock",
													"src": "12965:116:14",
													"statements": [
														{
															"nativeSrc": "12975:20:14",
															"nodeType": "YulAssignment",
															"src": "12975:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12990:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12990:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12993:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12993:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12986:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12986:3:14"
																},
																"nativeSrc": "12986:9:14",
																"nodeType": "YulFunctionCall",
																"src": "12986:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12975:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "12975:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13053:22:14",
																"nodeType": "YulBlock",
																"src": "13053:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13055:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "13055:16:14"
																			},
																			"nativeSrc": "13055:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13055:18:14"
																		},
																		"nativeSrc": "13055:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13055:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13024:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "13024:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13017:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "13017:6:14"
																				},
																				"nativeSrc": "13017:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13017:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13031:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "13031:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13038:7:14",
																								"nodeType": "YulIdentifier",
																								"src": "13038:7:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13047:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "13047:1:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13034:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "13034:3:14"
																						},
																						"nativeSrc": "13034:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "13034:15:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13028:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "13028:2:14"
																				},
																				"nativeSrc": "13028:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13028:22:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13014:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13014:2:14"
																		},
																		"nativeSrc": "13014:37:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13014:37:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13007:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13007:6:14"
																},
																"nativeSrc": "13007:45:14",
																"nodeType": "YulFunctionCall",
																"src": "13007:45:14"
															},
															"nativeSrc": "13004:71:14",
															"nodeType": "YulIf",
															"src": "13004:71:14"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12913:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12944:1:14",
														"nodeType": "YulTypedName",
														"src": "12944:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12947:1:14",
														"nodeType": "YulTypedName",
														"src": "12947:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12953:7:14",
														"nodeType": "YulTypedName",
														"src": "12953:7:14",
														"type": ""
													}
												],
												"src": "12913:168:14"
											},
											{
												"body": {
													"nativeSrc": "13265:153:14",
													"nodeType": "YulBlock",
													"src": "13265:153:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13282:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13282:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "13293:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13293:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13275:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13275:6:14"
																},
																"nativeSrc": "13275:25:14",
																"nodeType": "YulFunctionCall",
																"src": "13275:25:14"
															},
															"nativeSrc": "13275:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "13275:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13320:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13320:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13331:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13331:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13316:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13316:3:14"
																		},
																		"nativeSrc": "13316:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13316:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13336:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13336:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13309:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13309:6:14"
																},
																"nativeSrc": "13309:30:14",
																"nodeType": "YulFunctionCall",
																"src": "13309:30:14"
															},
															"nativeSrc": "13309:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "13309:30:14"
														},
														{
															"nativeSrc": "13348:64:14",
															"nodeType": "YulAssignment",
															"src": "13348:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13385:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13385:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13397:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13397:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13408:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13408:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13393:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13393:3:14"
																		},
																		"nativeSrc": "13393:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13393:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nativeSrc": "13356:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "13356:28:14"
																},
																"nativeSrc": "13356:56:14",
																"nodeType": "YulFunctionCall",
																"src": "13356:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13348:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13348:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "13086:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13226:9:14",
														"nodeType": "YulTypedName",
														"src": "13226:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13237:6:14",
														"nodeType": "YulTypedName",
														"src": "13237:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13245:6:14",
														"nodeType": "YulTypedName",
														"src": "13245:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13256:4:14",
														"nodeType": "YulTypedName",
														"src": "13256:4:14",
														"type": ""
													}
												],
												"src": "13086:332:14"
											},
											{
												"body": {
													"nativeSrc": "13608:206:14",
													"nodeType": "YulBlock",
													"src": "13608:206:14",
													"statements": [
														{
															"nativeSrc": "13618:27:14",
															"nodeType": "YulAssignment",
															"src": "13618:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13630:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13630:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13641:3:14",
																		"nodeType": "YulLiteral",
																		"src": "13641:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13626:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13626:3:14"
																},
																"nativeSrc": "13626:19:14",
																"nodeType": "YulFunctionCall",
																"src": "13626:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13618:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13618:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13661:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13661:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "13672:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13672:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13654:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13654:6:14"
																},
																"nativeSrc": "13654:25:14",
																"nodeType": "YulFunctionCall",
																"src": "13654:25:14"
															},
															"nativeSrc": "13654:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "13654:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13699:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13699:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13710:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13710:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13695:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13695:3:14"
																		},
																		"nativeSrc": "13695:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13695:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13715:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13715:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13688:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13688:6:14"
																},
																"nativeSrc": "13688:34:14",
																"nodeType": "YulFunctionCall",
																"src": "13688:34:14"
															},
															"nativeSrc": "13688:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "13688:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13742:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13742:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13753:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13753:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13738:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13738:3:14"
																		},
																		"nativeSrc": "13738:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13738:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "13758:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13758:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13731:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13731:6:14"
																},
																"nativeSrc": "13731:34:14",
																"nodeType": "YulFunctionCall",
																"src": "13731:34:14"
															},
															"nativeSrc": "13731:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "13731:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13785:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13785:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13796:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13796:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13781:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13781:3:14"
																		},
																		"nativeSrc": "13781:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13781:18:14"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "13801:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13801:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13774:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13774:6:14"
																},
																"nativeSrc": "13774:34:14",
																"nodeType": "YulFunctionCall",
																"src": "13774:34:14"
															},
															"nativeSrc": "13774:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "13774:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13423:391:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13553:9:14",
														"nodeType": "YulTypedName",
														"src": "13553:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13564:6:14",
														"nodeType": "YulTypedName",
														"src": "13564:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13572:6:14",
														"nodeType": "YulTypedName",
														"src": "13572:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13580:6:14",
														"nodeType": "YulTypedName",
														"src": "13580:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13588:6:14",
														"nodeType": "YulTypedName",
														"src": "13588:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13599:4:14",
														"nodeType": "YulTypedName",
														"src": "13599:4:14",
														"type": ""
													}
												],
												"src": "13423:391:14"
											},
											{
												"body": {
													"nativeSrc": "13980:523:14",
													"nodeType": "YulBlock",
													"src": "13980:523:14",
													"statements": [
														{
															"nativeSrc": "13990:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "13990:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14008:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14008:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14019:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14019:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14004:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14004:3:14"
																},
																"nativeSrc": "14004:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14004:18:14"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "13994:6:14",
																	"nodeType": "YulTypedName",
																	"src": "13994:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14038:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14038:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14049:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14049:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14031:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14031:6:14"
																},
																"nativeSrc": "14031:21:14",
																"nodeType": "YulFunctionCall",
																"src": "14031:21:14"
															},
															"nativeSrc": "14031:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "14031:21:14"
														},
														{
															"nativeSrc": "14061:17:14",
															"nodeType": "YulVariableDeclaration",
															"src": "14061:17:14",
															"value": {
																"name": "tail_1",
																"nativeSrc": "14072:6:14",
																"nodeType": "YulIdentifier",
																"src": "14072:6:14"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "14065:3:14",
																	"nodeType": "YulTypedName",
																	"src": "14065:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "14094:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14094:6:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14102:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14102:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14087:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14087:6:14"
																},
																"nativeSrc": "14087:22:14",
																"nodeType": "YulFunctionCall",
																"src": "14087:22:14"
															},
															"nativeSrc": "14087:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "14087:22:14"
														},
														{
															"nativeSrc": "14118:25:14",
															"nodeType": "YulAssignment",
															"src": "14118:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14129:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14129:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14140:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14140:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14125:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14125:3:14"
																},
																"nativeSrc": "14125:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14125:18:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14118:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14118:3:14"
																}
															]
														},
														{
															"nativeSrc": "14152:20:14",
															"nodeType": "YulVariableDeclaration",
															"src": "14152:20:14",
															"value": {
																"name": "value0",
																"nativeSrc": "14166:6:14",
																"nodeType": "YulIdentifier",
																"src": "14166:6:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "14156:6:14",
																	"nodeType": "YulTypedName",
																	"src": "14156:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14181:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "14181:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "14190:1:14",
																"nodeType": "YulLiteral",
																"src": "14190:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "14185:1:14",
																	"nodeType": "YulTypedName",
																	"src": "14185:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14249:228:14",
																"nodeType": "YulBlock",
																"src": "14249:228:14",
																"statements": [
																	{
																		"nativeSrc": "14263:33:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14263:33:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14289:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "14289:6:14"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "14276:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "14276:12:14"
																			},
																			"nativeSrc": "14276:20:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14276:20:14"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "14267:5:14",
																				"nodeType": "YulTypedName",
																				"src": "14267:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "14334:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "14334:5:14"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nativeSrc": "14309:24:14",
																				"nodeType": "YulIdentifier",
																				"src": "14309:24:14"
																			},
																			"nativeSrc": "14309:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14309:31:14"
																		},
																		"nativeSrc": "14309:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14309:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "14360:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14360:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "14369:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "14369:5:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "14384:3:14",
																											"nodeType": "YulLiteral",
																											"src": "14384:3:14",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "14389:1:14",
																											"nodeType": "YulLiteral",
																											"src": "14389:1:14",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "14380:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "14380:3:14"
																									},
																									"nativeSrc": "14380:11:14",
																									"nodeType": "YulFunctionCall",
																									"src": "14380:11:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "14393:1:14",
																									"nodeType": "YulLiteral",
																									"src": "14393:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "14376:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "14376:3:14"
																							},
																							"nativeSrc": "14376:19:14",
																							"nodeType": "YulFunctionCall",
																							"src": "14376:19:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "14365:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "14365:3:14"
																					},
																					"nativeSrc": "14365:31:14",
																					"nodeType": "YulFunctionCall",
																					"src": "14365:31:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14353:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14353:6:14"
																			},
																			"nativeSrc": "14353:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14353:44:14"
																		},
																		"nativeSrc": "14353:44:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14353:44:14"
																	},
																	{
																		"nativeSrc": "14410:19:14",
																		"nodeType": "YulAssignment",
																		"src": "14410:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "14421:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14421:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14426:2:14",
																					"nodeType": "YulLiteral",
																					"src": "14426:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14417:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "14417:3:14"
																			},
																			"nativeSrc": "14417:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14417:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "14410:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "14410:3:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14442:25:14",
																		"nodeType": "YulAssignment",
																		"src": "14442:25:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14456:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "14456:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14464:2:14",
																					"nodeType": "YulLiteral",
																					"src": "14464:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14452:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "14452:3:14"
																			},
																			"nativeSrc": "14452:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14452:15:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "14442:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14442:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "14211:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "14211:1:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14214:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14214:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14208:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "14208:2:14"
																},
																"nativeSrc": "14208:13:14",
																"nodeType": "YulFunctionCall",
																"src": "14208:13:14"
															},
															"nativeSrc": "14200:277:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14222:18:14",
																"nodeType": "YulBlock",
																"src": "14222:18:14",
																"statements": [
																	{
																		"nativeSrc": "14224:14:14",
																		"nodeType": "YulAssignment",
																		"src": "14224:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "14233:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "14233:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14236:1:14",
																					"nodeType": "YulLiteral",
																					"src": "14236:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14229:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "14229:3:14"
																			},
																			"nativeSrc": "14229:9:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14229:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "14224:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "14224:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14204:3:14",
																"nodeType": "YulBlock",
																"src": "14204:3:14",
																"statements": []
															},
															"src": "14200:277:14"
														},
														{
															"nativeSrc": "14486:11:14",
															"nodeType": "YulAssignment",
															"src": "14486:11:14",
															"value": {
																"name": "pos",
																"nativeSrc": "14494:3:14",
																"nodeType": "YulIdentifier",
																"src": "14494:3:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14486:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14486:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "13819:684:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13941:9:14",
														"nodeType": "YulTypedName",
														"src": "13941:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13952:6:14",
														"nodeType": "YulTypedName",
														"src": "13952:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13960:6:14",
														"nodeType": "YulTypedName",
														"src": "13960:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13971:4:14",
														"nodeType": "YulTypedName",
														"src": "13971:4:14",
														"type": ""
													}
												],
												"src": "13819:684:14"
											},
											{
												"body": {
													"nativeSrc": "14665:188:14",
													"nodeType": "YulBlock",
													"src": "14665:188:14",
													"statements": [
														{
															"nativeSrc": "14675:26:14",
															"nodeType": "YulAssignment",
															"src": "14675:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14687:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14687:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14698:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14698:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14683:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14683:3:14"
																},
																"nativeSrc": "14683:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14683:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14675:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14675:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14717:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14717:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14732:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14732:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14748:3:14",
																								"nodeType": "YulLiteral",
																								"src": "14748:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14753:1:14",
																								"nodeType": "YulLiteral",
																								"src": "14753:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14744:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "14744:3:14"
																						},
																						"nativeSrc": "14744:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "14744:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14757:1:14",
																						"nodeType": "YulLiteral",
																						"src": "14757:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14740:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14740:3:14"
																				},
																				"nativeSrc": "14740:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14740:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14728:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14728:3:14"
																		},
																		"nativeSrc": "14728:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14728:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14710:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14710:6:14"
																},
																"nativeSrc": "14710:51:14",
																"nodeType": "YulFunctionCall",
																"src": "14710:51:14"
															},
															"nativeSrc": "14710:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "14710:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14781:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14781:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14792:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14792:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14777:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14777:3:14"
																		},
																		"nativeSrc": "14777:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14777:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14797:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14797:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14770:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14770:6:14"
																},
																"nativeSrc": "14770:34:14",
																"nodeType": "YulFunctionCall",
																"src": "14770:34:14"
															},
															"nativeSrc": "14770:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "14770:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14824:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14824:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14835:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14835:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14820:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14820:3:14"
																		},
																		"nativeSrc": "14820:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14820:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "14840:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14840:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14813:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14813:6:14"
																},
																"nativeSrc": "14813:34:14",
																"nodeType": "YulFunctionCall",
																"src": "14813:34:14"
															},
															"nativeSrc": "14813:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "14813:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14508:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14618:9:14",
														"nodeType": "YulTypedName",
														"src": "14618:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14629:6:14",
														"nodeType": "YulTypedName",
														"src": "14629:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14637:6:14",
														"nodeType": "YulTypedName",
														"src": "14637:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14645:6:14",
														"nodeType": "YulTypedName",
														"src": "14645:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14656:4:14",
														"nodeType": "YulTypedName",
														"src": "14656:4:14",
														"type": ""
													}
												],
												"src": "14508:345:14"
											},
											{
												"body": {
													"nativeSrc": "14987:145:14",
													"nodeType": "YulBlock",
													"src": "14987:145:14",
													"statements": [
														{
															"nativeSrc": "14997:26:14",
															"nodeType": "YulAssignment",
															"src": "14997:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15009:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15009:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15020:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15020:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15005:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15005:3:14"
																},
																"nativeSrc": "15005:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15005:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14997:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14997:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15039:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15039:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15054:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15054:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15070:3:14",
																								"nodeType": "YulLiteral",
																								"src": "15070:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15075:1:14",
																								"nodeType": "YulLiteral",
																								"src": "15075:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15066:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "15066:3:14"
																						},
																						"nativeSrc": "15066:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "15066:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15079:1:14",
																						"nodeType": "YulLiteral",
																						"src": "15079:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15062:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15062:3:14"
																				},
																				"nativeSrc": "15062:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15062:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15050:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15050:3:14"
																		},
																		"nativeSrc": "15050:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15050:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15032:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15032:6:14"
																},
																"nativeSrc": "15032:51:14",
																"nodeType": "YulFunctionCall",
																"src": "15032:51:14"
															},
															"nativeSrc": "15032:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "15032:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15103:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15103:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15114:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15114:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15099:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15099:3:14"
																		},
																		"nativeSrc": "15099:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15099:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15119:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15119:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15092:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15092:6:14"
																},
																"nativeSrc": "15092:34:14",
																"nodeType": "YulFunctionCall",
																"src": "15092:34:14"
															},
															"nativeSrc": "15092:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "15092:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14858:274:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14948:9:14",
														"nodeType": "YulTypedName",
														"src": "14948:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14959:6:14",
														"nodeType": "YulTypedName",
														"src": "14959:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14967:6:14",
														"nodeType": "YulTypedName",
														"src": "14967:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14978:4:14",
														"nodeType": "YulTypedName",
														"src": "14978:4:14",
														"type": ""
													}
												],
												"src": "14858:274:14"
											},
											{
												"body": {
													"nativeSrc": "15193:65:14",
													"nodeType": "YulBlock",
													"src": "15193:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15210:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15210:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15213:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15213:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15203:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15203:6:14"
																},
																"nativeSrc": "15203:14:14",
																"nodeType": "YulFunctionCall",
																"src": "15203:14:14"
															},
															"nativeSrc": "15203:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "15203:14:14"
														},
														{
															"nativeSrc": "15226:26:14",
															"nodeType": "YulAssignment",
															"src": "15226:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15244:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15244:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15247:4:14",
																		"nodeType": "YulLiteral",
																		"src": "15247:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "15234:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "15234:9:14"
																},
																"nativeSrc": "15234:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15234:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15226:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15226:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "15137:121:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15176:3:14",
														"nodeType": "YulTypedName",
														"src": "15176:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15184:4:14",
														"nodeType": "YulTypedName",
														"src": "15184:4:14",
														"type": ""
													}
												],
												"src": "15137:121:14"
											},
											{
												"body": {
													"nativeSrc": "15344:437:14",
													"nodeType": "YulBlock",
													"src": "15344:437:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "15377:398:14",
																"nodeType": "YulBlock",
																"src": "15377:398:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15398:1:14",
																					"nodeType": "YulLiteral",
																					"src": "15398:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "15401:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "15401:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "15391:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15391:6:14"
																			},
																			"nativeSrc": "15391:16:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15391:16:14"
																		},
																		"nativeSrc": "15391:16:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "15391:16:14"
																	},
																	{
																		"nativeSrc": "15420:30:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15420:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15442:1:14",
																					"nodeType": "YulLiteral",
																					"src": "15442:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15445:4:14",
																					"nodeType": "YulLiteral",
																					"src": "15445:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "15432:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15432:9:14"
																			},
																			"nativeSrc": "15432:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15432:18:14"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "15424:4:14",
																				"nodeType": "YulTypedName",
																				"src": "15424:4:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15463:57:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15463:57:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "15486:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "15486:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15496:1:14",
																							"nodeType": "YulLiteral",
																							"src": "15496:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "15503:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "15503:10:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "15515:2:14",
																									"nodeType": "YulLiteral",
																									"src": "15515:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15499:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "15499:3:14"
																							},
																							"nativeSrc": "15499:19:14",
																							"nodeType": "YulFunctionCall",
																							"src": "15499:19:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "15492:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15492:3:14"
																					},
																					"nativeSrc": "15492:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "15492:27:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15482:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "15482:3:14"
																			},
																			"nativeSrc": "15482:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15482:38:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15467:11:14",
																				"nodeType": "YulTypedName",
																				"src": "15467:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15557:23:14",
																			"nodeType": "YulBlock",
																			"src": "15557:23:14",
																			"statements": [
																				{
																					"nativeSrc": "15559:19:14",
																					"nodeType": "YulAssignment",
																					"src": "15559:19:14",
																					"value": {
																						"name": "data",
																						"nativeSrc": "15574:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "15574:4:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "15559:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "15559:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "15539:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "15539:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15551:4:14",
																					"nodeType": "YulLiteral",
																					"src": "15551:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15536:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "15536:2:14"
																			},
																			"nativeSrc": "15536:20:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15536:20:14"
																		},
																		"nativeSrc": "15533:47:14",
																		"nodeType": "YulIf",
																		"src": "15533:47:14"
																	},
																	{
																		"nativeSrc": "15593:41:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15593:41:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "15607:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "15607:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15617:1:14",
																							"nodeType": "YulLiteral",
																							"src": "15617:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "15624:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "15624:3:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "15629:2:14",
																									"nodeType": "YulLiteral",
																									"src": "15629:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15620:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "15620:3:14"
																							},
																							"nativeSrc": "15620:12:14",
																							"nodeType": "YulFunctionCall",
																							"src": "15620:12:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "15613:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15613:3:14"
																					},
																					"nativeSrc": "15613:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "15613:20:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15603:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "15603:3:14"
																			},
																			"nativeSrc": "15603:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15603:31:14"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "15597:2:14",
																				"nodeType": "YulTypedName",
																				"src": "15597:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15647:24:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15647:24:14",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "15660:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "15660:11:14"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "15651:5:14",
																				"nodeType": "YulTypedName",
																				"src": "15651:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15745:20:14",
																			"nodeType": "YulBlock",
																			"src": "15745:20:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "15754:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "15754:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15761:1:14",
																								"nodeType": "YulLiteral",
																								"src": "15761:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "15747:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "15747:6:14"
																						},
																						"nativeSrc": "15747:16:14",
																						"nodeType": "YulFunctionCall",
																						"src": "15747:16:14"
																					},
																					"nativeSrc": "15747:16:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "15747:16:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15695:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "15695:5:14"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "15702:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "15702:2:14"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15692:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "15692:2:14"
																			},
																			"nativeSrc": "15692:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15692:13:14"
																		},
																		"nativeSrc": "15684:81:14",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "15706:26:14",
																			"nodeType": "YulBlock",
																			"src": "15706:26:14",
																			"statements": [
																				{
																					"nativeSrc": "15708:22:14",
																					"nodeType": "YulAssignment",
																					"src": "15708:22:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "15721:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "15721:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15728:1:14",
																								"nodeType": "YulLiteral",
																								"src": "15728:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "15717:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "15717:3:14"
																						},
																						"nativeSrc": "15717:13:14",
																						"nodeType": "YulFunctionCall",
																						"src": "15717:13:14"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "15708:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "15708:5:14"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "15688:3:14",
																			"nodeType": "YulBlock",
																			"src": "15688:3:14",
																			"statements": []
																		},
																		"src": "15684:81:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15360:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15360:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15365:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15365:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15357:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "15357:2:14"
																},
																"nativeSrc": "15357:11:14",
																"nodeType": "YulFunctionCall",
																"src": "15357:11:14"
															},
															"nativeSrc": "15354:421:14",
															"nodeType": "YulIf",
															"src": "15354:421:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "15263:518:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15316:5:14",
														"nodeType": "YulTypedName",
														"src": "15316:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15323:3:14",
														"nodeType": "YulTypedName",
														"src": "15323:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15328:10:14",
														"nodeType": "YulTypedName",
														"src": "15328:10:14",
														"type": ""
													}
												],
												"src": "15263:518:14"
											},
											{
												"body": {
													"nativeSrc": "15871:81:14",
													"nodeType": "YulBlock",
													"src": "15871:81:14",
													"statements": [
														{
															"nativeSrc": "15881:65:14",
															"nodeType": "YulAssignment",
															"src": "15881:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "15896:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15896:4:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "15914:1:14",
																										"nodeType": "YulLiteral",
																										"src": "15914:1:14",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "15917:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "15917:3:14"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "15910:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "15910:3:14"
																								},
																								"nativeSrc": "15910:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "15910:11:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "15927:1:14",
																										"nodeType": "YulLiteral",
																										"src": "15927:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "15923:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "15923:3:14"
																								},
																								"nativeSrc": "15923:6:14",
																								"nodeType": "YulFunctionCall",
																								"src": "15923:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "15906:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "15906:3:14"
																						},
																						"nativeSrc": "15906:24:14",
																						"nodeType": "YulFunctionCall",
																						"src": "15906:24:14"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "15902:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15902:3:14"
																				},
																				"nativeSrc": "15902:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15902:29:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15892:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15892:3:14"
																		},
																		"nativeSrc": "15892:40:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15892:40:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15938:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15938:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "15941:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "15941:3:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "15934:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15934:3:14"
																		},
																		"nativeSrc": "15934:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15934:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15889:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "15889:2:14"
																},
																"nativeSrc": "15889:57:14",
																"nodeType": "YulFunctionCall",
																"src": "15889:57:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "15881:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15881:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "15786:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15848:4:14",
														"nodeType": "YulTypedName",
														"src": "15848:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15854:3:14",
														"nodeType": "YulTypedName",
														"src": "15854:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "15862:4:14",
														"nodeType": "YulTypedName",
														"src": "15862:4:14",
														"type": ""
													}
												],
												"src": "15786:166:14"
											},
											{
												"body": {
													"nativeSrc": "16053:1203:14",
													"nodeType": "YulBlock",
													"src": "16053:1203:14",
													"statements": [
														{
															"nativeSrc": "16063:24:14",
															"nodeType": "YulVariableDeclaration",
															"src": "16063:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16083:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16083:3:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16077:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "16077:5:14"
																},
																"nativeSrc": "16077:10:14",
																"nodeType": "YulFunctionCall",
																"src": "16077:10:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "16067:6:14",
																	"nodeType": "YulTypedName",
																	"src": "16067:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16130:22:14",
																"nodeType": "YulBlock",
																"src": "16130:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16132:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "16132:16:14"
																			},
																			"nativeSrc": "16132:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16132:18:14"
																		},
																		"nativeSrc": "16132:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16132:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16102:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16102:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16110:18:14",
																		"nodeType": "YulLiteral",
																		"src": "16110:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16099:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16099:2:14"
																},
																"nativeSrc": "16099:30:14",
																"nodeType": "YulFunctionCall",
																"src": "16099:30:14"
															},
															"nativeSrc": "16096:56:14",
															"nodeType": "YulIf",
															"src": "16096:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16205:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16205:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "16243:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "16243:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16237:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "16237:5:14"
																				},
																				"nativeSrc": "16237:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16237:11:14"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "16211:25:14",
																			"nodeType": "YulIdentifier",
																			"src": "16211:25:14"
																		},
																		"nativeSrc": "16211:38:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16211:38:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "16251:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16251:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "16161:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "16161:43:14"
																},
																"nativeSrc": "16161:97:14",
																"nodeType": "YulFunctionCall",
																"src": "16161:97:14"
															},
															"nativeSrc": "16161:97:14",
															"nodeType": "YulExpressionStatement",
															"src": "16161:97:14"
														},
														{
															"nativeSrc": "16267:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "16267:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "16284:1:14",
																"nodeType": "YulLiteral",
																"src": "16284:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16271:9:14",
																	"nodeType": "YulTypedName",
																	"src": "16271:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16294:17:14",
															"nodeType": "YulAssignment",
															"src": "16294:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "16307:4:14",
																"nodeType": "YulLiteral",
																"src": "16307:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16294:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "16294:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "16357:642:14",
																		"nodeType": "YulBlock",
																		"src": "16357:642:14",
																		"statements": [
																			{
																				"nativeSrc": "16371:35:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16371:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "16390:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "16390:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "16402:2:14",
																									"nodeType": "YulLiteral",
																									"src": "16402:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "16398:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "16398:3:14"
																							},
																							"nativeSrc": "16398:7:14",
																							"nodeType": "YulFunctionCall",
																							"src": "16398:7:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "16386:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "16386:3:14"
																					},
																					"nativeSrc": "16386:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "16386:20:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "16375:7:14",
																						"nodeType": "YulTypedName",
																						"src": "16375:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16419:49:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16419:49:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16463:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "16463:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "16433:29:14",
																						"nodeType": "YulIdentifier",
																						"src": "16433:29:14"
																					},
																					"nativeSrc": "16433:35:14",
																					"nodeType": "YulFunctionCall",
																					"src": "16433:35:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "16423:6:14",
																						"nodeType": "YulTypedName",
																						"src": "16423:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16481:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16481:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16490:1:14",
																					"nodeType": "YulLiteral",
																					"src": "16490:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "16485:1:14",
																						"nodeType": "YulTypedName",
																						"src": "16485:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16561:165:14",
																					"nodeType": "YulBlock",
																					"src": "16561:165:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16586:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "16586:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "16604:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "16604:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "16609:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "16609:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "16600:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "16600:3:14"
																												},
																												"nativeSrc": "16600:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "16600:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "16594:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "16594:5:14"
																										},
																										"nativeSrc": "16594:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "16594:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16579:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "16579:6:14"
																								},
																								"nativeSrc": "16579:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16579:42:14"
																							},
																							"nativeSrc": "16579:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "16579:42:14"
																						},
																						{
																							"nativeSrc": "16638:24:14",
																							"nodeType": "YulAssignment",
																							"src": "16638:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16652:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "16652:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16660:1:14",
																										"nodeType": "YulLiteral",
																										"src": "16660:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16648:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "16648:3:14"
																								},
																								"nativeSrc": "16648:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16648:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "16638:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "16638:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "16679:33:14",
																							"nodeType": "YulAssignment",
																							"src": "16679:33:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "16696:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "16696:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16707:4:14",
																										"nodeType": "YulLiteral",
																										"src": "16707:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16692:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "16692:3:14"
																								},
																								"nativeSrc": "16692:20:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16692:20:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "16679:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "16679:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "16515:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "16515:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16518:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "16518:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16512:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "16512:2:14"
																					},
																					"nativeSrc": "16512:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "16512:14:14"
																				},
																				"nativeSrc": "16504:222:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "16527:21:14",
																					"nodeType": "YulBlock",
																					"src": "16527:21:14",
																					"statements": [
																						{
																							"nativeSrc": "16529:17:14",
																							"nodeType": "YulAssignment",
																							"src": "16529:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "16538:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "16538:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16541:4:14",
																										"nodeType": "YulLiteral",
																										"src": "16541:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16534:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "16534:3:14"
																								},
																								"nativeSrc": "16534:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16534:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "16529:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "16529:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "16508:3:14",
																					"nodeType": "YulBlock",
																					"src": "16508:3:14",
																					"statements": []
																				},
																				"src": "16504:222:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "16774:166:14",
																					"nodeType": "YulBlock",
																					"src": "16774:166:14",
																					"statements": [
																						{
																							"nativeSrc": "16792:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "16792:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "16819:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "16819:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "16824:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "16824:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16815:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "16815:3:14"
																										},
																										"nativeSrc": "16815:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "16815:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "16809:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "16809:5:14"
																								},
																								"nativeSrc": "16809:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16809:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "16796:9:14",
																									"nodeType": "YulTypedName",
																									"src": "16796:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16859:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "16859:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "16871:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "16871:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "16898:1:14",
																																				"nodeType": "YulLiteral",
																																				"src": "16898:1:14",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "16901:6:14",
																																				"nodeType": "YulIdentifier",
																																				"src": "16901:6:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "16894:3:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "16894:3:14"
																																		},
																																		"nativeSrc": "16894:14:14",
																																		"nodeType": "YulFunctionCall",
																																		"src": "16894:14:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "16910:3:14",
																																		"nodeType": "YulLiteral",
																																		"src": "16910:3:14",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "16890:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "16890:3:14"
																																},
																																"nativeSrc": "16890:24:14",
																																"nodeType": "YulFunctionCall",
																																"src": "16890:24:14"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "16920:1:14",
																																		"nodeType": "YulLiteral",
																																		"src": "16920:1:14",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "16916:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "16916:3:14"
																																},
																																"nativeSrc": "16916:6:14",
																																"nodeType": "YulFunctionCall",
																																"src": "16916:6:14"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "16886:3:14",
																															"nodeType": "YulIdentifier",
																															"src": "16886:3:14"
																														},
																														"nativeSrc": "16886:37:14",
																														"nodeType": "YulFunctionCall",
																														"src": "16886:37:14"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "16882:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "16882:3:14"
																												},
																												"nativeSrc": "16882:42:14",
																												"nodeType": "YulFunctionCall",
																												"src": "16882:42:14"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "16867:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "16867:3:14"
																										},
																										"nativeSrc": "16867:58:14",
																										"nodeType": "YulFunctionCall",
																										"src": "16867:58:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16852:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "16852:6:14"
																								},
																								"nativeSrc": "16852:74:14",
																								"nodeType": "YulFunctionCall",
																								"src": "16852:74:14"
																							},
																							"nativeSrc": "16852:74:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "16852:74:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16745:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "16745:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "16754:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "16754:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16742:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "16742:2:14"
																					},
																					"nativeSrc": "16742:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "16742:19:14"
																				},
																				"nativeSrc": "16739:201:14",
																				"nodeType": "YulIf",
																				"src": "16739:201:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16960:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "16960:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "16974:1:14",
																											"nodeType": "YulLiteral",
																											"src": "16974:1:14",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "16977:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "16977:6:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "16970:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "16970:3:14"
																									},
																									"nativeSrc": "16970:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "16970:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "16986:1:14",
																									"nodeType": "YulLiteral",
																									"src": "16986:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "16966:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "16966:3:14"
																							},
																							"nativeSrc": "16966:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "16966:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16953:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "16953:6:14"
																					},
																					"nativeSrc": "16953:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "16953:36:14"
																				},
																				"nativeSrc": "16953:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "16953:36:14"
																			}
																		]
																	},
																	"nativeSrc": "16350:649:14",
																	"nodeType": "YulCase",
																	"src": "16350:649:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16355:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16355:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17016:234:14",
																		"nodeType": "YulBlock",
																		"src": "17016:234:14",
																		"statements": [
																			{
																				"nativeSrc": "17030:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17030:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17043:1:14",
																					"nodeType": "YulLiteral",
																					"src": "17043:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "17034:5:14",
																						"nodeType": "YulTypedName",
																						"src": "17034:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17079:67:14",
																					"nodeType": "YulBlock",
																					"src": "17079:67:14",
																					"statements": [
																						{
																							"nativeSrc": "17097:35:14",
																							"nodeType": "YulAssignment",
																							"src": "17097:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17116:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "17116:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17121:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "17121:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17112:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "17112:3:14"
																										},
																										"nativeSrc": "17112:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "17112:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17106:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "17106:5:14"
																								},
																								"nativeSrc": "17106:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "17106:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "17097:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "17097:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "17060:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "17060:6:14"
																				},
																				"nativeSrc": "17057:89:14",
																				"nodeType": "YulIf",
																				"src": "17057:89:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17166:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "17166:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "17225:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "17225:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "17232:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "17232:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "17172:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "17172:52:14"
																							},
																							"nativeSrc": "17172:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "17172:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17159:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17159:6:14"
																					},
																					"nativeSrc": "17159:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "17159:81:14"
																				},
																				"nativeSrc": "17159:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "17159:81:14"
																			}
																		]
																	},
																	"nativeSrc": "17008:242:14",
																	"nodeType": "YulCase",
																	"src": "17008:242:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16330:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16330:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16338:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16338:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16327:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16327:2:14"
																},
																"nativeSrc": "16327:14:14",
																"nodeType": "YulFunctionCall",
																"src": "16327:14:14"
															},
															"nativeSrc": "16320:930:14",
															"nodeType": "YulSwitch",
															"src": "16320:930:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "15957:1299:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16038:4:14",
														"nodeType": "YulTypedName",
														"src": "16038:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "16044:3:14",
														"nodeType": "YulTypedName",
														"src": "16044:3:14",
														"type": ""
													}
												],
												"src": "15957:1299:14"
											},
											{
												"body": {
													"nativeSrc": "17339:167:14",
													"nodeType": "YulBlock",
													"src": "17339:167:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "17385:16:14",
																"nodeType": "YulBlock",
																"src": "17385:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17394:1:14",
																					"nodeType": "YulLiteral",
																					"src": "17394:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17397:1:14",
																					"nodeType": "YulLiteral",
																					"src": "17397:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17387:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17387:6:14"
																			},
																			"nativeSrc": "17387:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "17387:12:14"
																		},
																		"nativeSrc": "17387:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "17387:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17360:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17360:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17369:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17369:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17356:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17356:3:14"
																		},
																		"nativeSrc": "17356:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17356:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17381:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17381:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17352:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17352:3:14"
																},
																"nativeSrc": "17352:32:14",
																"nodeType": "YulFunctionCall",
																"src": "17352:32:14"
															},
															"nativeSrc": "17349:52:14",
															"nodeType": "YulIf",
															"src": "17349:52:14"
														},
														{
															"nativeSrc": "17410:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "17410:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17429:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17429:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17423:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "17423:5:14"
																},
																"nativeSrc": "17423:16:14",
																"nodeType": "YulFunctionCall",
																"src": "17423:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "17414:5:14",
																	"nodeType": "YulTypedName",
																	"src": "17414:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17470:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "17470:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "17448:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "17448:21:14"
																},
																"nativeSrc": "17448:28:14",
																"nodeType": "YulFunctionCall",
																"src": "17448:28:14"
															},
															"nativeSrc": "17448:28:14",
															"nodeType": "YulExpressionStatement",
															"src": "17448:28:14"
														},
														{
															"nativeSrc": "17485:15:14",
															"nodeType": "YulAssignment",
															"src": "17485:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "17495:5:14",
																"nodeType": "YulIdentifier",
																"src": "17495:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "17485:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17485:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "17261:245:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17305:9:14",
														"nodeType": "YulTypedName",
														"src": "17305:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17316:7:14",
														"nodeType": "YulTypedName",
														"src": "17316:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17328:6:14",
														"nodeType": "YulTypedName",
														"src": "17328:6:14",
														"type": ""
													}
												],
												"src": "17261:245:14"
											},
											{
												"body": {
													"nativeSrc": "17685:232:14",
													"nodeType": "YulBlock",
													"src": "17685:232:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17702:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17702:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17713:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17713:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17695:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17695:6:14"
																},
																"nativeSrc": "17695:21:14",
																"nodeType": "YulFunctionCall",
																"src": "17695:21:14"
															},
															"nativeSrc": "17695:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "17695:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17736:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17736:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17747:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17747:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17732:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17732:3:14"
																		},
																		"nativeSrc": "17732:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17732:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17752:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17752:2:14",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17725:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17725:6:14"
																},
																"nativeSrc": "17725:30:14",
																"nodeType": "YulFunctionCall",
																"src": "17725:30:14"
															},
															"nativeSrc": "17725:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "17725:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17775:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17775:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17786:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17786:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17771:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17771:3:14"
																		},
																		"nativeSrc": "17771:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17771:18:14"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nativeSrc": "17791:34:14",
																		"nodeType": "YulLiteral",
																		"src": "17791:34:14",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17764:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17764:6:14"
																},
																"nativeSrc": "17764:62:14",
																"nodeType": "YulFunctionCall",
																"src": "17764:62:14"
															},
															"nativeSrc": "17764:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "17764:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17846:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17846:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17857:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17857:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17842:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17842:3:14"
																		},
																		"nativeSrc": "17842:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17842:18:14"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nativeSrc": "17862:12:14",
																		"nodeType": "YulLiteral",
																		"src": "17862:12:14",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17835:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17835:6:14"
																},
																"nativeSrc": "17835:40:14",
																"nodeType": "YulFunctionCall",
																"src": "17835:40:14"
															},
															"nativeSrc": "17835:40:14",
															"nodeType": "YulExpressionStatement",
															"src": "17835:40:14"
														},
														{
															"nativeSrc": "17884:27:14",
															"nodeType": "YulAssignment",
															"src": "17884:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17896:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17896:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17907:3:14",
																		"nodeType": "YulLiteral",
																		"src": "17907:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17892:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17892:3:14"
																},
																"nativeSrc": "17892:19:14",
																"nodeType": "YulFunctionCall",
																"src": "17892:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17884:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17884:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17511:406:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17662:9:14",
														"nodeType": "YulTypedName",
														"src": "17662:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17676:4:14",
														"nodeType": "YulTypedName",
														"src": "17676:4:14",
														"type": ""
													}
												],
												"src": "17511:406:14"
											},
											{
												"body": {
													"nativeSrc": "18096:228:14",
													"nodeType": "YulBlock",
													"src": "18096:228:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18113:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18113:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18124:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18124:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18106:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18106:6:14"
																},
																"nativeSrc": "18106:21:14",
																"nodeType": "YulFunctionCall",
																"src": "18106:21:14"
															},
															"nativeSrc": "18106:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "18106:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18147:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18147:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18158:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18158:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18143:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18143:3:14"
																		},
																		"nativeSrc": "18143:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18143:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18163:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18163:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18136:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18136:6:14"
																},
																"nativeSrc": "18136:30:14",
																"nodeType": "YulFunctionCall",
																"src": "18136:30:14"
															},
															"nativeSrc": "18136:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "18136:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18186:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18186:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18197:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18197:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18182:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18182:3:14"
																		},
																		"nativeSrc": "18182:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18182:18:14"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nativeSrc": "18202:34:14",
																		"nodeType": "YulLiteral",
																		"src": "18202:34:14",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18175:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18175:6:14"
																},
																"nativeSrc": "18175:62:14",
																"nodeType": "YulFunctionCall",
																"src": "18175:62:14"
															},
															"nativeSrc": "18175:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "18175:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18257:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18257:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18268:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18268:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18253:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18253:3:14"
																		},
																		"nativeSrc": "18253:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18253:18:14"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nativeSrc": "18273:8:14",
																		"nodeType": "YulLiteral",
																		"src": "18273:8:14",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18246:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18246:6:14"
																},
																"nativeSrc": "18246:36:14",
																"nodeType": "YulFunctionCall",
																"src": "18246:36:14"
															},
															"nativeSrc": "18246:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "18246:36:14"
														},
														{
															"nativeSrc": "18291:27:14",
															"nodeType": "YulAssignment",
															"src": "18291:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18303:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18303:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18314:3:14",
																		"nodeType": "YulLiteral",
																		"src": "18314:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18299:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18299:3:14"
																},
																"nativeSrc": "18299:19:14",
																"nodeType": "YulFunctionCall",
																"src": "18299:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18291:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18291:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17922:402:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18073:9:14",
														"nodeType": "YulTypedName",
														"src": "18073:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18087:4:14",
														"nodeType": "YulTypedName",
														"src": "18087:4:14",
														"type": ""
													}
												],
												"src": "17922:402:14"
											},
											{
												"body": {
													"nativeSrc": "18466:53:14",
													"nodeType": "YulBlock",
													"src": "18466:53:14",
													"statements": [
														{
															"nativeSrc": "18476:37:14",
															"nodeType": "YulAssignment",
															"src": "18476:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18501:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18501:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18509:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18509:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "18483:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "18483:17:14"
																},
																"nativeSrc": "18483:30:14",
																"nodeType": "YulFunctionCall",
																"src": "18483:30:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18476:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18476:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18329:190:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18442:3:14",
														"nodeType": "YulTypedName",
														"src": "18442:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18447:6:14",
														"nodeType": "YulTypedName",
														"src": "18447:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18458:3:14",
														"nodeType": "YulTypedName",
														"src": "18458:3:14",
														"type": ""
													}
												],
												"src": "18329:190:14"
											},
											{
												"body": {
													"nativeSrc": "18698:179:14",
													"nodeType": "YulBlock",
													"src": "18698:179:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18715:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18715:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18726:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18726:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18708:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18708:6:14"
																},
																"nativeSrc": "18708:21:14",
																"nodeType": "YulFunctionCall",
																"src": "18708:21:14"
															},
															"nativeSrc": "18708:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "18708:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18749:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18749:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18760:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18760:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18745:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18745:3:14"
																		},
																		"nativeSrc": "18745:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18745:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18765:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18765:2:14",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18738:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18738:6:14"
																},
																"nativeSrc": "18738:30:14",
																"nodeType": "YulFunctionCall",
																"src": "18738:30:14"
															},
															"nativeSrc": "18738:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "18738:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18788:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18788:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18799:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18799:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18784:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18784:3:14"
																		},
																		"nativeSrc": "18784:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18784:18:14"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "18804:31:14",
																		"nodeType": "YulLiteral",
																		"src": "18804:31:14",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18777:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18777:6:14"
																},
																"nativeSrc": "18777:59:14",
																"nodeType": "YulFunctionCall",
																"src": "18777:59:14"
															},
															"nativeSrc": "18777:59:14",
															"nodeType": "YulExpressionStatement",
															"src": "18777:59:14"
														},
														{
															"nativeSrc": "18845:26:14",
															"nodeType": "YulAssignment",
															"src": "18845:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18857:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18857:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18868:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18868:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18853:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18853:3:14"
																},
																"nativeSrc": "18853:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18853:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18845:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18845:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18524:353:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18675:9:14",
														"nodeType": "YulTypedName",
														"src": "18675:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18689:4:14",
														"nodeType": "YulTypedName",
														"src": "18689:4:14",
														"type": ""
													}
												],
												"src": "18524:353:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(length, 0x1f), not(31)), 32))\n        mstore(array, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, 32), add(_1, 32), length)\n        mstore(add(add(array, length), 32), 0)\n        value1 := array\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 96))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"name\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_d99d682fc356fa21b92bd2fb80417dfa6820fd52fa032cb0ed3383e56770a7d7__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let _1 := abi_encode_string(value0, pos)\n        mstore(_1, \"-LP\")\n        end := add(_1, 3)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let _2 := shl(5, length)\n        let dst := allocate_memory(add(_2, 32))\n        let array := dst\n        mstore(dst, length)\n        dst := add(dst, 32)\n        let srcEnd := add(add(_1, _2), 32)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 32)\n        for { } lt(src, srcEnd) { src := add(src, 32) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, 32)\n        }\n        value0 := array\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 64)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            let value := calldataload(srcPtr)\n            validator_revert_address(value)\n            mstore(pos, and(value, sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        end := abi_encode_string(value0, pos)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101e7575f3560e01c80639257fa0711610109578063d2c725e01161009e578063de836ebd1161006e578063de836ebd1461041a578063e54ef9a01461042d578063ec5975c614610440578063f2fde38b14610448575f5ffd5b8063d2c725e0146103d4578063d410ad7d146103e1578063dd62ed3e146103f4578063de41691c14610407575f5ffd5b8063a9059cbb116100d9578063a9059cbb14610394578063b4b93c8c146103a7578063ba6ba385146103af578063c45a0155146103c2575f5ffd5b80639257fa071461034f57806395d89b4114610362578063a131d4361461036a578063a7c7fdeb1461038c575f5ffd5b80635483067d1161017f578063715018a61161014f578063715018a61461030c57806389afcb44146103145780638da5cb5b146103345780638e73f1b41461033c575f5ffd5b80635483067d146102a257806355917ebe146102ab57806367ccdf38146102ce57806370a08231146102f9575f5ffd5b806323b872dd116101ba57806323b872dd14610256578063273cbaa014610269578063313ce5671461027e5780633a105cfb1461028d575f5ffd5b806306fdde03146101eb578063090318fb14610209578063095ea7b31461021f57806318160ddd14610242575b5f5ffd5b6101f361045b565b604051610200919061209b565b60405180910390f35b61021161051b565b604051908152602001610200565b61023261022d3660046120e4565b610544565b6040519015158152602001610200565b5f5160206127f45f395f51905f5254610211565b61023261026436600461210e565b61055d565b610271610580565b604051610200919061218f565b60405160128152602001610200565b6102a061029b36600461222c565b610605565b005b61021160015481565b6102b3610813565b60408051938452602084019290925290820152606001610200565b6102e16102dc3660046122fc565b6108e4565b6040516001600160a01b039091168152602001610200565b610211610307366004612313565b610937565b6102a061095d565b610327610322366004612313565b610970565b604051610200919061235e565b6102e1610a93565b61021161034a3660046122fc565b610ac1565b61021161035d3660046122fc565b610b0a565b6101f3610d4e565b61037d610378366004612313565b610d8c565b60405161020093929190612370565b6102a0610e7c565b6102326103a23660046120e4565b610f13565b6102a0610f20565b6102a06103bd3660046123a1565b610fe2565b5f546102e1906001600160a01b031681565b6002546102329060ff1681565b6103276103ef3660046122fc565b610ffd565b6102116104023660046123bc565b6110ff565b6102a06104153660046123f3565b611148565b610211610428366004612431565b6111c3565b61021161043b3660046122fc565b61144e565b6103276114c8565b6102a0610456366004612313565b611542565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f5160206127d45f395f51905f529161049990612481565b80601f01602080910402602001604051908101604052809291908181526020018280546104c590612481565b80156105105780601f106104e757610100808354040283529160200191610510565b820191905f5260205f20905b8154815290600101906020018083116104f357829003601f168201915b505050505091505090565b5f5f610525610813565b92505050610534610307610a93565b61053e90826124cd565b91505090565b5f3361055181858561157f565b60019150505b92915050565b5f3361056a85828561158c565b6105758585856115f0565b506001949350505050565b60025460609060ff16156105a7576040516306fda65d60e31b815260040160405180910390fd5b60038054806020026020016040519081016040528092919081815260200182805480156105fb57602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116105dd575b5050505050905090565b5f61060e61164d565b805490915060ff600160401b82041615906001600160401b03165f811580156106345750825b90505f826001600160401b0316600114801561064f5750303b155b90508115801561065d575080155b1561067b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156106a557845460ff60401b1916600160401b1785555b5f8690036106c65760405163c1ab6dc160e01b815260040160405180910390fd5b87515f0361070957604051632432186360e21b8152600401610700906020808252600490820152636e616d6560e01b604082015260600190565b60405180910390fd5b8760405160200161071a91906124f7565b60405160208183030381529060405297506107358889611675565b61073e3361168b565b61074a60038888611fed565b506003546001600160401b03811115610765576107656121a1565b60405190808252806020026020018201604052801561078e578160200160208202803683370190505b5080516107a39160049160209091019061204e565b505f80546001600160a01b0319166001600160a01b038b1617905542600155831561080857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b5f5f5f62278d00600154426108289190612515565b6108329190612528565b92506108495f5160206127f45f395f51905f525490565b9150821580610856575081155b15610862575090915f90565b5f546001600160a01b031660405163d23aaed360e01b815260048101859052602481018490526001600160a01b03919091169063d23aaed390604401602060405180830381865afa1580156108b9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108dd9190612547565b9050909192565b6002545f9060ff161561090a576040516306fda65d60e31b815260040160405180910390fd5b6003828154811061091d5761091d61255e565b5f918252602090912001546001600160a01b031692915050565b6001600160a01b03165f9081525f5160206127d45f395f51905f52602052604090205490565b61096561169c565b61096e5f6116ce565b565b606061097a61169c565b6001600160a01b0382166109a157604051634e46966960e11b815260040160405180910390fd5b6109a9610f20565b5f6109b330610937565b9050805f036109d55760405163bb55fd2760e01b815260040160405180910390fd5b6109de81610ffd565b91506109ea308261173e565b6003545f5b81811015610a8b575f848281518110610a0a57610a0a61255e565b602002602001015190505f811115610a53575f60038381548110610a3057610a3061255e565b5f918252602090912001546001600160a01b03169050610a51818884611772565b505b8060048381548110610a6757610a6761255e565b905f5260205f20015f828254610a7d9190612515565b9091555050506001016109ef565b505050919050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6002545f9060ff1615610ae7576040516306fda65d60e31b815260040160405180910390fd5b60048281548110610afa57610afa61255e565b905f5260205f2001549050919050565b6002545f9060ff1615610b30576040516306fda65d60e31b815260040160405180910390fd5b5f610b465f5160206127f45f395f51905f525490565b9050805f03610b5757505f92915050565b5f80546001600160a01b031690505f60048054905090505f826001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bab573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bcf9190612572565b90505f5b82811015610d44575f60038281548110610bef57610bef61255e565b5f918252602082200154600480546001600160a01b0390921693509084908110610c1b57610c1b61255e565b905f5260205f20015490505f811115610d3a5760405163d88e3e3b60e01b81526001600160a01b03838116600483015285811660248301525f919088169063d88e3e3b906044015f60405180830381865afa158015610c7c573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610ca3919081019061258d565b90505f88610cb1848d612634565b610cbb9190612528565b60405163d06ca61f60e01b81529091506001600160a01b0389169063d06ca61f90610cec908490869060040161264b565b602060405180830381865afa158015610d07573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d2b9190612547565b610d35908b6124cd565b995050505b5050600101610bd3565b5050505050919050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f5160206127d45f395f51905f529161049990612481565b6002546060905f90819060ff1615610db7576040516306fda65d60e31b815260040160405180910390fd5b6003545f816001600160401b03811115610dd357610dd36121a1565b604051908082528060200260200182016040528015610dfc578160200160208202803683370190505b5090505f5b82811015610e4a5760048181548110610e1c57610e1c61255e565b905f5260205f200154828281518110610e3757610e3761255e565b6020908102919091010152600101610e01565b505f610e615f5160206127f45f395f51905f525490565b90505f610e6d88610937565b92989197509195509350505050565b610e8461169c565b5f610e8d610a93565b6003549091505f5b81811015610f0e575f60038281548110610eb157610eb161255e565b5f918252602082200154600480546001600160a01b0390921693509084908110610edd57610edd61255e565b905f5260205f20015490505f811115610f0457610f046001600160a01b0383168683611772565b5050600101610e95565b505050565b5f336105518185856115f0565b5f5f5f610f2b610813565b925092509250825f03610f3d57505050565b8015610f5457610f54610f4e610a93565b826117c4565b610f618362278d00612634565b60015f828254610f7191906124cd565b90915550610f7f9050610a93565b6001600160a01b03167f06ef86d1d001d3f4d5d79d6a6647502b17af442209a78bbbafb8867cb5cf6fb7848484600154604051610fd5949392919093845260208401929092526040830152606082015260800190565b60405180910390a2505050565b610fea61169c565b6002805460ff1916911515919091179055565b60025460609060ff1615611024576040516306fda65d60e31b815260040160405180910390fd5b5f61103a5f5160206127f45f395f51905f525490565b6003549091506001600160401b03811115611057576110576121a1565b604051908082528060200260200182016040528015611080578160200160208202803683370190505b509150805f036110905750919050565b5f5b6004548110156110f8575f600482815481106110b0576110b061255e565b905f5260205f20015490508281866110c89190612634565b6110d29190612528565b8483815181106110e4576110e461255e565b602090810291909101015250600101611092565b5050919050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b61115061169c565b5f8190036111715760405163c1ab6dc160e01b815260040160405180910390fd5b61117d60038383611fed565b506111866117f8565b7f3ca096a4c913a6f222a557151d17832dddab787e6ddf59063cab45e15b9a9fac82826040516111b7929190612663565b60405180910390a15050565b5f6111cc61169c565b6001600160a01b0384166111f357604051634e46966960e11b815260040160405180910390fd5b5f80546001600160a01b031690505f816001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561123e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112629190612572565b905061126c610f20565b6003545f805b828110156113af575f6003828154811061128e5761128e61255e565b5f91825260208220015460405163d88e3e3b60e01b81526001600160a01b0391821660048201819052888316602483015293509088169063d88e3e3b906044015f60405180830381865afa1580156112e8573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261130f919081019061258d565b9050866001600160a01b031663d06ca61f8b8b868181106113325761133261255e565b90506020020135836040518363ffffffff1660e01b815260040161135792919061264b565b602060405180830381865afa158015611372573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113969190612547565b6113a090856124cd565b93508260010192505050611272565b505f5160206127f45f395f51905f5254156113d2576113cd8161144e565b6113dd565b683635c9adc5dea000005b94506113e988866117c4565b5f5b86811015611442578787828181106114055761140561255e565b905060200201356004828154811061141f5761141f61255e565b905f5260205f20015f82825461143591906124cd565b90915550506001016113eb565b50505050509392505050565b6002545f9060ff1615611474576040516306fda65d60e31b815260040160405180910390fd5b5f61147d61190c565b9050805f036114975750683635c9adc5dea0000092915050565b806114ad5f5160206127f45f395f51905f525490565b6114b79085612634565b6114c19190612528565b9392505050565b60025460609060ff16156114ef576040516306fda65d60e31b815260040160405180910390fd5b60048054806020026020016040519081016040528092919081815260200182805480156105fb57602002820191905f5260205f20905b815481526020019060010190808311611525575050505050905090565b61154a61169c565b6001600160a01b03811661157357604051631e4fbdf760e01b81525f6004820152602401610700565b61157c816116ce565b50565b610f0e8383836001611add565b5f61159784846110ff565b90505f198110156115ea57818110156115dc57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610700565b6115ea84848484035f611add565b50505050565b6001600160a01b03831661161957604051634b637e8f60e11b81525f6004820152602401610700565b6001600160a01b0382166116425760405163ec442f0560e01b81525f6004820152602401610700565b610f0e838383611bc1565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610557565b61167d611cfa565b6116878282611d1f565b5050565b611693611cfa565b61157c81611d6f565b336116a5610a93565b6001600160a01b03161461096e5760405163118cdaa760e01b8152336004820152602401610700565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6001600160a01b03821661176757604051634b637e8f60e11b81525f6004820152602401610700565b611687825f83611bc1565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610f0e908490611d77565b6001600160a01b0382166117ed5760405163ec442f0560e01b81525f6004820152602401610700565b6116875f8383611bc1565b600354806001600160401b03811115611813576118136121a1565b60405190808252806020026020018201604052801561183c578160200160208202803683370190505b5080516118519160049160209091019061204e565b505f5b81811015611687575f600382815481106118705761187061255e565b5f918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116915081906370a0823190602401602060405180830381865afa1580156118c1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118e59190612547565b600483815481106118f8576118f861255e565b5f9182526020909120015550600101611854565b5f5f61191f5f546001600160a01b031690565b90505f816001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561195e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119829190612572565b6004549091505f5b81811015611ad6575f600482815481106119a6576119a661255e565b905f5260205f20015490505f811115611acd575f600383815481106119cd576119cd61255e565b5f91825260208220015460405163d88e3e3b60e01b81526001600160a01b0391821660048201819052888316602483015293509088169063d88e3e3b906044015f60405180830381865afa158015611a27573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611a4e919081019061258d565b60405163d06ca61f60e01b81529091506001600160a01b0388169063d06ca61f90611a7f908690859060040161264b565b602060405180830381865afa158015611a9a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611abe9190612547565b611ac890896124cd565b975050505b5060010161198a565b5050505090565b5f5160206127d45f395f51905f526001600160a01b038516611b145760405163e602df0560e01b81525f6004820152602401610700565b6001600160a01b038416611b3d57604051634a1406b160e11b81525f6004820152602401610700565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115611bba57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611bb191815260200190565b60405180910390a35b5050505050565b5f5160206127d45f395f51905f526001600160a01b038416611bfb5781816002015f828254611bf091906124cd565b90915550611c6b9050565b6001600160a01b0384165f9081526020829052604090205482811015611c4d5760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610700565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316611c89576002810180548390039055611ca7565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611cec91815260200190565b60405180910390a350505050565b611d02611e4a565b61096e57604051631afcd79f60e31b815260040160405180910390fd5b611d27611cfa565b5f5160206127d45f395f51905f527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611d6084826126f3565b50600481016115ea83826126f3565b61154a611cfa565b5f611dcb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e639092919063ffffffff16565b905080515f1480611deb575080806020019051810190611deb91906127ad565b610f0e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610700565b5f611e5361164d565b54600160401b900460ff16919050565b6060611e7184845f85611e79565b949350505050565b606082471015611eda5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610700565b5f5f866001600160a01b03168587604051611ef591906127c8565b5f6040518083038185875af1925050503d805f8114611f2f576040519150601f19603f3d011682016040523d82523d5f602084013e611f34565b606091505b5091509150611f4587838387611f50565b979650505050505050565b60608315611fbe5782515f03611fb7576001600160a01b0385163b611fb75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610700565b5081611e71565b611e718383815115611fd35781518083602001fd5b8060405162461bcd60e51b8152600401610700919061209b565b828054828255905f5260205f2090810192821561203e579160200282015b8281111561203e5781546001600160a01b0319166001600160a01b0384351617825560209092019160019091019061200b565b5061204a929150612087565b5090565b828054828255905f5260205f2090810192821561203e579160200282015b8281111561203e57825182559160200191906001019061206c565b5b8082111561204a575f8155600101612088565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461157c575f5ffd5b5f5f604083850312156120f5575f5ffd5b8235612100816120d0565b946020939093013593505050565b5f5f5f60608486031215612120575f5ffd5b833561212b816120d0565b9250602084013561213b816120d0565b929592945050506040919091013590565b5f8151808452602084019350602083015f5b828110156121855781516001600160a01b031686526020958601959091019060010161215e565b5093949350505050565b602081525f6114c1602083018461214c565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156121dd576121dd6121a1565b604052919050565b5f5f83601f8401126121f5575f5ffd5b5081356001600160401b0381111561220b575f5ffd5b6020830191508360208260051b8501011115612225575f5ffd5b9250929050565b5f5f5f5f6060858703121561223f575f5ffd5b843561224a816120d0565b935060208501356001600160401b03811115612264575f5ffd5b8501601f81018713612274575f5ffd5b80356001600160401b0381111561228d5761228d6121a1565b6122a0601f8201601f19166020016121b5565b8181528860208385010111156122b4575f5ffd5b816020840160208301375f6020838301015280955050505060408501356001600160401b038111156122e4575f5ffd5b6122f0878288016121e5565b95989497509550505050565b5f6020828403121561230c575f5ffd5b5035919050565b5f60208284031215612323575f5ffd5b81356114c1816120d0565b5f8151808452602084019350602083015f5b82811015612185578151865260209586019590910190600101612340565b602081525f6114c1602083018461232e565b606081525f612382606083018661232e565b60208301949094525060400152919050565b801515811461157c575f5ffd5b5f602082840312156123b1575f5ffd5b81356114c181612394565b5f5f604083850312156123cd575f5ffd5b82356123d8816120d0565b915060208301356123e8816120d0565b809150509250929050565b5f5f60208385031215612404575f5ffd5b82356001600160401b03811115612419575f5ffd5b612425858286016121e5565b90969095509350505050565b5f5f5f60408486031215612443575f5ffd5b833561244e816120d0565b925060208401356001600160401b03811115612468575f5ffd5b612474868287016121e5565b9497909650939450505050565b600181811c9082168061249557607f821691505b6020821081036124b357634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610557576105576124b9565b5f81518060208401855e5f93019283525090919050565b5f61250282846124e0565b6202d4c560ec1b81526003019392505050565b81810381811115610557576105576124b9565b5f8261254257634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612557575f5ffd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215612582575f5ffd5b81516114c1816120d0565b5f6020828403121561259d575f5ffd5b81516001600160401b038111156125b2575f5ffd5b8201601f810184136125c2575f5ffd5b80516001600160401b038111156125db576125db6121a1565b8060051b6125eb602082016121b5565b91825260208184018101929081019087841115612606575f5ffd5b6020850194505b83851015611f455784519250612622836120d0565b8282526020948501949091019061260d565b8082028115828204841417610557576105576124b9565b828152604060208201525f611e71604083018461214c565b602080825281018290525f8360408301825b858110156126a5578235612688816120d0565b6001600160a01b0316825260209283019290910190600101612675565b5095945050505050565b601f821115610f0e57805f5260205f20601f840160051c810160208510156126d45750805b601f840160051c820191505b81811015611bba575f81556001016126e0565b81516001600160401b0381111561270c5761270c6121a1565b6127208161271a8454612481565b846126af565b6020601f821160018114612752575f831561273b5750848201515b5f19600385901b1c1916600184901b178455611bba565b5f84815260208120601f198516915b828110156127815787850151825560209485019460019092019101612761565b508482101561279e57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f602082840312156127bd575f5ffd5b81516114c181612394565b5f6114c182846124e056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02a2646970667358221220cb19986944f508eb69ba00ae534455059cf7526c67241b26a7c16baa945a70b564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9257FA07 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xD2C725E0 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDE836EBD GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE54EF9A0 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xEC5975C6 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x448 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xD2C725E0 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xD410AD7D EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xDE41691C EQ PUSH2 0x407 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xB4B93C8C EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xBA6BA385 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x3C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x9257FA07 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xA131D436 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xA7C7FDEB EQ PUSH2 0x38C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5483067D GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x8E73F1B4 EQ PUSH2 0x33C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5483067D EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x55917EBE EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x67CCDF38 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x273CBAA0 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x3A105CFB EQ PUSH2 0x28D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x90318FB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x242 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x209B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH2 0x211 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x210E JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH2 0x271 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x218F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x2313 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x95D JUMP JUMPDEST PUSH2 0x327 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x2313 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x235E JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0xD4E JUMP JUMPDEST PUSH2 0x37D PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x2313 JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2370 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x232 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0xF13 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x23A1 JUMP JUMPDEST PUSH2 0xFE2 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x2E1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x232 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x327 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST PUSH2 0x211 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x23F3 JUMP JUMPDEST PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0x144E JUMP JUMPDEST PUSH2 0x327 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x2313 JUMP JUMPDEST PUSH2 0x1542 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 PUSH2 0x499 SWAP1 PUSH2 0x2481 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C5 SWAP1 PUSH2 0x2481 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x510 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x510 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x525 PUSH2 0x813 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x534 PUSH2 0x307 PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x53E SWAP1 DUP3 PUSH2 0x24CD JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x551 DUP2 DUP6 DUP6 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x56A DUP6 DUP3 DUP6 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x575 DUP6 DUP6 DUP6 PUSH2 0x15F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DD JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x60E PUSH2 0x164D JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x634 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x64F JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x65D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x6A5 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH0 DUP7 SWAP1 SUB PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH0 SUB PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH4 0x24321863 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x6E616D65 PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP8 POP PUSH2 0x735 DUP9 DUP10 PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x73E CALLER PUSH2 0x168B JUMP JUMPDEST PUSH2 0x74A PUSH1 0x3 DUP9 DUP9 PUSH2 0x1FED JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x765 JUMPI PUSH2 0x765 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x78E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x7A3 SWAP2 PUSH1 0x4 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x1 SSTORE DUP4 ISZERO PUSH2 0x808 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH3 0x278D00 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x2515 JUMP JUMPDEST PUSH2 0x832 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST SWAP3 POP PUSH2 0x849 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP2 POP DUP3 ISZERO DUP1 PUSH2 0x856 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x862 JUMPI POP SWAP1 SWAP2 PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH4 0xD23AAED3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xD23AAED3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x91D JUMPI PUSH2 0x91D PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x965 PUSH2 0x169C JUMP JUMPDEST PUSH2 0x96E PUSH0 PUSH2 0x16CE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x97A PUSH2 0x169C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A9 PUSH2 0xF20 JUMP JUMPDEST PUSH0 PUSH2 0x9B3 ADDRESS PUSH2 0x937 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DE DUP2 PUSH2 0xFFD JUMP JUMPDEST SWAP2 POP PUSH2 0x9EA ADDRESS DUP3 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA0A JUMPI PUSH2 0xA0A PUSH2 0x255E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA30 JUMPI PUSH2 0xA30 PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0xA51 DUP2 DUP9 DUP5 PUSH2 0x1772 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA67 JUMPI PUSH2 0xA67 PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA7D SWAP2 SWAP1 PUSH2 0x2515 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 ADD PUSH2 0x9EF JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAFA JUMPI PUSH2 0xAFA PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB46 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0xB57 JUMPI POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FC8CEF3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAB JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBCF SWAP2 SWAP1 PUSH2 0x2572 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD44 JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBEF JUMPI PUSH2 0xBEF PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xC1B JUMPI PUSH2 0xC1B PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD88E3E3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH0 SWAP2 SWAP1 DUP9 AND SWAP1 PUSH4 0xD88E3E3B SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCA3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x258D JUMP JUMPDEST SWAP1 POP PUSH0 DUP9 PUSH2 0xCB1 DUP5 DUP14 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0xCEC SWAP1 DUP5 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x264B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD07 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0xD35 SWAP1 DUP12 PUSH2 0x24CD JUMP JUMPDEST SWAP10 POP POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xBD3 JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP2 PUSH2 0x499 SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xDD3 JUMPI PUSH2 0xDD3 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDFC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE1C JUMPI PUSH2 0xE1C PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE37 JUMPI PUSH2 0xE37 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xE01 JUMP JUMPDEST POP PUSH0 PUSH2 0xE61 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE6D DUP9 PUSH2 0x937 JUMP JUMPDEST SWAP3 SWAP9 SWAP2 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xE84 PUSH2 0x169C JUMP JUMPDEST PUSH0 PUSH2 0xE8D PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF0E JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEB1 JUMPI PUSH2 0xEB1 PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xEDD JUMPI PUSH2 0xEDD PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xF04 JUMPI PUSH2 0xF04 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP7 DUP4 PUSH2 0x1772 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xE95 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x551 DUP2 DUP6 DUP6 PUSH2 0x15F0 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0xF2B PUSH2 0x813 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH0 SUB PUSH2 0xF3D JUMPI POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF54 JUMPI PUSH2 0xF54 PUSH2 0xF4E PUSH2 0xA93 JUMP JUMPDEST DUP3 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0xF61 DUP4 PUSH3 0x278D00 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x24CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF7F SWAP1 POP PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6EF86D1D001D3F4D5D79D6A6647502B17AF442209A78BBBAFB8867CB5CF6FB7 DUP5 DUP5 DUP5 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xFD5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xFEA PUSH2 0x169C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x103A PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1057 JUMPI PUSH2 0x1057 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1080 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP1 PUSH0 SUB PUSH2 0x1090 JUMPI POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x10F8 JUMPI PUSH0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10B0 JUMPI PUSH2 0x10B0 PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP3 DUP2 DUP7 PUSH2 0x10C8 SWAP2 SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x10D2 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10E4 JUMPI PUSH2 0x10E4 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1092 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1150 PUSH2 0x169C JUMP JUMPDEST PUSH0 DUP2 SWAP1 SUB PUSH2 0x1171 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x117D PUSH1 0x3 DUP4 DUP4 PUSH2 0x1FED JUMP JUMPDEST POP PUSH2 0x1186 PUSH2 0x17F8 JUMP JUMPDEST PUSH32 0x3CA096A4C913A6F222A557151D17832DDDAB787E6DDF59063CAB45E15B9A9FAC DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11B7 SWAP3 SWAP2 SWAP1 PUSH2 0x2663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11CC PUSH2 0x169C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FC8CEF3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x2572 JUMP JUMPDEST SWAP1 POP PUSH2 0x126C PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13AF JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x128E JUMPI PUSH2 0x128E PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD88E3E3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE DUP9 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP4 POP SWAP1 DUP9 AND SWAP1 PUSH4 0xD88E3E3B SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x130F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x258D JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP12 DUP12 DUP7 DUP2 DUP2 LT PUSH2 0x1332 JUMPI PUSH2 0x1332 PUSH2 0x255E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1357 SWAP3 SWAP2 SWAP1 PUSH2 0x264B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1372 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x13A0 SWAP1 DUP6 PUSH2 0x24CD JUMP JUMPDEST SWAP4 POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0x1272 JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13CD DUP2 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x13DD JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 JUMPDEST SWAP5 POP PUSH2 0x13E9 DUP9 DUP7 PUSH2 0x17C4 JUMP JUMPDEST PUSH0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1442 JUMPI DUP8 DUP8 DUP3 DUP2 DUP2 LT PUSH2 0x1405 JUMPI PUSH2 0x1405 PUSH2 0x255E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x141F JUMPI PUSH2 0x141F PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x24CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x13EB JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1474 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x147D PUSH2 0x190C JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x1497 JUMPI POP PUSH9 0x3635C9ADC5DEA00000 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x14AD PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27F4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14B7 SWAP1 DUP6 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x14C1 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDA65D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1525 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x154A PUSH2 0x169C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1573 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x157C DUP2 PUSH2 0x16CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF0E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1ADD JUMP JUMPDEST PUSH0 PUSH2 0x1597 DUP5 DUP5 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0x15EA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x15DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x15EA DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1ADD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1619 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1642 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH2 0xF0E DUP4 DUP4 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x557 JUMP JUMPDEST PUSH2 0x167D PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x1687 DUP3 DUP3 PUSH2 0x1D1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1693 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x157C DUP2 PUSH2 0x1D6F JUMP JUMPDEST CALLER PUSH2 0x16A5 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1767 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x1687 DUP3 PUSH0 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF0E SWAP1 DUP5 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17ED JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x1687 PUSH0 DUP4 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1813 JUMPI PUSH2 0x1813 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x183C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1851 SWAP2 PUSH1 0x4 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x204E JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1687 JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1870 JUMPI PUSH2 0x1870 PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18C1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18E5 SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18F8 JUMPI PUSH2 0x18F8 PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE POP PUSH1 0x1 ADD PUSH2 0x1854 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x191F PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FC8CEF3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x195E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1982 SWAP2 SWAP1 PUSH2 0x2572 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AD6 JUMPI PUSH0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19A6 JUMPI PUSH2 0x19A6 PUSH2 0x255E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1ACD JUMPI PUSH0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x19CD JUMPI PUSH2 0x19CD PUSH2 0x255E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD88E3E3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE DUP9 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP4 POP SWAP1 DUP9 AND SWAP1 PUSH4 0xD88E3E3B SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A27 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1A4E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x258D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x1A7F SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x264B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A9A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ABE SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0x1AC8 SWAP1 DUP10 PUSH2 0x24CD JUMP JUMPDEST SWAP8 POP POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x198A JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1B14 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1B3D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x1BBA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1BB1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1BFB JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1BF0 SWAP2 SWAP1 PUSH2 0x24CD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1C6B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x1C4D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C89 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CEC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x1D02 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D27 PUSH2 0x1CFA JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x27D4 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x1D60 DUP5 DUP3 PUSH2 0x26F3 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x15EA DUP4 DUP3 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x154A PUSH2 0x1CFA JUMP JUMPDEST PUSH0 PUSH2 0x1DCB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ DUP1 PUSH2 0x1DEB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1DEB SWAP2 SWAP1 PUSH2 0x27AD JUMP JUMPDEST PUSH2 0xF0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x700 JUMP JUMPDEST PUSH0 PUSH2 0x1E53 PUSH2 0x164D JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E71 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x1E79 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x700 JUMP JUMPDEST PUSH0 PUSH0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1EF5 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1F2F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F45 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1F50 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FBE JUMPI DUP3 MLOAD PUSH0 SUB PUSH2 0x1FB7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1FB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x700 JUMP JUMPDEST POP DUP2 PUSH2 0x1E71 JUMP JUMPDEST PUSH2 0x1E71 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1FD3 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x209B JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x203E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x203E JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x200B JUMP JUMPDEST POP PUSH2 0x204A SWAP3 SWAP2 POP PUSH2 0x2087 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x203E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x203E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x206C JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x204A JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x157C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2100 DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2120 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x212B DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x213B DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2185 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x215E JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x14C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x214C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x21DD JUMPI PUSH2 0x21DD PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x21F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x220B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2225 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x223F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x224A DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2264 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2274 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x228D JUMPI PUSH2 0x228D PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x22A0 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x21B5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP9 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x22B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x22E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x22F0 DUP8 DUP3 DUP9 ADD PUSH2 0x21E5 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x230C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2323 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14C1 DUP2 PUSH2 0x20D0 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2185 JUMPI DUP2 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x14C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH0 PUSH2 0x2382 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x157C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14C1 DUP2 PUSH2 0x2394 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x23D8 DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x23E8 DUP2 PUSH2 0x20D0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2404 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2419 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2425 DUP6 DUP3 DUP7 ADD PUSH2 0x21E5 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2443 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x244E DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2468 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2474 DUP7 DUP3 DUP8 ADD PUSH2 0x21E5 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2495 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x24B9 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2502 DUP3 DUP5 PUSH2 0x24E0 JUMP JUMPDEST PUSH3 0x2D4C5 PUSH1 0xEC SHL DUP2 MSTORE PUSH1 0x3 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x24B9 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2542 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2557 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2582 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14C1 DUP2 PUSH2 0x20D0 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x259D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25B2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x25C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25DB JUMPI PUSH2 0x25DB PUSH2 0x21A1 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x25EB PUSH1 0x20 DUP3 ADD PUSH2 0x21B5 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 DUP8 DUP5 GT ISZERO PUSH2 0x2606 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1F45 JUMPI DUP5 MLOAD SWAP3 POP PUSH2 0x2622 DUP4 PUSH2 0x20D0 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x260D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x24B9 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1E71 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 DUP4 PUSH1 0x40 DUP4 ADD DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x26A5 JUMPI DUP3 CALLDATALOAD PUSH2 0x2688 DUP2 PUSH2 0x20D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2675 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xF0E JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x26D4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BBA JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x26E0 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x270C JUMPI PUSH2 0x270C PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x2720 DUP2 PUSH2 0x271A DUP5 SLOAD PUSH2 0x2481 JUMP JUMPDEST DUP5 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2752 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x273B JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1BBA JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2781 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2761 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x279E JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14C1 DUP2 PUSH2 0x2394 JUMP JUMPDEST PUSH0 PUSH2 0x14C1 DUP3 DUP5 PUSH2 0x24E0 JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE RJUMPI 0xF47D 0xB1 SWAP14 TLOAD RJUMP 0x4600 ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE STOP MSTORE 0xC6 ORIGIN SELFBALANCE RJUMPI 0xF47D 0xB1 SWAP14 TLOAD RJUMP 0x4600 ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE MUL LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB NOT SWAP9 PUSH10 0x44F508EB69BA00AE5344 SSTORE SDIV SWAP13 0xF7 MSTORE PUSH13 0x67241B26A7C16BAA945A70B564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "584:16806:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15300:155:13;;;:::i;:::-;;;583:25:14;;;571:2;556:18;15300:155:13;437:177:14;5191:186:2;;;;;;:::i;:::-;;:::i;:::-;;;1292:14:14;;1285:22;1267:41;;1255:2;1240:18;5191:186:2;1127:187:14;3877:152:2;-1:-1:-1;;;;;;;;;;;4008:14:2;3877:152;;5969:244;;;;;;:::i;:::-;;:::i;14728:122:13:-;;;:::i;:::-;;;;;;;:::i;3735:82:2:-;;;3808:2;2691:36:14;;2679:2;2664:18;3735:82:2;2549:184:14;4084:568:13;;;;;;:::i;:::-;;:::i;:::-;;1166:28;;;;;;13628:317;;;:::i;:::-;;;;4961:25:14;;;5017:2;5002:18;;4995:34;;;;5045:18;;;5038:34;4949:2;4934:18;13628:317:13;4759:319:14;14092:168:13;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5478:32:14;;;5460:51;;5448:2;5433:18;14092:168:13;5314:203:14;4087:171:2;;;;;;:::i;:::-;;:::i;3155:101:0:-;;;:::i;7568:885:13:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2441:144:0:-;;;:::i;14407:170:13:-;;;;;;:::i;:::-;;:::i;10470:951::-;;;;;;:::i;:::-;;:::i;2954:148:2:-;;;:::i;12647:668:13:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;4988:497::-;;;:::i;4453:178:2:-;;;;;;:::i;:::-;;:::i;9131:398:13:-;;;:::i;8662:114::-;;;;;;:::i;:::-;;:::i;996:22::-;;;;;-1:-1:-1;;;;;996:22:13;;;1325:34;;;;;;;;;11721:562;;;;;;:::i;:::-;;:::i;4689:195:2:-;;;;;;:::i;:::-;;:::i;5706:231:13:-;;;;;;:::i;:::-;;:::i;6236:1034::-;;;;;;:::i;:::-;;:::i;9926:298::-;;;;;;:::i;:::-;;:::i;14999:128::-;;;:::i;3405:215:0:-;;;;;;:::i;:::-;;:::i;2697:144:2:-;2827:7;2820:14;;2742:13;;-1:-1:-1;;;;;;;;;;;2064:20:2;2820:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;15300:155:13:-;15350:4;15372:17;15393:8;:6;:8::i;:::-;15367:34;;;;15430:18;15440:7;:5;:7::i;15430:18::-;15418:30;;:9;:30;:::i;:::-;15411:37;;;15300:155;:::o;5191:186:2:-;5264:4;966:10:7;5318:31:2;966:10:7;5334:7:2;5343:5;5318:8;:31::i;:::-;5366:4;5359:11;;;5191:186;;;;;:::o;5969:244::-;6056:4;966:10:7;6112:37:2;6128:4;966:10:7;6143:5:2;6112:15;:37::i;:::-;6159:26;6169:4;6175:2;6179:5;6159:9;:26::i;:::-;-1:-1:-1;6202:4:2;;5969:244;-1:-1:-1;;;;5969:244:2:o;14728:122:13:-;1920:22;;14802:16;;1920:22;;1917:49;;;1951:15;;-1:-1:-1;;;1951:15:13;;;;;;;;;;;1917:49;14837:6:::1;14830:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;14830:13:13::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;14728:122:::0;:::o;4084:568::-;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;-1:-1:-1;;;;;4348:14:1;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;-1:-1:-1;;;;;4788:16:1;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;4261:1:13::1;4243:19:::0;;;4239:46:::1;;4271:14;;-1:-1:-1::0;;;4271:14:13::1;;;;;;;;;;;4239:46;4305:5;4299:19;4322:1;4299:24:::0;4295:65:::1;;4332:28;;-1:-1:-1::0;;;4332:28:13::1;;;;;;9503:2:14::0;9485:21;;;9542:1;9522:18;;;9515:29;-1:-1:-1;;;9575:2:14;9560:18;;9553:34;9619:2;9604:18;;9301:327;4332:28:13::1;;;;;;;;4295:65;4403:5;4386:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;4371:46;;4428:26;4441:5;4448;4428:12;:26::i;:::-;4464;4479:10;4464:14;:26::i;:::-;4501:16;:6;4510:7:::0;;4501:16:::1;:::i;:::-;-1:-1:-1::0;4554:6:13::1;:13:::0;-1:-1:-1;;;;;4538:30:13;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;4538:30:13::1;-1:-1:-1::0;4527:41:13;;::::1;::::0;:8:::1;::::0;:41:::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;4579:7:13::1;:25:::0;;-1:-1:-1;;;;;;4579:25:13::1;-1:-1:-1::0;;;;;4579:25:13;::::1;;::::0;;4630:15:::1;-1:-1:-1::0;4614:31:13;5064:101:1;;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;10356:50:14;;5140:14:1;;10344:2:14;10329:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;4084:568:13;;;;:::o;13628:317::-;13667:14;13683;13699:17;13772:7;13756:13;;13738:15;:31;;;;:::i;:::-;13737:42;;;;:::i;:::-;13728:51;;13798:13;-1:-1:-1;;;;;;;;;;;4008:14:2;;3877:152;13798:13:13;13789:22;-1:-1:-1;13824:11:13;;;:26;;-1:-1:-1;13839:11:13;;13824:26;13821:57;;;-1:-1:-1;13860:6:13;;13876:1;;13628:317::o;13821:57::-;15866:8;15902:7;-1:-1:-1;;;;;15902:7:13;13901:37;;-1:-1:-1;;;13901:37:13;;;;;10946:25:14;;;10987:18;;;10980:34;;;-1:-1:-1;;;;;13901:21:13;;;;;;;10919:18:14;;13901:37:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13888:50;;13628:317;;;:::o;14092:168::-;1920:22;;14209:7;;1920:22;;1917:49;;;1951:15;;-1:-1:-1;;;1951:15:13;;;;;;;;;;;1917:49;14239:6:::1;14246;14239:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;14239:14:13::1;::::0;14092:168;-1:-1:-1;;14092:168:13:o;4087:171:2:-;-1:-1:-1;;;;;4231:20:2;4152:7;4231:20;;;-1:-1:-1;;;;;;;;;;;4231:20:2;;;;;;;4087:171::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;7568:885:13:-;7647:24;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;7691:17:13;::::1;7687:48;;7717:18;;-1:-1:-1::0;;;7717:18:13::1;;;;;;;;;;;7687:48;7746:13;:11;:13::i;:::-;7769:18;7790:24;7808:4;7790:9;:24::i;:::-;7769:45;;7828:10;7842:1;7828:15:::0;7824:51:::1;;7852:23;;-1:-1:-1::0;;;7852:23:13::1;;;;;;;;;;;7824:51;7896:32;7917:10;7896:20;:32::i;:::-;7886:42;;7938:32;7952:4;7959:10;7938:5;:32::i;:::-;8003:6;:13:::0;7980:20:::1;8027:420;8051:12;8047:1;:16;8027:420;;;8081:14;8098:7;8106:1;8098:10;;;;;;;;:::i;:::-;;;;;;;8081:27;;8135:1;8126:6;:10;8122:192;;;8155:13;8171:6;8178:1;8171:9;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;8171:9:13::1;::::0;-1:-1:-1;8225:50:13::1;8171:9:::0;8263:3;8268:6;8225:37:::1;:50::i;:::-;8137:177;8122:192;8345:6;8330:8;8339:1;8330:11;;;;;;;;:::i;:::-;;;;;;;;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;8419:3:13::1;;8027:420;;;;7677:776;;7568:885:::0;;;:::o;2441:144:0:-;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144::o;14407:170:13:-;1920:22;;14524:7;;1920:22;;1917:49;;;1951:15;;-1:-1:-1;;;1951:15:13;;;;;;;;;;;1917:49;14554:8:::1;14563:6;14554:16;;;;;;;;:::i;:::-;;;;;;;;;14547:23;;14407:170:::0;;;:::o;10470:951::-;1920:22;;10574:17;;1920:22;;1917:49;;;1951:15;;-1:-1:-1;;;1951:15:13;;;;;;;;;;;1917:49;10607:14:::1;10624:13;-1:-1:-1::0;;;;;;;;;;;4008:14:2;;3877:152;10624:13:13::1;10607:30;;10676:6;10686:1;10676:11:::0;10672:25:::1;;-1:-1:-1::0;10696:1:13::1;::::0;14092:168;-1:-1:-1;;14092:168:13:o;10672:25::-:1;10716:24;15902:7:::0;;-1:-1:-1;;;;;15902:7:13;10716:37:::1;;10763:22;10788:8;:15;;;;10763:40;;10813:19;10835:15;-1:-1:-1::0;;;;;10835:20:13::1;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10813:44:::0;-1:-1:-1;10881:9:13::1;10876:539;10900:14;10896:1;:18;10876:539;;;10932:13;10948:6;10955:1;10948:9;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;11013:8:::1;:11:::0;;-1:-1:-1;;;;;10948:9:13;;::::1;::::0;-1:-1:-1;11013:8:13;11022:1;;11013:11;::::1;;;;;:::i;:::-;;;;;;;;;10990:34;;11083:1;11068:12;:16;11064:282;;;11128:43;::::0;-1:-1:-1;;;11128:43:13;;-1:-1:-1;;;;;11794:32:14;;;11128:43:13::1;::::0;::::1;11776:51:14::0;11863:32;;;11843:18;;;11836:60;11104:21:13::1;::::0;11128:23;;::::1;::::0;::::1;::::0;11749:18:14;;11128:43:13::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;11128:43:13::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;11104:67:::0;-1:-1:-1;11207:13:13::1;11252:6:::0;11224:24:::1;11236:12:::0;11224:9;:24:::1;:::i;:::-;11223:35;;;;:::i;:::-;11289:42;::::0;-1:-1:-1;;;11289:42:13;;11207:51;;-1:-1:-1;;;;;;11289:29:13;::::1;::::0;::::1;::::0;:42:::1;::::0;11207:51;;11326:4;;11289:42:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11276:55;::::0;;::::1;:::i;:::-;;;11086:260;;11064:282;-1:-1:-1::0;;11387:3:13::1;;10876:539;;;;10597:824;;;;10470:951:::0;;;:::o;2954:148:2:-;3086:9;3079:16;;3001:13;;-1:-1:-1;;;;;;;;;;;2064:20:2;3079:16;;;:::i;12647:668:13:-;1920:22;;12757:16;;12787:7;;;;1920:22;;1917:49;;;1951:15;;-1:-1:-1;;;1951:15:13;;;;;;;;;;;1917:49;12871:6:::1;:13:::0;12848:20:::1;12871:13:::0;-1:-1:-1;;;;;12927:27:13;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;12927:27:13::1;-1:-1:-1::0;12898:56:13;-1:-1:-1;12986:9:13::1;12981:172;13005:12;13001:1;:16;12981:172;;;13054:8;13063:1;13054:11;;;;;;;;:::i;:::-;;;;;;;;;13039:9;13049:1;13039:12;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:26;13116:3:::1;;12981:172;;;;13179:15;13197:13;-1:-1:-1::0;;;;;;;;;;;4008:14:2;;3877:152;13197:13:13::1;13179:31;;13224:15;13242:16;13252:5;13242:9;:16::i;:::-;13280:9:::0;;13291:7;;-1:-1:-1;13280:9:13;;-1:-1:-1;12647:668:13;-1:-1:-1;;;;12647:668:13:o;4988:497::-;2334:13:0;:11;:13::i;:::-;5050:20:13::1;5073:7;:5;:7::i;:::-;5113:6;:13:::0;5050:30;;-1:-1:-1;5090:20:13::1;5136:343;5160:12;5156:1;:16;5136:343;;;5190:13;5206:6;5213:1;5206:9;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;5274:8:::1;:11:::0;;-1:-1:-1;;;;;5206:9:13;;::::1;::::0;-1:-1:-1;5274:8:13;5283:1;;5274:11;::::1;;;;;:::i;:::-;;;;;;;;;5256:29;;5315:1;5305:7;:11;5301:136;;;5336:60;-1:-1:-1::0;;;;;5336:37:13;::::1;5374:12:::0;5388:7;5336:37:::1;:60::i;:::-;-1:-1:-1::0;;5463:3:13::1;;5136:343;;;;5040:445;;4988:497::o:0;4453:178:2:-;4522:4;966:10:7;4576:27:2;966:10:7;4593:2:2;4597:5;4576:9;:27::i;9131:398:13:-;9172:14;9188;9204:17;9225:8;:6;:8::i;:::-;9171:62;;;;;;9246:6;9256:1;9246:11;9243:23;;9259:7;;;9131:398::o;9243:23::-;9326:13;;9322:44;;9341:25;9347:7;:5;:7::i;:::-;9356:9;9341:5;:25::i;:::-;9429:16;:6;9438:7;9429:16;:::i;:::-;9412:13;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;9472:7:13;;-1:-1:-1;9472:5:13;:7::i;:::-;-1:-1:-1;;;;;9461:61:13;;9481:6;9489;9497:9;9508:13;;9461:61;;;;;;;;13654:25:14;;;13710:2;13695:18;;13688:34;;;;13753:2;13738:18;;13731:34;13796:2;13781:18;;13774:34;13641:3;13626:19;;13423:391;9461:61:13;;;;;;;;9161:368;;;9131:398::o;8662:114::-;2334:13:0;:11;:13::i;:::-;8738:22:13::1;:31:::0;;-1:-1:-1;;8738:31:13::1;::::0;::::1;;::::0;;;::::1;::::0;;8662:114::o;11721:562::-;1920:22;;11828:29;;1920:22;;1917:49;;;1951:15;;-1:-1:-1;;;1951:15:13;;;;;;;;;;;1917:49;11873:14:::1;11890:13;-1:-1:-1::0;;;;;;;;;;;4008:14:2;;3877:152;11890:13:13::1;11967:6;:13:::0;11873:30;;-1:-1:-1;;;;;;11953:28:13;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;11953:28:13::1;;11938:43;;11995:6;12005:1;11995:11:::0;11991:36:::1;;12008:19;14092:168:::0;;;:::o;11991:36::-:1;12051:9;12046:231;12070:8;:15:::0;12066:19;::::1;12046:231;;;12103:15;12121:8;12130:1;12121:11;;;;;;;;:::i;:::-;;;;;;;;;12103:29;;12188:6;12177:7;12165:9;:19;;;;:::i;:::-;12164:30;;;;:::i;:::-;12146:12;12159:1;12146:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:48;-1:-1:-1;12249:3:13::1;;12046:231;;;;11863:420;11721:562:::0;;;:::o;4689:195:2:-;-1:-1:-1;;;;;4848:20:2;;;4769:7;4848:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;4689:195::o;5706:231:13:-;2334:13:0;:11;:13::i;:::-;5807:1:13::1;5789:19:::0;;;5785:46:::1;;5817:14;;-1:-1:-1::0;;;5817:14:13::1;;;;;;;;;;;5785:46;5842:16;:6;5851:7:::0;;5842:16:::1;:::i;:::-;;5868:25;:23;:25::i;:::-;5908:22;5922:7;;5908:22;;;;;;;:::i;:::-;;;;;;;;5706:231:::0;;:::o;6236:1034::-;6343:17;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6380:17:13;::::1;6376:48;;6406:18;;-1:-1:-1::0;;;6406:18:13::1;;;;;;;;;;;6376:48;6469:24;15902:7:::0;;-1:-1:-1;;;;;15902:7:13;6469:37:::1;;6516:19;6538:15;-1:-1:-1::0;;;;;6538:20:13::1;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6516:44;;6571:13;:11;:13::i;:::-;6617:6;:13:::0;6594:20:::1;::::0;6667:321:::1;6691:12;6687:1;:16;6667:321;;;6721:13;6737:6;6744:1;6737:9;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;6811:43:::1;::::0;-1:-1:-1;;;6811:43:13;;-1:-1:-1;;;;;6737:9:13;;::::1;6811:43;::::0;::::1;11776:51:14::0;;;11863:32;;;11843:18;;;11836:60;6737:9:13;-1:-1:-1;6811:23:13;;::::1;::::0;::::1;::::0;11749:18:14;;6811:43:13::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;6811:43:13::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;6787:67;;6898:15;-1:-1:-1::0;;;;;6898:29:13::1;;6928:7;;6936:1;6928:10;;;;;;;:::i;:::-;;;;;;;6940:4;6898:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6886:59;::::0;;::::1;:::i;:::-;;;6972:3;;;;;6707:281;;6667:321;;;-1:-1:-1::0;;;;;;;;;;;;4008:14:2;7010:18:13;:60:::1;;7044:26;7061:8;7044:16;:26::i;:::-;7010:60;;;7031:10;7010:60;6998:72;;7080:21;7086:3;7091:9;7080:5;:21::i;:::-;7117:9;7112:152;7132:18:::0;;::::1;7112:152;;;7183:7;;7191:1;7183:10;;;;;;;:::i;:::-;;;;;;;7168:8;7177:1;7168:11;;;;;;;;:::i;:::-;;;;;;;;;:25;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7236:3:13::1;;7112:152;;;;6366:904;;;;6236:1034:::0;;;;;:::o;9926:298::-;1920:22;;10030:16;;1920:22;;1917:49;;;1951:15;;-1:-1:-1;;;1951:15:13;;;;;;;;;;;1917:49;10062:19:::1;10084;:17;:19::i;:::-;10062:41;;10117:11;10132:1;10117:16:::0;10113:39:::1;;-1:-1:-1::0;10142:10:13::1;::::0;14092:168;-1:-1:-1;;14092:168:13:o;10113:39::-:1;10205:11;10188:13;-1:-1:-1::0;;;;;;;;;;;4008:14:2;;3877:152;10188:13:13::1;10175:26;::::0;:10;:26:::1;:::i;:::-;10174:42;;;;:::i;:::-;10162:55:::0;9926:298;-1:-1:-1;;;9926:298:13:o;14999:128::-;1920:22;;15077:16;;1920:22;;1917:49;;;1951:15;;-1:-1:-1;;;1951:15:13;;;;;;;;;;;1917:49;15112:8:::1;15105:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14999:128:::0;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;5460:51:14::0;5433:18;;3534:31:0::1;5314:203:14::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;9982:128:2:-;10066:37;10075:5;10082:7;10091:5;10098:4;10066:8;:37::i;11726:476::-;11825:24;11852:25;11862:5;11869:7;11852:9;:25::i;:::-;11825:52;;-1:-1:-1;;11891:16:2;:36;11887:309;;;11966:5;11947:16;:24;11943:130;;;11998:60;;-1:-1:-1;;;11998:60:2;;-1:-1:-1;;;;;14728:32:14;;11998:60:2;;;14710:51:14;14777:18;;;14770:34;;;14820:18;;;14813:34;;;14683:18;;11998:60:2;14508:345:14;11943:130:2;12114:57;12123:5;12130:7;12158:5;12139:16;:24;12165:5;12114:8;:57::i;:::-;11815:387;11726:476;;;:::o;6586:300::-;-1:-1:-1;;;;;6669:18:2;;6665:86;;6710:30;;-1:-1:-1;;;6710:30:2;;6737:1;6710:30;;;5460:51:14;5433:18;;6710:30:2;5314:203:14;6665:86:2;-1:-1:-1;;;;;6764:16:2;;6760:86;;6803:32;;-1:-1:-1;;;6803:32:2;;6832:1;6803:32;;;5460:51:14;5433:18;;6803:32:2;5314:203:14;6760:86:2;6855:24;6863:4;6869:2;6873:5;6855:7;:24::i;9071:205:1:-;9129:30;;3147:66;9186:27;8819:122;2263:147:2;6929:20:1;:18;:20::i;:::-;2365:38:2::1;2388:5;2395:7;2365:22;:38::i;:::-;2263:147:::0;;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2658:162::-:0;966:10:7;2717:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:7;2763:40:0;;;5460:51:14;5433:18;;2763:40:0;5314:203:14;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;9240:206:2:-;-1:-1:-1;;;;;9310:21:2;;9306:89;;9354:30;;-1:-1:-1;;;9354:30:2;;9381:1;9354:30;;;5460:51:14;5433:18;;9354:30:2;5314:203:14;9306:89:2;9404:35;9412:7;9429:1;9433:5;9404:7;:35::i;996:186:5:-;1116:58;;;-1:-1:-1;;;;;15050:32:14;;1116:58:5;;;15032:51:14;15099:18;;;;15092:34;;;1116:58:5;;;;;;;;;;15005:18:14;;;;1116:58:5;;;;;;;;-1:-1:-1;;;;;1116:58:5;-1:-1:-1;;;1116:58:5;;;1089:86;;1109:5;;1089:19;:86::i;8714:208:2:-;-1:-1:-1;;;;;8784:21:2;;8780:91;;8828:32;;-1:-1:-1;;;8828:32:2;;8857:1;8828:32;;;5460:51:14;5433:18;;8828:32:2;5314:203:14;8780:91:2;8880:35;8896:1;8900:7;8909:5;8880:7;:35::i;16059:442:13:-;16136:6;:13;;-1:-1:-1;;;;;16170:27:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16170:27:13;-1:-1:-1;16159:38:13;;;;:8;;:38;;;;;;:::i;:::-;-1:-1:-1;16213:9:13;16208:287;16232:12;16228:1;:16;16208:287;;;16262:13;16278:6;16285:1;16278:9;;;;;;;;:::i;:::-;;;;;;;;;;;16342:49;;-1:-1:-1;;;16342:49:13;;16385:4;16342:49;;;5460:51:14;-1:-1:-1;;;;;16278:9:13;;;;-1:-1:-1;16278:9:13;;16342:34;;5433:18:14;;16342:49:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16328:8;16337:1;16328:11;;;;;;;;:::i;:::-;;;;;;;;;;:63;-1:-1:-1;16467:3:13;;16208:287;;16691:697;16742:24;16778;16805:10;15866:8;15902:7;-1:-1:-1;;;;;15902:7:13;;15824:93;16805:10;16778:37;;16825:12;16840:15;-1:-1:-1;;;;;16840:20:13;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16915:8;:15;16825:37;;-1:-1:-1;16898:14:13;16941:441;16965:6;16961:1;:10;16941:441;;;16989:15;17007:8;17016:1;17007:11;;;;;;;;:::i;:::-;;;;;;;;;16989:29;;17046:1;17036:7;:11;17032:280;;;17067:13;17083:6;17090:1;17083:9;;;;;;;;:::i;:::-;;;;;;;;;;17161:36;;-1:-1:-1;;;17161:36:13;;-1:-1:-1;;;;;17083:9:13;;;17161:36;;;11776:51:14;;;11863:32;;;11843:18;;;11836:60;17083:9:13;-1:-1:-1;17161:23:13;;;;;;11749:18:14;;17161:36:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17161:36:13;;;;;;;;;;;;:::i;:::-;17253:44;;-1:-1:-1;;;17253:44:13;;17137:60;;-1:-1:-1;;;;;;17253:29:13;;;;;:44;;17283:7;;17137:60;;17253:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17233:64;;;;:::i;:::-;;;17049:263;;17032:280;-1:-1:-1;17354:3:13;;16941:441;;;;16768:620;;;16691:697;:::o;10957:487:2:-;-1:-1:-1;;;;;;;;;;;;;;;;11122:19:2;;11118:89;;11164:32;;-1:-1:-1;;;11164:32:2;;11193:1;11164:32;;;5460:51:14;5433:18;;11164:32:2;5314:203:14;11118:89:2;-1:-1:-1;;;;;11220:21:2;;11216:90;;11264:31;;-1:-1:-1;;;11264:31:2;;11292:1;11264:31;;;5460:51:14;5433:18;;11264:31:2;5314:203:14;11216:90:2;-1:-1:-1;;;;;11315:20:2;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11362:76;;;;11412:7;-1:-1:-1;;;;;11396:31:2;11405:5;-1:-1:-1;;;;;11396:31:2;;11421:5;11396:31;;;;583:25:14;;571:2;556:18;;437:177;11396:31:2;;;;;;;;11362:76;11055:389;10957:487;;;;:::o;7201:1170::-;-1:-1:-1;;;;;;;;;;;;;;;;7343:18:2;;7339:546;;7497:5;7479:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7339:546:2;;-1:-1:-1;7339:546:2;;-1:-1:-1;;;;;7555:17:2;;7533:19;7555:17;;;;;;;;;;;7590:19;;;7586:115;;;7636:50;;-1:-1:-1;;;7636:50:2;;-1:-1:-1;;;;;14728:32:14;;7636:50:2;;;14710:51:14;14777:18;;;14770:34;;;14820:18;;;14813:34;;;14683:18;;7636:50:2;14508:345:14;7586:115:2;-1:-1:-1;;;;;7821:17:2;;:11;:17;;;;;;;;;;7841:19;;;;7821:39;;7339:546;-1:-1:-1;;;;;7899:16:2;;7895:429;;8062:14;;;:23;;;;;;;7895:429;;;-1:-1:-1;;;;;8275:15:2;;:11;:15;;;;;;;;;;:24;;;;;;7895:429;8354:2;-1:-1:-1;;;;;8339:25:2;8348:4;-1:-1:-1;;;;;8339:25:2;;8358:5;8339:25;;;;583::14;;571:2;556:18;;437:177;8339:25:2;;;;;;;;7276:1095;7201:1170;;;:::o;7082:141:1:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;2416:216:2;6929:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2581:7:2;:15:::1;2591:5:::0;2581:7;:15:::1;:::i;:::-;-1:-1:-1::0;2606:9:2::1;::::0;::::1;:19;2618:7:::0;2606:9;:19:::1;:::i;1980:235:0:-:0;6929:20:1;:18;:20::i;5328:653:5:-;5758:23;5784:69;5812:4;5784:69;;;;;;;;;;;;;;;;;5792:5;-1:-1:-1;;;;;5784:27:5;;;:69;;;;;:::i;:::-;5758:95;;5871:10;:17;5892:1;5871:22;:56;;;;5908:10;5897:30;;;;;;;;;;;;:::i;:::-;5863:111;;;;-1:-1:-1;;;5863:111:5;;17713:2:14;5863:111:5;;;17695:21:14;17752:2;17732:18;;;17725:30;17791:34;17771:18;;;17764:62;-1:-1:-1;;;17842:18:14;;;17835:40;17892:19;;5863:111:5;17511:406:14;8485:120:1;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;4119:223:6:-;4252:12;4283:52;4305:6;4313:4;4319:1;4322:12;4283:21;:52::i;:::-;4276:59;4119:223;-1:-1:-1;;;;4119:223:6:o;5176:446::-;5341:12;5398:5;5373:21;:30;;5365:81;;;;-1:-1:-1;;;5365:81:6;;18124:2:14;5365:81:6;;;18106:21:14;18163:2;18143:18;;;18136:30;18202:34;18182:18;;;18175:62;-1:-1:-1;;;18253:18:14;;;18246:36;18299:19;;5365:81:6;17922:402:14;5365:81:6;5457:12;5471:23;5498:6;-1:-1:-1;;;;;5498:11:6;5517:5;5524:4;5498:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5456:73;;;;5546:69;5573:6;5581:7;5590:10;5602:12;5546:26;:69::i;:::-;5539:76;5176:446;-1:-1:-1;;;;;;;5176:446:6:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:6;;;8124:60;;;;-1:-1:-1;;;8124:60:6;;18726:2:14;8124:60:6;;;18708:21:14;18765:2;18745:18;;;18738:30;18804:31;18784:18;;;18777:59;18853:18;;8124:60:6;18524:353:14;8124:60:6;-1:-1:-1;8219:10:6;8212:17;;7886:418;8260:33;8268:10;8280:12;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:6;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:418:14;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;619:131::-;-1:-1:-1;;;;;694:31:14;;684:42;;674:70;;740:1;737;730:12;755:367;823:6;831;884:2;872:9;863:7;859:23;855:32;852:52;;;900:1;897;890:12;852:52;939:9;926:23;958:31;983:5;958:31;:::i;:::-;1008:5;1086:2;1071:18;;;;1058:32;;-1:-1:-1;;;755:367:14:o;1319:508::-;1396:6;1404;1412;1465:2;1453:9;1444:7;1440:23;1436:32;1433:52;;;1481:1;1478;1471:12;1433:52;1520:9;1507:23;1539:31;1564:5;1539:31;:::i;:::-;1589:5;-1:-1:-1;1646:2:14;1631:18;;1618:32;1659:33;1618:32;1659:33;:::i;:::-;1319:508;;1711:7;;-1:-1:-1;;;1791:2:14;1776:18;;;;1763:32;;1319:508::o;1832:446::-;1885:3;1923:5;1917:12;1950:6;1945:3;1938:19;1982:4;1977:3;1973:14;1966:21;;2021:4;2014:5;2010:16;2044:1;2054:199;2068:6;2065:1;2062:13;2054:199;;;2133:13;;-1:-1:-1;;;;;2129:39:14;2117:52;;2198:4;2189:14;;;;2226:17;;;;2165:1;2083:9;2054:199;;;-1:-1:-1;2269:3:14;;1832:446;-1:-1:-1;;;;1832:446:14:o;2283:261::-;2462:2;2451:9;2444:21;2425:4;2482:56;2534:2;2523:9;2519:18;2511:6;2482:56;:::i;2738:127::-;2799:10;2794:3;2790:20;2787:1;2780:31;2830:4;2827:1;2820:15;2854:4;2851:1;2844:15;2870:275;2941:2;2935:9;3006:2;2987:13;;-1:-1:-1;;2983:27:14;2971:40;;-1:-1:-1;;;;;3026:34:14;;3062:22;;;3023:62;3020:88;;;3088:18;;:::i;:::-;3124:2;3117:22;2870:275;;-1:-1:-1;2870:275:14:o;3150:367::-;3213:8;3223:6;3277:3;3270:4;3262:6;3258:17;3254:27;3244:55;;3295:1;3292;3285:12;3244:55;-1:-1:-1;3318:20:14;;-1:-1:-1;;;;;3350:30:14;;3347:50;;;3393:1;3390;3383:12;3347:50;3430:4;3422:6;3418:17;3406:29;;3490:3;3483:4;3473:6;3470:1;3466:14;3458:6;3454:27;3450:38;3447:47;3444:67;;;3507:1;3504;3497:12;3444:67;3150:367;;;;;:::o;3522:1232::-;3636:6;3644;3652;3660;3713:2;3701:9;3692:7;3688:23;3684:32;3681:52;;;3729:1;3726;3719:12;3681:52;3768:9;3755:23;3787:31;3812:5;3787:31;:::i;:::-;3837:5;-1:-1:-1;3893:2:14;3878:18;;3865:32;-1:-1:-1;;;;;3909:30:14;;3906:50;;;3952:1;3949;3942:12;3906:50;3975:22;;4028:4;4020:13;;4016:27;-1:-1:-1;4006:55:14;;4057:1;4054;4047:12;4006:55;4097:2;4084:16;-1:-1:-1;;;;;4115:6:14;4112:30;4109:56;;;4145:18;;:::i;:::-;4187:57;4234:2;4211:17;;-1:-1:-1;;4207:31:14;4240:2;4203:40;4187:57;:::i;:::-;4267:6;4260:5;4253:21;4315:7;4310:2;4301:6;4297:2;4293:15;4289:24;4286:37;4283:57;;;4336:1;4333;4326:12;4283:57;4391:6;4386:2;4382;4378:11;4373:2;4366:5;4362:14;4349:49;4443:1;4438:2;4429:6;4422:5;4418:18;4414:27;4407:38;4464:5;4454:15;;;;;4522:2;4511:9;4507:18;4494:32;-1:-1:-1;;;;;4541:8:14;4538:32;4535:52;;;4583:1;4580;4573:12;4535:52;4622:72;4686:7;4675:8;4664:9;4660:24;4622:72;:::i;:::-;3522:1232;;;;-1:-1:-1;4713:8:14;-1:-1:-1;;;;3522:1232:14:o;5083:226::-;5142:6;5195:2;5183:9;5174:7;5170:23;5166:32;5163:52;;;5211:1;5208;5201:12;5163:52;-1:-1:-1;5256:23:14;;5083:226;-1:-1:-1;5083:226:14:o;5522:247::-;5581:6;5634:2;5622:9;5613:7;5609:23;5605:32;5602:52;;;5650:1;5647;5640:12;5602:52;5689:9;5676:23;5708:31;5733:5;5708:31;:::i;5774:420::-;5827:3;5865:5;5859:12;5892:6;5887:3;5880:19;5924:4;5919:3;5915:14;5908:21;;5963:4;5956:5;5952:16;5986:1;5996:173;6010:6;6007:1;6004:13;5996:173;;;6071:13;;6059:26;;6114:4;6105:14;;;;6142:17;;;;6032:1;6025:9;5996:173;;6199:261;6378:2;6367:9;6360:21;6341:4;6398:56;6450:2;6439:9;6435:18;6427:6;6398:56;:::i;6465:403::-;6700:2;6689:9;6682:21;6663:4;6720:56;6772:2;6761:9;6757:18;6749:6;6720:56;:::i;:::-;6807:2;6792:18;;6785:34;;;;-1:-1:-1;6850:2:14;6835:18;6828:34;6712:64;6465:403;-1:-1:-1;6465:403:14:o;6873:118::-;6959:5;6952:13;6945:21;6938:5;6935:32;6925:60;;6981:1;6978;6971:12;6996:241;7052:6;7105:2;7093:9;7084:7;7080:23;7076:32;7073:52;;;7121:1;7118;7111:12;7073:52;7160:9;7147:23;7179:28;7201:5;7179:28;:::i;7242:388::-;7310:6;7318;7371:2;7359:9;7350:7;7346:23;7342:32;7339:52;;;7387:1;7384;7377:12;7339:52;7426:9;7413:23;7445:31;7470:5;7445:31;:::i;:::-;7495:5;-1:-1:-1;7552:2:14;7537:18;;7524:32;7565:33;7524:32;7565:33;:::i;:::-;7617:7;7607:17;;;7242:388;;;;;:::o;7635:437::-;7721:6;7729;7782:2;7770:9;7761:7;7757:23;7753:32;7750:52;;;7798:1;7795;7788:12;7750:52;7838:9;7825:23;-1:-1:-1;;;;;7863:6:14;7860:30;7857:50;;;7903:1;7900;7893:12;7857:50;7942:70;8004:7;7995:6;7984:9;7980:22;7942:70;:::i;:::-;8031:8;;7916:96;;-1:-1:-1;7635:437:14;-1:-1:-1;;;;7635:437:14:o;8077:572::-;8172:6;8180;8188;8241:2;8229:9;8220:7;8216:23;8212:32;8209:52;;;8257:1;8254;8247:12;8209:52;8296:9;8283:23;8315:31;8340:5;8315:31;:::i;:::-;8365:5;-1:-1:-1;8421:2:14;8406:18;;8393:32;-1:-1:-1;;;;;8437:30:14;;8434:50;;;8480:1;8477;8470:12;8434:50;8519:70;8581:7;8572:6;8561:9;8557:22;8519:70;:::i;:::-;8077:572;;8608:8;;-1:-1:-1;8493:96:14;;-1:-1:-1;;;;8077:572:14:o;8654:380::-;8733:1;8729:12;;;;8776;;;8797:61;;8851:4;8843:6;8839:17;8829:27;;8797:61;8904:2;8896:6;8893:14;8873:18;8870:38;8867:161;;8950:10;8945:3;8941:20;8938:1;8931:31;8985:4;8982:1;8975:15;9013:4;9010:1;9003:15;8867:161;;8654:380;;;:::o;9039:127::-;9100:10;9095:3;9091:20;9088:1;9081:31;9131:4;9128:1;9121:15;9155:4;9152:1;9145:15;9171:125;9236:9;;;9257:10;;;9254:36;;;9270:18;;:::i;9633:212::-;9675:3;9713:5;9707:12;9757:6;9750:4;9743:5;9739:16;9734:3;9728:36;9819:1;9783:16;;9808:13;;;-1:-1:-1;9783:16:14;;9633:212;-1:-1:-1;9633:212:14:o;9850:348::-;10082:3;10110:30;10136:3;10128:6;10110:30;:::i;:::-;-1:-1:-1;;;10149:17:14;;10190:1;10182:10;;9850:348;-1:-1:-1;;;9850:348:14:o;10417:128::-;10484:9;;;10505:11;;;10502:37;;;10519:18;;:::i;10550:217::-;10590:1;10616;10606:132;;10660:10;10655:3;10651:20;10648:1;10641:31;10695:4;10692:1;10685:15;10723:4;10720:1;10713:15;10606:132;-1:-1:-1;10752:9:14;;10550:217::o;11025:184::-;11095:6;11148:2;11136:9;11127:7;11123:23;11119:32;11116:52;;;11164:1;11161;11154:12;11116:52;-1:-1:-1;11187:16:14;;11025:184;-1:-1:-1;11025:184:14:o;11214:127::-;11275:10;11270:3;11266:20;11263:1;11256:31;11306:4;11303:1;11296:15;11330:4;11327:1;11320:15;11346:251;11416:6;11469:2;11457:9;11448:7;11444:23;11440:32;11437:52;;;11485:1;11482;11475:12;11437:52;11517:9;11511:16;11536:31;11561:5;11536:31;:::i;11907:1001::-;12002:6;12055:2;12043:9;12034:7;12030:23;12026:32;12023:52;;;12071:1;12068;12061:12;12023:52;12104:9;12098:16;-1:-1:-1;;;;;12129:6:14;12126:30;12123:50;;;12169:1;12166;12159:12;12123:50;12192:22;;12245:4;12237:13;;12233:27;-1:-1:-1;12223:55:14;;12274:1;12271;12264:12;12223:55;12307:2;12301:9;-1:-1:-1;;;;;12325:6:14;12322:30;12319:56;;;12355:18;;:::i;:::-;12401:6;12398:1;12394:14;12428:28;12452:2;12448;12444:11;12428:28;:::i;:::-;12490:19;;;12534:2;12564:11;;;12560:20;;;12525:12;;;;12592:19;;;12589:39;;;12624:1;12621;12614:12;12589:39;12656:2;12652;12648:11;12637:22;;12668:210;12684:6;12679:3;12676:15;12668:210;;;12757:3;12751:10;12738:23;;12774:31;12799:5;12774:31;:::i;:::-;12818:18;;;12865:2;12701:12;;;;12856;;;;12668:210;;12913:168;12986:9;;;13017;;13034:15;;;13028:22;;13014:37;13004:71;;13055:18;;:::i;13086:332::-;13293:6;13282:9;13275:25;13336:2;13331;13320:9;13316:18;13309:30;13256:4;13356:56;13408:2;13397:9;13393:18;13385:6;13356:56;:::i;13819:684::-;14019:2;14031:21;;;14004:18;;14087:22;;;13971:4;14166:6;14140:2;14125:18;;13971:4;14200:277;14214:6;14211:1;14208:13;14200:277;;;14289:6;14276:20;14309:31;14334:5;14309:31;:::i;:::-;-1:-1:-1;;;;;14365:31:14;14353:44;;14426:2;14452:15;;;;14417:12;;;;14393:1;14229:9;14200:277;;;-1:-1:-1;14494:3:14;13819:684;-1:-1:-1;;;;;13819:684:14:o;15263:518::-;15365:2;15360:3;15357:11;15354:421;;;15401:5;15398:1;15391:16;15445:4;15442:1;15432:18;15515:2;15503:10;15499:19;15496:1;15492:27;15486:4;15482:38;15551:4;15539:10;15536:20;15533:47;;;-1:-1:-1;15574:4:14;15533:47;15629:2;15624:3;15620:12;15617:1;15613:20;15607:4;15603:31;15593:41;;15684:81;15702:2;15695:5;15692:13;15684:81;;;15761:1;15747:16;;15728:1;15717:13;15684:81;;15957:1299;16083:3;16077:10;-1:-1:-1;;;;;16102:6:14;16099:30;16096:56;;;16132:18;;:::i;:::-;16161:97;16251:6;16211:38;16243:4;16237:11;16211:38;:::i;:::-;16205:4;16161:97;:::i;:::-;16307:4;16338:2;16327:14;;16355:1;16350:649;;;;17043:1;17060:6;17057:89;;;-1:-1:-1;17112:19:14;;;17106:26;17057:89;-1:-1:-1;;15914:1:14;15910:11;;;15906:24;15902:29;15892:40;15938:1;15934:11;;;15889:57;17159:81;;16320:930;;16350:649;15210:1;15203:14;;;15247:4;15234:18;;-1:-1:-1;;16386:20:14;;;16504:222;16518:7;16515:1;16512:14;16504:222;;;16600:19;;;16594:26;16579:42;;16707:4;16692:20;;;;16660:1;16648:14;;;;16534:12;16504:222;;;16508:3;16754:6;16745:7;16742:19;16739:201;;;16815:19;;;16809:26;-1:-1:-1;;16898:1:14;16894:14;;;16910:3;16890:24;16886:37;16882:42;16867:58;16852:74;;16739:201;-1:-1:-1;;;;16986:1:14;16970:14;;;16966:22;16953:36;;-1:-1:-1;15957:1299:14:o;17261:245::-;17328:6;17381:2;17369:9;17360:7;17356:23;17352:32;17349:52;;;17397:1;17394;17387:12;17349:52;17429:9;17423:16;17448:28;17470:5;17448:28;:::i;18329:190::-;18458:3;18483:30;18509:3;18501:6;18483:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2062600",
								"executionCost": "2190",
								"totalCost": "2064790"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"burn(address)": "infinite",
								"calFee()": "infinite",
								"calculateShareETH(uint256)": "infinite",
								"calculateShareLP(uint256)": "infinite",
								"calculateShareTokens(uint256)": "infinite",
								"decimals()": "266",
								"distMgmtFee()": "infinite",
								"factory()": "2446",
								"getTokenAddress(uint256)": "6834",
								"getTokenAndUserBal(address)": "infinite",
								"getTokenList()": "infinite",
								"getTokenReserve(uint256)": "6812",
								"getTokensReserve()": "infinite",
								"getTotalMgmtFee()": "infinite",
								"initialize(address,string,address[])": "infinite",
								"lastAccruedAt()": "2340",
								"mint(address,uint256[])": "infinite",
								"name()": "infinite",
								"owner()": "2434",
								"reentrancyGuardEntered()": "2354",
								"renounceOwnership()": "infinite",
								"setReentrancyGuardStatus(bool)": "26819",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferTokensToOwner()": "infinite",
								"updateTokens(address[])": "infinite"
							},
							"internal": {
								"_factory()": "infinite",
								"_totalReservedETH()": "infinite",
								"_updateRebalanceReserve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 584,
									"end": 17390,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 17390,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb19986944f508eb69ba00ae534455059cf7526c67241b26a7c16baa945a70b564736f6c634300081e0033",
									".code": [
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "9257FA07"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "D2C725E0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "DE836EBD"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "DE836EBD"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "E54EF9A0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "EC5975C6"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "D2C725E0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "D410AD7D"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "DE41691C"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "B4B93C8C"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "BA6BA385"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "C45A0155"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "9257FA07"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "A131D436"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "A7C7FDEB"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "5483067D"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "89AFCB44"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "8E73F1B4"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "5483067D"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "55917EBE"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "67CCDF38"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "273CBAA0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "3A105CFB"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "90318FB"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 17390,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 15300,
											"end": 15455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 583,
											"end": 608,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 583,
											"end": 608,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 583,
											"end": 608,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 571,
											"end": 573,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 437,
											"end": 614,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1306,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1306,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1285,
											"end": 1307,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1267,
											"end": 1308,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1267,
											"end": 1308,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1255,
											"end": 1257,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1127,
											"end": 1314,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 14728,
											"end": 14850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 14728,
											"end": 14850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2691,
											"end": 2727,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2691,
											"end": 2727,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2664,
											"end": 2682,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2549,
											"end": 2733,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 4084,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 4084,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 13628,
											"end": 13945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 4986,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4961,
											"end": 4986,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4961,
											"end": 4986,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5017,
											"end": 5019,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5029,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5029,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5029,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5063,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5063,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5063,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5072,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4759,
											"end": 5078,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 14092,
											"end": 14260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 14092,
											"end": 14260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5510,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5478,
											"end": 5510,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5478,
											"end": 5510,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5314,
											"end": 5517,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 7568,
											"end": 8453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 7568,
											"end": 8453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7568,
											"end": 8453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 14407,
											"end": 14577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 14407,
											"end": 14577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 10470,
											"end": 11421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 10470,
											"end": 11421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 12647,
											"end": 13315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 12647,
											"end": 13315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 12647,
											"end": 13315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4988,
											"end": 5485,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 4988,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4988,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4988,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4988,
											"end": 5485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4453,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9131,
											"end": 9529,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9131,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 9131,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 9131,
											"end": 9529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 8662,
											"end": 8776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 8662,
											"end": 8776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1359,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1325,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1359,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 1359,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1325,
											"end": 1359,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1359,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1325,
											"end": 1359,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1359,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1359,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 11721,
											"end": 12283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 11721,
											"end": 12283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 5706,
											"end": 5937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 5706,
											"end": 5937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 6236,
											"end": 7270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 6236,
											"end": 7270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 9926,
											"end": 10224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 9926,
											"end": 10224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15127,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 14999,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 14999,
											"end": 15127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 14999,
											"end": 15127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15350,
											"end": 15354,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15372,
											"end": 15389,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15393,
											"end": 15401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 15393,
											"end": 15399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 15393,
											"end": 15401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15393,
											"end": 15401,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 15393,
											"end": 15401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15367,
											"end": 15401,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15367,
											"end": 15401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15367,
											"end": 15401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15367,
											"end": 15401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15430,
											"end": 15448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 15440,
											"end": 15447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 15440,
											"end": 15445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 15440,
											"end": 15447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15430,
											"end": 15448,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 15430,
											"end": 15448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15418,
											"end": 15448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 15418,
											"end": 15448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15418,
											"end": 15427,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15418,
											"end": 15448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 15418,
											"end": 15448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15418,
											"end": 15448,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 15418,
											"end": 15448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15411,
											"end": 15448,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15411,
											"end": 15448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15411,
											"end": 15448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15300,
											"end": 15455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15300,
											"end": 15455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5334,
											"end": 5341,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5343,
											"end": 5348,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5318,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5318,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5370,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5359,
											"end": 5370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6056,
											"end": 6060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6128,
											"end": 6132,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 966,
											"end": 976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6112,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6112,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6112,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6169,
											"end": 6173,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6175,
											"end": 6177,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6184,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6159,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6159,
											"end": 6185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6159,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6202,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6202,
											"end": 6206,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 6213,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5969,
											"end": 6213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14802,
											"end": 14818,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14802,
											"end": 14818,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6FDA65D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14837,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14830,
											"end": 14843,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14850,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4239,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 4239,
											"end": 4285,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1AB6DC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4271,
											"end": 4285,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4239,
											"end": 4285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 4239,
											"end": 4285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4305,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4318,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4322,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4299,
											"end": 4323,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 4295,
											"end": 4360,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24321863"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9503,
											"end": 9505,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9542,
											"end": 9543,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9515,
											"end": 9544,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E616D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9575,
											"end": 9577,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9560,
											"end": 9578,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9560,
											"end": 9578,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9553,
											"end": 9587,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9619,
											"end": 9621,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9301,
											"end": 9628,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4360,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 4295,
											"end": 4360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4408,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4386,
											"end": 4416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4386,
											"end": 4416,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4417,
											"modifierDepth": 1,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4417,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 4428,
											"end": 4454,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 4428,
											"end": 4454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4479,
											"end": 4489,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4464,
											"end": 4490,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4464,
											"end": 4490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4501,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4501,
											"end": 4507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4510,
											"end": 4517,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4517,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4501,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 4501,
											"end": 4517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4501,
											"end": 4517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4501,
											"end": 4517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4554,
											"end": 4560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4554,
											"end": 4567,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4538,
											"end": 4568,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4538,
											"end": 4568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4568,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4538,
											"end": 4568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4527,
											"end": 4568,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4568,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4527,
											"end": 4568,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4527,
											"end": 4535,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4568,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4568,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4568,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4527,
											"end": 4568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4527,
											"end": 4568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4579,
											"end": 4586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4604,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4604,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4579,
											"end": 4604,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4579,
											"end": 4604,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4604,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4604,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4604,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4604,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4630,
											"end": 4645,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4614,
											"end": 4645,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 10356,
											"end": 10406,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10356,
											"end": 10406,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10344,
											"end": 10346,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10329,
											"end": 10347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13667,
											"end": 13681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13683,
											"end": 13697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13699,
											"end": 13716,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13772,
											"end": 13779,
											"name": "PUSH",
											"source": 13,
											"value": "278D00"
										},
										{
											"begin": 13756,
											"end": 13769,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13756,
											"end": 13769,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13738,
											"end": 13753,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 13738,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 13738,
											"end": 13769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13738,
											"end": 13769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13738,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 13738,
											"end": 13769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13738,
											"end": 13769,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 13738,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13737,
											"end": 13779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 13737,
											"end": 13779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13737,
											"end": 13779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13737,
											"end": 13779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 13737,
											"end": 13779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13737,
											"end": 13779,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 13737,
											"end": 13779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13728,
											"end": 13779,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13728,
											"end": 13779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13798,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13798,
											"end": 13811,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 13798,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13789,
											"end": 13811,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13824,
											"end": 13835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13824,
											"end": 13835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13824,
											"end": 13835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13824,
											"end": 13850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 13824,
											"end": 13850,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13839,
											"end": 13850,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13839,
											"end": 13850,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13824,
											"end": 13850,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 13824,
											"end": 13850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13821,
											"end": 13878,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13821,
											"end": 13878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 13821,
											"end": 13878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13860,
											"end": 13866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13860,
											"end": 13866,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13876,
											"end": 13877,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13876,
											"end": 13877,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13821,
											"end": 13878,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 13821,
											"end": 13878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15866,
											"end": 15874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D23AAED3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10946,
											"end": 10971,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10946,
											"end": 10971,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10946,
											"end": 10971,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10980,
											"end": 11014,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10980,
											"end": 11014,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10980,
											"end": 11014,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13901,
											"end": 13922,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13922,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13922,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13922,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13922,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13922,
											"name": "PUSH",
											"source": 13,
											"value": "D23AAED3"
										},
										{
											"begin": 13901,
											"end": 13922,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 13901,
											"end": 13938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 13901,
											"end": 13938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13888,
											"end": 13938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13888,
											"end": 13938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13628,
											"end": 13945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14209,
											"end": 14216,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14209,
											"end": 14216,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6FDA65D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 14246,
											"end": 14252,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 14239,
											"end": 14253,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14239,
											"end": 14253,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14239,
											"end": 14253,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14239,
											"end": 14253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14239,
											"end": 14253,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14092,
											"end": 14260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4087,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7647,
											"end": 7671,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7691,
											"end": 7708,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7691,
											"end": 7708,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7687,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 7687,
											"end": 7735,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E469669"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7735,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7687,
											"end": 7735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 7687,
											"end": 7735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 7759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 7746,
											"end": 7757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 7746,
											"end": 7759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 7759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 7746,
											"end": 7759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7769,
											"end": 7787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7790,
											"end": 7814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 7808,
											"end": 7812,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 7790,
											"end": 7814,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 7814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 7790,
											"end": 7814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7769,
											"end": 7814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7769,
											"end": 7814,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 7838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7842,
											"end": 7843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7843,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 7824,
											"end": 7875,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB55FD27"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7875,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7875,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 7824,
											"end": 7875,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7896,
											"end": 7928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 7917,
											"end": 7927,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7896,
											"end": 7916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 7896,
											"end": 7928,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7896,
											"end": 7928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 7896,
											"end": 7928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7928,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7928,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7938,
											"end": 7970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 7952,
											"end": 7956,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 7969,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7938,
											"end": 7943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 7938,
											"end": 7970,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7938,
											"end": 7970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 7938,
											"end": 7970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8003,
											"end": 8009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 8003,
											"end": 8016,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7980,
											"end": 8000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8027,
											"end": 8447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 8027,
											"end": 8447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8051,
											"end": 8063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8048,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8063,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8027,
											"end": 8447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8027,
											"end": 8447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 8027,
											"end": 8447,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8081,
											"end": 8095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8105,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8106,
											"end": 8107,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 8098,
											"end": 8108,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8081,
											"end": 8108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8081,
											"end": 8108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8135,
											"end": 8136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8126,
											"end": 8136,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8122,
											"end": 8314,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8122,
											"end": 8314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 8122,
											"end": 8314,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8155,
											"end": 8168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 8178,
											"end": 8179,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 8171,
											"end": 8180,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8171,
											"end": 8180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8225,
											"end": 8275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8266,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8268,
											"end": 8274,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8225,
											"end": 8262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 8225,
											"end": 8275,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8225,
											"end": 8275,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 8225,
											"end": 8275,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8137,
											"end": 8314,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8122,
											"end": 8314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 8122,
											"end": 8314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8345,
											"end": 8351,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8339,
											"end": 8340,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 8330,
											"end": 8341,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8351,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8351,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8351,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 8330,
											"end": 8351,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8351,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 8330,
											"end": 8351,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8351,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 8330,
											"end": 8351,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8351,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8351,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8419,
											"end": 8422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8419,
											"end": 8422,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8027,
											"end": 8447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 8027,
											"end": 8447,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8027,
											"end": 8447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 8027,
											"end": 8447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8027,
											"end": 8447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7677,
											"end": 8453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7677,
											"end": 8453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14524,
											"end": 14531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14524,
											"end": 14531,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6FDA65D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14563,
											"end": 14569,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 14554,
											"end": 14570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14570,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14547,
											"end": 14570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14547,
											"end": 14570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14407,
											"end": 14577,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14407,
											"end": 14577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10574,
											"end": 10591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6FDA65D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10624,
											"end": 10637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10624,
											"end": 10637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 10624,
											"end": 10637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10682,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10686,
											"end": 10687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10676,
											"end": 10687,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10672,
											"end": 10697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 10672,
											"end": 10697,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10696,
											"end": 10697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10696,
											"end": 10697,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14092,
											"end": 14260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10672,
											"end": 10697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 10672,
											"end": 10697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10716,
											"end": 10740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10716,
											"end": 10753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10716,
											"end": 10753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10763,
											"end": 10785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10788,
											"end": 10796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10788,
											"end": 10803,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10788,
											"end": 10803,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10788,
											"end": 10803,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10788,
											"end": 10803,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10763,
											"end": 10803,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10763,
											"end": 10803,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10813,
											"end": 10832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 10850,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10835,
											"end": 10855,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3FC8CEF3"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 10835,
											"end": 10857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 10835,
											"end": 10857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10813,
											"end": 10857,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10881,
											"end": 10890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 11415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 10876,
											"end": 11415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10900,
											"end": 10914,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10896,
											"end": 10897,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10896,
											"end": 10914,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 11415,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 11415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 10876,
											"end": 11415,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10932,
											"end": 10945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10948,
											"end": 10954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10955,
											"end": 10956,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 10948,
											"end": 10957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10948,
											"end": 10957,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10948,
											"end": 10957,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11013,
											"end": 11024,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10948,
											"end": 10957,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10948,
											"end": 10957,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11013,
											"end": 11021,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11022,
											"end": 11023,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11022,
											"end": 11023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 11013,
											"end": 11024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11024,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10990,
											"end": 11024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10990,
											"end": 11024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11083,
											"end": 11084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11068,
											"end": 11080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11068,
											"end": 11084,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11064,
											"end": 11346,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11064,
											"end": 11346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 11064,
											"end": 11346,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D88E3E3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11794,
											"end": 11826,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11794,
											"end": 11826,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11794,
											"end": 11826,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11776,
											"end": 11827,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11836,
											"end": 11896,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11104,
											"end": 11125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11104,
											"end": 11125,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11151,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11151,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D88E3E3B"
										},
										{
											"begin": 11128,
											"end": 11151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 11128,
											"end": 11171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 11128,
											"end": 11171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11104,
											"end": 11171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11207,
											"end": 11220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11224,
											"end": 11248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 11236,
											"end": 11248,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11224,
											"end": 11233,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 11224,
											"end": 11248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 11224,
											"end": 11248,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11224,
											"end": 11248,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 11224,
											"end": 11248,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 11223,
											"end": 11258,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 11223,
											"end": 11258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 11223,
											"end": 11258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11331,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D06CA61F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11289,
											"end": 11331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11207,
											"end": 11258,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11207,
											"end": 11258,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11289,
											"end": 11318,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11318,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D06CA61F"
										},
										{
											"begin": 11289,
											"end": 11318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 11289,
											"end": 11331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11207,
											"end": 11258,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11207,
											"end": 11258,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11330,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11330,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 11289,
											"end": 11331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 11289,
											"end": 11331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 11289,
											"end": 11331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 11276,
											"end": 11331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11331,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 11276,
											"end": 11331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11086,
											"end": 11346,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11086,
											"end": 11346,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11064,
											"end": 11346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 11064,
											"end": 11346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11387,
											"end": 11390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11387,
											"end": 11390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 11415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 10876,
											"end": 11415,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 11415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 10876,
											"end": 11415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 11415,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10597,
											"end": 11421,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10597,
											"end": 11421,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10597,
											"end": 11421,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10597,
											"end": 11421,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 11421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 11421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12757,
											"end": 12773,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12757,
											"end": 12773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12787,
											"end": 12794,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12787,
											"end": 12794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12787,
											"end": 12794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12787,
											"end": 12794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6FDA65D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12871,
											"end": 12877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12871,
											"end": 12884,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12871,
											"end": 12884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12927,
											"end": 12954,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 12927,
											"end": 12954,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12954,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 12927,
											"end": 12954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12898,
											"end": 12954,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12986,
											"end": 12995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12981,
											"end": 13153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 12981,
											"end": 13153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13005,
											"end": 13017,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13001,
											"end": 13002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13001,
											"end": 13017,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12981,
											"end": 13153,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12981,
											"end": 13153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 12981,
											"end": 13153,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13063,
											"end": 13064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 13054,
											"end": 13065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13065,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13048,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13049,
											"end": 13050,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 13039,
											"end": 13051,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13039,
											"end": 13051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13051,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13065,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13116,
											"end": 13119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13116,
											"end": 13119,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12981,
											"end": 13153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 12981,
											"end": 13153,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12981,
											"end": 13153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 12981,
											"end": 13153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12981,
											"end": 13153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13197,
											"end": 13210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13197,
											"end": 13210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 13197,
											"end": 13210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13224,
											"end": 13239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13242,
											"end": 13258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 13252,
											"end": 13257,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13242,
											"end": 13251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 13242,
											"end": 13258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13242,
											"end": 13258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 13242,
											"end": 13258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13280,
											"end": 13289,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13280,
											"end": 13289,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 13291,
											"end": 13298,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13291,
											"end": 13298,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13280,
											"end": 13289,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13280,
											"end": 13289,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12647,
											"end": 13315,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12647,
											"end": 13315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4988,
											"end": 5485,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4988,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5050,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5073,
											"end": 5080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5073,
											"end": 5078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 5073,
											"end": 5080,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5080,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5073,
											"end": 5080,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5113,
											"end": 5119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5113,
											"end": 5126,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5050,
											"end": 5080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5050,
											"end": 5080,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 5136,
											"end": 5479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5160,
											"end": 5172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5156,
											"end": 5157,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5156,
											"end": 5172,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5136,
											"end": 5479,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5136,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 5136,
											"end": 5479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5190,
											"end": 5203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5213,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 5206,
											"end": 5215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5274,
											"end": 5285,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5274,
											"end": 5282,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 5274,
											"end": 5285,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5256,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5256,
											"end": 5285,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5315,
											"end": 5316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5312,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5305,
											"end": 5316,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5437,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 5301,
											"end": 5437,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5396,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5386,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5388,
											"end": 5395,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5336,
											"end": 5396,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5396,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 5336,
											"end": 5396,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5463,
											"end": 5466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5463,
											"end": 5466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5136,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 5136,
											"end": 5479,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5136,
											"end": 5479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 5136,
											"end": 5479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5136,
											"end": 5479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5040,
											"end": 5485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5040,
											"end": 5485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4988,
											"end": 5485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4453,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4522,
											"end": 4526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4576,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4576,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9131,
											"end": 9529,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 9131,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9202,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9225,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 9225,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9225,
											"end": 9233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9225,
											"end": 9233,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 9225,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9171,
											"end": 9233,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9171,
											"end": 9233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9171,
											"end": 9233,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9171,
											"end": 9233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9171,
											"end": 9233,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9171,
											"end": 9233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9246,
											"end": 9252,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9256,
											"end": 9257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9246,
											"end": 9257,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9243,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 9243,
											"end": 9266,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9259,
											"end": 9266,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9259,
											"end": 9266,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9259,
											"end": 9266,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9243,
											"end": 9266,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 9243,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 9339,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 9339,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9322,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 9322,
											"end": 9366,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9341,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 9347,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 9347,
											"end": 9352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 9347,
											"end": 9354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9347,
											"end": 9354,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 9347,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9341,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 9341,
											"end": 9366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9341,
											"end": 9366,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 9341,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9429,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 9429,
											"end": 9435,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 9445,
											"name": "PUSH",
											"source": 13,
											"value": "278D00"
										},
										{
											"begin": 9429,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 9429,
											"end": 9445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9429,
											"end": 9445,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 9429,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9425,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9412,
											"end": 9425,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 9412,
											"end": 9445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9445,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9472,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 9472,
											"end": 9479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9472,
											"end": 9477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 9472,
											"end": 9479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9472,
											"end": 9479,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 9472,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "PUSH",
											"source": 13,
											"value": "6EF86D1D001D3F4D5D79D6A6647502B17AF442209A78BBBAFB8867CB5CF6FB7"
										},
										{
											"begin": 9481,
											"end": 9487,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9489,
											"end": 9495,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9497,
											"end": 9506,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9508,
											"end": 9521,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9508,
											"end": 9521,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 13679,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13654,
											"end": 13679,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13654,
											"end": 13679,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13710,
											"end": 13712,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13695,
											"end": 13713,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13695,
											"end": 13713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13688,
											"end": 13722,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13688,
											"end": 13722,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13688,
											"end": 13722,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13688,
											"end": 13722,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13753,
											"end": 13755,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13738,
											"end": 13756,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13738,
											"end": 13756,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13731,
											"end": 13765,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13796,
											"end": 13798,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13781,
											"end": 13799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13781,
											"end": 13799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13641,
											"end": 13644,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13423,
											"end": 13814,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9522,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 9161,
											"end": 9529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9161,
											"end": 9529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9161,
											"end": 9529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 8662,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8738,
											"end": 8769,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8738,
											"end": 8769,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8738,
											"end": 8769,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8738,
											"end": 8769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8738,
											"end": 8769,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8738,
											"end": 8769,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8738,
											"end": 8769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8738,
											"end": 8769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8738,
											"end": 8769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8738,
											"end": 8769,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8738,
											"end": 8769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8738,
											"end": 8769,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11828,
											"end": 11857,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11828,
											"end": 11857,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6FDA65D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11873,
											"end": 11887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11890,
											"end": 11903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 11890,
											"end": 11903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11967,
											"end": 11973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 11967,
											"end": 11980,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11873,
											"end": 11903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11873,
											"end": 11903,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11953,
											"end": 11981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 11953,
											"end": 11981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11953,
											"end": 11981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11938,
											"end": 11981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11938,
											"end": 11981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11995,
											"end": 12001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12005,
											"end": 12006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11995,
											"end": 12006,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11991,
											"end": 12027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 11991,
											"end": 12027,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12008,
											"end": 12027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11991,
											"end": 12027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 11991,
											"end": 12027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12051,
											"end": 12060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 12046,
											"end": 12277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12070,
											"end": 12078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12070,
											"end": 12085,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12066,
											"end": 12085,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12066,
											"end": 12085,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12277,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 12046,
											"end": 12277,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12103,
											"end": 12118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12130,
											"end": 12131,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 12121,
											"end": 12132,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12132,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12103,
											"end": 12132,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12103,
											"end": 12132,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12188,
											"end": 12194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12177,
											"end": 12184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12165,
											"end": 12174,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12165,
											"end": 12184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 12165,
											"end": 12184,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12165,
											"end": 12184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12165,
											"end": 12184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 12165,
											"end": 12184,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12165,
											"end": 12184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 12165,
											"end": 12184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12164,
											"end": 12194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 12164,
											"end": 12194,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12164,
											"end": 12194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12164,
											"end": 12194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 12164,
											"end": 12194,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12164,
											"end": 12194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 12164,
											"end": 12194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12158,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12159,
											"end": 12160,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 12146,
											"end": 12161,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12146,
											"end": 12161,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12161,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12194,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12249,
											"end": 12252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12249,
											"end": 12252,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 12046,
											"end": 12277,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 12046,
											"end": 12277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11863,
											"end": 12283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 12283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 12283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4689,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4769,
											"end": 4776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4861,
											"name": "PUSH",
											"source": 2,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5808,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5789,
											"end": 5808,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5789,
											"end": 5808,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 5785,
											"end": 5831,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1AB6DC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5831,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 5831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 5785,
											"end": 5831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5842,
											"end": 5858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 5842,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5851,
											"end": 5858,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5858,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5842,
											"end": 5858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 5842,
											"end": 5858,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5842,
											"end": 5858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 5842,
											"end": 5858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5842,
											"end": 5858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5868,
											"end": 5893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 5868,
											"end": 5891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 5868,
											"end": 5893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5868,
											"end": 5893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 5868,
											"end": 5893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3CA096A4C913A6F222A557151D17832DDDAB787E6DDF59063CAB45E15B9A9FAC"
										},
										{
											"begin": 5922,
											"end": 5929,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5929,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 5908,
											"end": 5930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5930,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6360,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6380,
											"end": 6397,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6380,
											"end": 6397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 6376,
											"end": 6424,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E469669"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6424,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 6376,
											"end": 6424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6469,
											"end": 6493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6469,
											"end": 6506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6469,
											"end": 6506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6516,
											"end": 6535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6538,
											"end": 6558,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3FC8CEF3"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 6538,
											"end": 6560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 6538,
											"end": 6560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6516,
											"end": 6560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6516,
											"end": 6560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6571,
											"end": 6584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 6571,
											"end": 6582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 6571,
											"end": 6584,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6571,
											"end": 6584,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 6571,
											"end": 6584,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6617,
											"end": 6630,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 6614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6667,
											"end": 6988,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 6667,
											"end": 6988,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6703,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6687,
											"end": 6688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6687,
											"end": 6703,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6667,
											"end": 6988,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6667,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 6667,
											"end": 6988,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6721,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6744,
											"end": 6745,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6737,
											"end": 6746,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D88E3E3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6746,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11776,
											"end": 11827,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11776,
											"end": 11827,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11776,
											"end": 11827,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11836,
											"end": 11896,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6811,
											"end": 6834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6834,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D88E3E3B"
										},
										{
											"begin": 6811,
											"end": 6834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 6811,
											"end": 6854,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 6811,
											"end": 6854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6787,
											"end": 6854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6787,
											"end": 6854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6913,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6898,
											"end": 6927,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D06CA61F"
										},
										{
											"begin": 6928,
											"end": 6935,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6935,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 6936,
											"end": 6937,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6928,
											"end": 6938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 6938,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6940,
											"end": 6944,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 6898,
											"end": 6945,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 6898,
											"end": 6945,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 6898,
											"end": 6945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 6886,
											"end": 6945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6945,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 6886,
											"end": 6945,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 6886,
											"end": 6945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6945,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6975,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6972,
											"end": 6975,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6975,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6975,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6667,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 6667,
											"end": 6988,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6667,
											"end": 6988,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 6667,
											"end": 6988,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7010,
											"end": 7028,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 7010,
											"end": 7070,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 7061,
											"end": 7069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7044,
											"end": 7060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 7044,
											"end": 7070,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 7044,
											"end": 7070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7010,
											"end": 7070,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 7010,
											"end": 7070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7031,
											"end": 7041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 7010,
											"end": 7070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7010,
											"end": 7070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7070,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7070,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 7086,
											"end": 7089,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7100,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 7080,
											"end": 7101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 7080,
											"end": 7101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7117,
											"end": 7126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7112,
											"end": 7264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 7112,
											"end": 7264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7150,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7264,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7112,
											"end": 7264,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7190,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7190,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7192,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 7183,
											"end": 7193,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7193,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7177,
											"end": 7178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 7168,
											"end": 7179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7193,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 7168,
											"end": 7193,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7193,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 7168,
											"end": 7193,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7193,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 7168,
											"end": 7193,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7193,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7193,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7168,
											"end": 7193,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7236,
											"end": 7239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7236,
											"end": 7239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 7112,
											"end": 7264,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7112,
											"end": 7264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7264,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 7270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 7270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 7270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 7270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 7270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10030,
											"end": 10046,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10030,
											"end": 10046,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6FDA65D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10062,
											"end": 10081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10084,
											"end": 10103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 10084,
											"end": 10101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 10084,
											"end": 10103,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10084,
											"end": 10103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 10084,
											"end": 10103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10062,
											"end": 10103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10062,
											"end": 10103,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10117,
											"end": 10128,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10132,
											"end": 10133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10117,
											"end": 10133,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10113,
											"end": 10152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10113,
											"end": 10152,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10142,
											"end": 10152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 10142,
											"end": 10152,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14260,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14092,
											"end": 14260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10113,
											"end": 10152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10113,
											"end": 10152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10205,
											"end": 10216,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10188,
											"end": 10201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 4029,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10188,
											"end": 10201,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 10188,
											"end": 10201,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 10175,
											"end": 10201,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10185,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 10175,
											"end": 10201,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10201,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 10175,
											"end": 10201,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10174,
											"end": 10216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 10174,
											"end": 10216,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10174,
											"end": 10216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10174,
											"end": 10216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 10174,
											"end": 10216,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10174,
											"end": 10216,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 10174,
											"end": 10216,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 10217,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9926,
											"end": 10224,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9926,
											"end": 10224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15127,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 14999,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15077,
											"end": 15093,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15077,
											"end": 15093,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1942,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6FDA65D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1966,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15112,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5314,
											"end": 5517,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9982,
											"end": 10110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10098,
											"end": 10102,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10066,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 10066,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11825,
											"end": 11849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 11862,
											"end": 11867,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11869,
											"end": 11876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11852,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 11852,
											"end": 11877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "tag",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 11852,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11825,
											"end": 11877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11825,
											"end": 11877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11891,
											"end": 11907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11891,
											"end": 11927,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 11887,
											"end": 12196,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11966,
											"end": 11971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11947,
											"end": 11963,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11947,
											"end": 11971,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14728,
											"end": 14760,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14728,
											"end": 14760,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14710,
											"end": 14761,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14777,
											"end": 14795,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14777,
											"end": 14795,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14777,
											"end": 14795,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14770,
											"end": 14804,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14770,
											"end": 14804,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14770,
											"end": 14804,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14820,
											"end": 14838,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 14820,
											"end": 14838,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14820,
											"end": 14838,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14813,
											"end": 14847,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14813,
											"end": 14847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14813,
											"end": 14847,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14683,
											"end": 14701,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 14683,
											"end": 14701,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11998,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 14508,
											"end": 14853,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "tag",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 11943,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12114,
											"end": 12171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 12123,
											"end": 12128,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12130,
											"end": 12137,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12158,
											"end": 12163,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12139,
											"end": 12155,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12139,
											"end": 12163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12165,
											"end": 12170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12114,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 12114,
											"end": 12171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12114,
											"end": 12171,
											"name": "tag",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 12114,
											"end": 12171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 12202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11726,
											"end": 12202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11726,
											"end": 12202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6586,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "488"
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5314,
											"end": 5517,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "tag",
											"source": 2,
											"value": "488"
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "490"
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6832,
											"end": 6833,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5314,
											"end": 5517,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "tag",
											"source": 2,
											"value": "490"
										},
										{
											"begin": 6760,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6855,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 6863,
											"end": 6867,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 6871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6873,
											"end": 6878,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6855,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "493"
										},
										{
											"begin": 6855,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "501"
										},
										{
											"begin": 2388,
											"end": 2393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2402,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "502"
										},
										{
											"begin": 2365,
											"end": 2403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "501"
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5314,
											"end": 5517,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9446,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 9240,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "518"
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9381,
											"end": 9382,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9354,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5314,
											"end": 5517,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "tag",
											"source": 2,
											"value": "518"
										},
										{
											"begin": 9306,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9404,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "501"
										},
										{
											"begin": 9412,
											"end": 9419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9433,
											"end": 9438,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9404,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "493"
										},
										{
											"begin": 9404,
											"end": 9439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 996,
											"end": 1182,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 996,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15050,
											"end": 15082,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15050,
											"end": 15082,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15032,
											"end": 15083,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15092,
											"end": 15126,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15092,
											"end": 15126,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15092,
											"end": 15126,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15005,
											"end": 15023,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 15005,
											"end": 15023,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15005,
											"end": 15023,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15005,
											"end": 15023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 1089,
											"end": 1175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1114,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "525"
										},
										{
											"begin": 1089,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 8714,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8784,
											"end": 8805,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "528"
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8857,
											"end": 8858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5314,
											"end": 5517,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "tag",
											"source": 2,
											"value": "528"
										},
										{
											"begin": 8780,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8880,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "501"
										},
										{
											"begin": 8896,
											"end": 8897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8909,
											"end": 8914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8880,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "493"
										},
										{
											"begin": 8880,
											"end": 8915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16059,
											"end": 16501,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 16059,
											"end": 16501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16136,
											"end": 16142,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 16136,
											"end": 16149,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 16136,
											"end": 16149,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 16170,
											"end": 16197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 16170,
											"end": 16197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16159,
											"end": 16167,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16159,
											"end": 16167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 16159,
											"end": 16197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 16159,
											"end": 16197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16213,
											"end": 16222,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16208,
											"end": 16495,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 16208,
											"end": 16495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16232,
											"end": 16244,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16228,
											"end": 16229,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16228,
											"end": 16244,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 16208,
											"end": 16495,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16208,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 16208,
											"end": 16495,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16262,
											"end": 16275,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16278,
											"end": 16284,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 16285,
											"end": 16286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 16278,
											"end": 16287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16385,
											"end": 16389,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16278,
											"end": 16287,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16376,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 16342,
											"end": 16376,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 16342,
											"end": 16391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 16342,
											"end": 16391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16336,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16337,
											"end": 16338,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 16328,
											"end": 16339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16391,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16467,
											"end": 16470,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16467,
											"end": 16470,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16208,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 16208,
											"end": 16495,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16691,
											"end": 17388,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 16691,
											"end": 17388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16742,
											"end": 16766,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16778,
											"end": 16802,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16805,
											"end": 16815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 15866,
											"end": 15874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15902,
											"end": 15909,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15824,
											"end": 15917,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16805,
											"end": 16815,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 16805,
											"end": 16815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16778,
											"end": 16815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16778,
											"end": 16815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16825,
											"end": 16837,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16840,
											"end": 16855,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16840,
											"end": 16860,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16860,
											"name": "PUSH",
											"source": 13,
											"value": "3FC8CEF3"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 16840,
											"end": 16862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 16840,
											"end": 16862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16915,
											"end": 16923,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16915,
											"end": 16930,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 16825,
											"end": 16862,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16825,
											"end": 16862,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16898,
											"end": 16912,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16941,
											"end": 17382,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 16941,
											"end": 17382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16965,
											"end": 16971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16961,
											"end": 16962,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16961,
											"end": 16971,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 17382,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 17382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 16941,
											"end": 17382,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16989,
											"end": 17004,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17007,
											"end": 17015,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 17016,
											"end": 17017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 17007,
											"end": 17018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17007,
											"end": 17018,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 16989,
											"end": 17018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16989,
											"end": 17018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17046,
											"end": 17047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17036,
											"end": 17043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17036,
											"end": 17047,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17032,
											"end": 17312,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17032,
											"end": 17312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 17032,
											"end": 17312,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17067,
											"end": 17080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17083,
											"end": 17089,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 17090,
											"end": 17091,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 17083,
											"end": 17092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D88E3E3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11776,
											"end": 11827,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11776,
											"end": 11827,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11776,
											"end": 11827,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11836,
											"end": 11896,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17083,
											"end": 17092,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17161,
											"end": 17184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17184,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17184,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17184,
											"name": "PUSH",
											"source": 13,
											"value": "D88E3E3B"
										},
										{
											"begin": 17161,
											"end": 17184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 17161,
											"end": 17197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 17161,
											"end": 17197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D06CA61F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17137,
											"end": 17197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17137,
											"end": 17197,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17253,
											"end": 17282,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17282,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17282,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17282,
											"name": "PUSH",
											"source": 13,
											"value": "D06CA61F"
										},
										{
											"begin": 17253,
											"end": 17282,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17283,
											"end": 17290,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17283,
											"end": 17290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17137,
											"end": 17197,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17137,
											"end": 17197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 17253,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 17253,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 17253,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17233,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 17233,
											"end": 17297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17233,
											"end": 17297,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17233,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 17233,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17233,
											"end": 17297,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 17233,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17233,
											"end": 17297,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 17233,
											"end": 17297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17049,
											"end": 17312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17049,
											"end": 17312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17032,
											"end": 17312,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 17032,
											"end": 17312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17354,
											"end": 17357,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17354,
											"end": 17357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 17382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 16941,
											"end": 17382,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 17382,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 16941,
											"end": 17382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 17382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16768,
											"end": 17388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16768,
											"end": 17388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16768,
											"end": 17388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16691,
											"end": 17388,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16691,
											"end": 17388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "tag",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "575"
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11193,
											"end": 11194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11164,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5314,
											"end": 5517,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "tag",
											"source": 2,
											"value": "575"
										},
										{
											"begin": 11118,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11220,
											"end": 11241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "577"
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11264,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5314,
											"end": 5517,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "tag",
											"source": 2,
											"value": "577"
										},
										{
											"begin": 11216,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11335,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11344,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11315,
											"end": 11352,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "579"
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11405,
											"end": 11410,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11421,
											"end": 11426,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "580"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 608,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 583,
											"end": 608,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 571,
											"end": 573,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 556,
											"end": 574,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 437,
											"end": 614,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "tag",
											"source": 2,
											"value": "580"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11427,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "tag",
											"source": 2,
											"value": "579"
										},
										{
											"begin": 11362,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11055,
											"end": 11444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 11444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "tag",
											"source": 2,
											"value": "493"
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "583"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7497,
											"end": 7502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "584"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 7479,
											"end": 7502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "tag",
											"source": 2,
											"value": "584"
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7502,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "585"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "tag",
											"source": 2,
											"value": "583"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7533,
											"end": 7552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7572,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "586"
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14728,
											"end": 14760,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14728,
											"end": 14760,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14710,
											"end": 14761,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14777,
											"end": 14795,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14777,
											"end": 14795,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14777,
											"end": 14795,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14770,
											"end": 14804,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14770,
											"end": 14804,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14770,
											"end": 14804,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14820,
											"end": 14838,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 14820,
											"end": 14838,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14820,
											"end": 14838,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14813,
											"end": 14847,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14813,
											"end": 14847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14813,
											"end": 14847,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14683,
											"end": 14701,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 14683,
											"end": 14701,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7636,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 14508,
											"end": 14853,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "tag",
											"source": 2,
											"value": "586"
										},
										{
											"begin": 7586,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7841,
											"end": 7860,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7821,
											"end": 7860,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "tag",
											"source": 2,
											"value": "585"
										},
										{
											"begin": 7339,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "588"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8062,
											"end": 8085,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "tag",
											"source": 2,
											"value": "588"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8275,
											"end": 8299,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "tag",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 7895,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8354,
											"end": 8356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8348,
											"end": 8352,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8358,
											"end": 8363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "590"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 608,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 583,
											"end": 608,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 571,
											"end": 573,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 556,
											"end": 574,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 437,
											"end": 614,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "tag",
											"source": 2,
											"value": "590"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7276,
											"end": 8371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 8371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 8371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "tag",
											"source": 2,
											"value": "502"
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "PUSH",
											"source": 2,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "600"
										},
										{
											"begin": 2591,
											"end": 2596,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "601"
										},
										{
											"begin": 2581,
											"end": 2596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "600"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "601"
										},
										{
											"begin": 2606,
											"end": 2625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5981,
											"name": "tag",
											"source": 5,
											"value": "525"
										},
										{
											"begin": 5328,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "610"
										},
										{
											"begin": 5812,
											"end": 5816,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5797,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5784,
											"end": 5811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "611"
										},
										{
											"begin": 5784,
											"end": 5811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "tag",
											"source": 5,
											"value": "610"
										},
										{
											"begin": 5784,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5888,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5892,
											"end": 5893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5893,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "613"
										},
										{
											"begin": 5871,
											"end": 5927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5918,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "613"
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "614"
										},
										{
											"begin": 5897,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "tag",
											"source": 5,
											"value": "613"
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17713,
											"end": 17715,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17695,
											"end": 17716,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17752,
											"end": 17754,
											"name": "PUSH",
											"source": 14,
											"value": "2A"
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17725,
											"end": 17755,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17791,
											"end": 17825,
											"name": "PUSH",
											"source": 14,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 17771,
											"end": 17789,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 17771,
											"end": 17789,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17771,
											"end": 17789,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17764,
											"end": 17826,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17842,
											"end": 17860,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 17842,
											"end": 17860,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17842,
											"end": 17860,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17835,
											"end": 17875,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17892,
											"end": 17911,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 17892,
											"end": 17911,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 17511,
											"end": 17917,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4342,
											"name": "tag",
											"source": 6,
											"value": "611"
										},
										{
											"begin": 4119,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4264,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "621"
										},
										{
											"begin": 4305,
											"end": 4311,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "622"
										},
										{
											"begin": 4283,
											"end": 4335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "tag",
											"source": 6,
											"value": "621"
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4335,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4342,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4119,
											"end": 4342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "tag",
											"source": 6,
											"value": "622"
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5353,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5398,
											"end": 5403,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5394,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5403,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5403,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "624"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18124,
											"end": 18126,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18106,
											"end": 18127,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18163,
											"end": 18165,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 18143,
											"end": 18161,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 18143,
											"end": 18161,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18143,
											"end": 18161,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18136,
											"end": 18166,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18202,
											"end": 18236,
											"name": "PUSH",
											"source": 14,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 18182,
											"end": 18200,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 18182,
											"end": 18200,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18182,
											"end": 18200,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18175,
											"end": 18237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18253,
											"end": 18271,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 18253,
											"end": 18271,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18253,
											"end": 18271,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18246,
											"end": 18282,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18299,
											"end": 18318,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 18299,
											"end": 18318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 17922,
											"end": 18324,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "tag",
											"source": 6,
											"value": "624"
										},
										{
											"begin": 5365,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5457,
											"end": 5469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5494,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5504,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5509,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5522,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5524,
											"end": 5528,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "627"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "628"
										},
										{
											"begin": 5498,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "tag",
											"source": 6,
											"value": "627"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "631"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "630"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "tag",
											"source": 6,
											"value": "631"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "tag",
											"source": 6,
											"value": "630"
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "632"
										},
										{
											"begin": 5573,
											"end": 5579,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5588,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5600,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5614,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "633"
										},
										{
											"begin": 5546,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "tag",
											"source": 6,
											"value": "632"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5539,
											"end": 5615,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 5176,
											"end": 5622,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5176,
											"end": 5622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "tag",
											"source": 6,
											"value": "633"
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7890,
											"end": 7897,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "635"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7917,
											"end": 7927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7917,
											"end": 7934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7939,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "639"
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "639"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18726,
											"end": 18728,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18708,
											"end": 18729,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18765,
											"end": 18767,
											"name": "PUSH",
											"source": 14,
											"value": "1D"
										},
										{
											"begin": 18745,
											"end": 18763,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 18745,
											"end": 18763,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18745,
											"end": 18763,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18738,
											"end": 18768,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18804,
											"end": 18835,
											"name": "PUSH",
											"source": 14,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 18784,
											"end": 18802,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 18784,
											"end": 18802,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18784,
											"end": 18802,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18777,
											"end": 18836,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18853,
											"end": 18871,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 18853,
											"end": 18871,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 18524,
											"end": 18877,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "tag",
											"source": 6,
											"value": "639"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8219,
											"end": 8229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "621"
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "tag",
											"source": 6,
											"value": "635"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "621"
										},
										{
											"begin": 8268,
											"end": 8278,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8280,
											"end": 8292,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9012,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "647"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9275,
											"end": 9290,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9262,
											"end": 9272,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9254,
											"end": 9273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9291,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "tag",
											"source": 6,
											"value": "647"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9354,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 9335,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "220"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "652"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "651"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "652"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "651"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "652"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "653"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "654"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "653"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "226"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "652"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "656"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "652"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "656"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "654"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "659"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "653"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "659"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 619,
											"end": 750,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 619,
											"end": 750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 694,
											"end": 725,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 694,
											"end": 725,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 684,
											"end": 726,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 684,
											"end": 726,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 674,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 674,
											"end": 744,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 740,
											"end": 741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 738,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 742,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 755,
											"end": 1122,
											"name": "tag",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 755,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 823,
											"end": 829,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 837,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 886,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 863,
											"end": 870,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 859,
											"end": 882,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 855,
											"end": 887,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 852,
											"end": 904,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 852,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "678"
										},
										{
											"begin": 852,
											"end": 904,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 900,
											"end": 901,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 902,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 852,
											"end": 904,
											"name": "tag",
											"source": 14,
											"value": "678"
										},
										{
											"begin": 852,
											"end": 904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 926,
											"end": 949,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 958,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 958,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 958,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 958,
											"end": 989,
											"name": "tag",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 958,
											"end": 989,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1008,
											"end": 1013,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1058,
											"end": 1090,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1058,
											"end": 1090,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 755,
											"end": 1122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1319,
											"end": 1827,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1319,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1410,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1467,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1444,
											"end": 1451,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1463,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1436,
											"end": 1468,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1483,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "tag",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1520,
											"end": 1529,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 1539,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "tag",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1589,
											"end": 1594,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1618,
											"end": 1650,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 1618,
											"end": 1650,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 1659,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1692,
											"name": "tag",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 1659,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1319,
											"end": 1827,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1319,
											"end": 1827,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1791,
											"end": 1793,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1794,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1794,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1794,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1794,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1763,
											"end": 1795,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1763,
											"end": 1795,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1319,
											"end": 1827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1832,
											"end": 2278,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 1832,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1885,
											"end": 1888,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1928,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1917,
											"end": 1929,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 1948,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1982,
											"end": 1986,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 1980,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 1987,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2021,
											"end": 2025,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2010,
											"end": 2026,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2045,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2253,
											"name": "tag",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 2054,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2062,
											"end": 2075,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2054,
											"end": 2253,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2054,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 2054,
											"end": 2253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2133,
											"end": 2146,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2133,
											"end": 2146,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2129,
											"end": 2168,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2117,
											"end": 2169,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2117,
											"end": 2169,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2203,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2189,
											"end": 2203,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2189,
											"end": 2203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2189,
											"end": 2203,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2083,
											"end": 2092,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2054,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 2054,
											"end": 2253,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2054,
											"end": 2253,
											"name": "tag",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 2054,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2272,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2269,
											"end": 2272,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1832,
											"end": 2278,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 2278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2283,
											"end": 2544,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 2283,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2462,
											"end": 2464,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2460,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2425,
											"end": 2429,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 2534,
											"end": 2536,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2532,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2482,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 2482,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2738,
											"end": 2865,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 2738,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2799,
											"end": 2809,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 2794,
											"end": 2797,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 2787,
											"end": 2788,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2811,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2830,
											"end": 2834,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2854,
											"end": 2858,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2859,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2870,
											"end": 3145,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 2870,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2941,
											"end": 2943,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2944,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3008,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2987,
											"end": 3000,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2987,
											"end": 3000,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 3010,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2971,
											"end": 3011,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2971,
											"end": 3011,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3026,
											"end": 3060,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3026,
											"end": 3060,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3062,
											"end": 3084,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3062,
											"end": 3084,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3062,
											"end": 3084,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3023,
											"end": 3085,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3020,
											"end": 3108,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3020,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 3020,
											"end": 3108,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 3088,
											"end": 3106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "tag",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3124,
											"end": 3126,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3139,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2870,
											"end": 3145,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2870,
											"end": 3145,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2870,
											"end": 3145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3150,
											"end": 3517,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 3150,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3221,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3229,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3280,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3274,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3262,
											"end": 3268,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3258,
											"end": 3275,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3254,
											"end": 3281,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 3244,
											"end": 3299,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3295,
											"end": 3296,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3293,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3297,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3299,
											"name": "tag",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 3244,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3318,
											"end": 3338,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3318,
											"end": 3338,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3350,
											"end": 3380,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3350,
											"end": 3380,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3347,
											"end": 3397,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3347,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "698"
										},
										{
											"begin": 3347,
											"end": 3397,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3393,
											"end": 3394,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3395,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3347,
											"end": 3397,
											"name": "tag",
											"source": 14,
											"value": "698"
										},
										{
											"begin": 3347,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3430,
											"end": 3434,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3422,
											"end": 3428,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3418,
											"end": 3435,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3490,
											"end": 3493,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3483,
											"end": 3487,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3479,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 3466,
											"end": 3480,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3454,
											"end": 3481,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3450,
											"end": 3488,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3447,
											"end": 3494,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3511,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 3444,
											"end": 3511,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3507,
											"end": 3508,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3505,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3444,
											"end": 3511,
											"name": "tag",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 3444,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3150,
											"end": 3517,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3150,
											"end": 3517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3150,
											"end": 3517,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3150,
											"end": 3517,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3150,
											"end": 3517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3150,
											"end": 3517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3522,
											"end": 4754,
											"name": "tag",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 3522,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3650,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3658,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3666,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3701,
											"end": 3710,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3692,
											"end": 3699,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3688,
											"end": 3711,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3684,
											"end": 3716,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3681,
											"end": 3733,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3681,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 3681,
											"end": 3733,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3729,
											"end": 3730,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3731,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3681,
											"end": 3733,
											"name": "tag",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 3681,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3755,
											"end": 3778,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3787,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3787,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 3787,
											"end": 3818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3787,
											"end": 3818,
											"name": "tag",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 3787,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3837,
											"end": 3842,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3893,
											"end": 3895,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3909,
											"end": 3939,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 3939,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3906,
											"end": 3956,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3906,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "703"
										},
										{
											"begin": 3906,
											"end": 3956,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3906,
											"end": 3956,
											"name": "tag",
											"source": 14,
											"value": "703"
										},
										{
											"begin": 3906,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3975,
											"end": 3997,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3975,
											"end": 3997,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4028,
											"end": 4032,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4020,
											"end": 4033,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4020,
											"end": 4033,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4016,
											"end": 4043,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4006,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 4006,
											"end": 4061,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4057,
											"end": 4058,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4055,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4059,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4006,
											"end": 4061,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 4006,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4097,
											"end": 4099,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4100,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4112,
											"end": 4142,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4109,
											"end": 4165,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4109,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 4109,
											"end": 4165,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 4145,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "tag",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 4234,
											"end": 4236,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4211,
											"end": 4228,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4211,
											"end": 4228,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4207,
											"end": 4238,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4240,
											"end": 4242,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4243,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 4187,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4244,
											"name": "tag",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 4187,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4260,
											"end": 4265,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4315,
											"end": 4322,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4310,
											"end": 4312,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4301,
											"end": 4307,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4297,
											"end": 4299,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4293,
											"end": 4308,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4313,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4286,
											"end": 4323,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4283,
											"end": 4340,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4283,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 4283,
											"end": 4340,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4336,
											"end": 4337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4333,
											"end": 4334,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4283,
											"end": 4340,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 4283,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4386,
											"end": 4388,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4384,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4378,
											"end": 4389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4373,
											"end": 4375,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4366,
											"end": 4371,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4362,
											"end": 4376,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4349,
											"end": 4398,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 4443,
											"end": 4444,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4429,
											"end": 4435,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4422,
											"end": 4427,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4414,
											"end": 4441,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4407,
											"end": 4445,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4469,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4454,
											"end": 4469,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4454,
											"end": 4469,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4454,
											"end": 4469,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4454,
											"end": 4469,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4454,
											"end": 4469,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4522,
											"end": 4524,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4511,
											"end": 4520,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4507,
											"end": 4525,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4494,
											"end": 4526,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4541,
											"end": 4549,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4538,
											"end": 4570,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4535,
											"end": 4587,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4535,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 4535,
											"end": 4587,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4583,
											"end": 4584,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4580,
											"end": 4581,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4535,
											"end": 4587,
											"name": "tag",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 4535,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4622,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "710"
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4675,
											"end": 4683,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4660,
											"end": 4684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4622,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 4622,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4622,
											"end": 4694,
											"name": "tag",
											"source": 14,
											"value": "710"
										},
										{
											"begin": 4622,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3522,
											"end": 4754,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3522,
											"end": 4754,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 3522,
											"end": 4754,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3522,
											"end": 4754,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4713,
											"end": 4721,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3522,
											"end": 4754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5083,
											"end": 5309,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 5083,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5142,
											"end": 5148,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5183,
											"end": 5192,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5174,
											"end": 5181,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5170,
											"end": 5193,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5166,
											"end": 5198,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5215,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 5163,
											"end": 5215,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5211,
											"end": 5212,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5209,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5213,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5215,
											"name": "tag",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 5163,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5083,
											"end": 5309,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5083,
											"end": 5309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5522,
											"end": 5769,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 5522,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5581,
											"end": 5587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5636,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5631,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5613,
											"end": 5620,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5609,
											"end": 5632,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5605,
											"end": 5637,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5602,
											"end": 5654,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5602,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 5602,
											"end": 5654,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5650,
											"end": 5651,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5652,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5602,
											"end": 5654,
											"name": "tag",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 5602,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 5698,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5676,
											"end": 5699,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5708,
											"end": 5739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 5733,
											"end": 5738,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5708,
											"end": 5739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 5708,
											"end": 5739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5774,
											"end": 6194,
											"name": "tag",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 5774,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5827,
											"end": 5830,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5865,
											"end": 5870,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5859,
											"end": 5871,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5892,
											"end": 5898,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5887,
											"end": 5890,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5880,
											"end": 5899,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5924,
											"end": 5928,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5915,
											"end": 5929,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5908,
											"end": 5929,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5908,
											"end": 5929,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5963,
											"end": 5967,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5956,
											"end": 5961,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5952,
											"end": 5968,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5986,
											"end": 5987,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6169,
											"name": "tag",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 5996,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6016,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6007,
											"end": 6008,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6004,
											"end": 6017,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 5996,
											"end": 6169,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5996,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 5996,
											"end": 6169,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6071,
											"end": 6084,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6071,
											"end": 6084,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6059,
											"end": 6085,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6059,
											"end": 6085,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6114,
											"end": 6118,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6105,
											"end": 6119,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 6105,
											"end": 6119,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6105,
											"end": 6119,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6105,
											"end": 6119,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6159,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6159,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6159,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6032,
											"end": 6033,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6025,
											"end": 6034,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5996,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 5996,
											"end": 6169,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6199,
											"end": 6460,
											"name": "tag",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 6199,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6378,
											"end": 6380,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6367,
											"end": 6376,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6360,
											"end": 6381,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6398,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 6450,
											"end": 6452,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6439,
											"end": 6448,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6435,
											"end": 6453,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6427,
											"end": 6433,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6398,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 6398,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6465,
											"end": 6868,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 6465,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6700,
											"end": 6702,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6689,
											"end": 6698,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6703,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6663,
											"end": 6667,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6720,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "725"
										},
										{
											"begin": 6772,
											"end": 6774,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6757,
											"end": 6775,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6749,
											"end": 6755,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6720,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 6720,
											"end": 6776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6720,
											"end": 6776,
											"name": "tag",
											"source": 14,
											"value": "725"
										},
										{
											"begin": 6720,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6807,
											"end": 6809,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6792,
											"end": 6810,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6792,
											"end": 6810,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6785,
											"end": 6819,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6785,
											"end": 6819,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6785,
											"end": 6819,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6785,
											"end": 6819,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6852,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6835,
											"end": 6853,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6828,
											"end": 6862,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6712,
											"end": 6776,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6465,
											"end": 6868,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6465,
											"end": 6868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6873,
											"end": 6991,
											"name": "tag",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 6873,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6959,
											"end": 6964,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6952,
											"end": 6965,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6945,
											"end": 6966,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6938,
											"end": 6943,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6935,
											"end": 6967,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6925,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 6925,
											"end": 6985,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6981,
											"end": 6982,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 6979,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6971,
											"end": 6983,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6996,
											"end": 7237,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 6996,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7052,
											"end": 7058,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7107,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7084,
											"end": 7091,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7080,
											"end": 7103,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7076,
											"end": 7108,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7073,
											"end": 7125,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7073,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 7073,
											"end": 7125,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7123,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7073,
											"end": 7125,
											"name": "tag",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 7073,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7160,
											"end": 7169,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7147,
											"end": 7170,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7179,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 7201,
											"end": 7206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7179,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 7179,
											"end": 7207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7242,
											"end": 7630,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 7242,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7310,
											"end": 7316,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7324,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7371,
											"end": 7373,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7359,
											"end": 7368,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7357,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7346,
											"end": 7369,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7342,
											"end": 7374,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7339,
											"end": 7391,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7339,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 7339,
											"end": 7391,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7387,
											"end": 7388,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7384,
											"end": 7385,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7389,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7339,
											"end": 7391,
											"name": "tag",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 7339,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7426,
											"end": 7435,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7413,
											"end": 7436,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 7470,
											"end": 7475,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 7445,
											"end": 7476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7476,
											"name": "tag",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 7445,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7495,
											"end": 7500,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7554,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7524,
											"end": 7556,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7565,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 7524,
											"end": 7556,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7565,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 7565,
											"end": 7598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7565,
											"end": 7598,
											"name": "tag",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 7565,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7624,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7607,
											"end": 7624,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7607,
											"end": 7624,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7607,
											"end": 7624,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7242,
											"end": 7630,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7242,
											"end": 7630,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7242,
											"end": 7630,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7242,
											"end": 7630,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7242,
											"end": 7630,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7242,
											"end": 7630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7635,
											"end": 8072,
											"name": "tag",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 7635,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7721,
											"end": 7727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7735,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7782,
											"end": 7784,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7770,
											"end": 7779,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7761,
											"end": 7768,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7757,
											"end": 7780,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7753,
											"end": 7785,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7750,
											"end": 7802,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7750,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "736"
										},
										{
											"begin": 7750,
											"end": 7802,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7795,
											"end": 7796,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7788,
											"end": 7800,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7750,
											"end": 7802,
											"name": "tag",
											"source": 14,
											"value": "736"
										},
										{
											"begin": 7750,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7838,
											"end": 7847,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7825,
											"end": 7848,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7860,
											"end": 7890,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7857,
											"end": 7907,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7857,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 7857,
											"end": 7907,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7857,
											"end": 7907,
											"name": "tag",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 7857,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7942,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 8004,
											"end": 8011,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7995,
											"end": 8001,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7984,
											"end": 7993,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7980,
											"end": 8002,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7942,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 7942,
											"end": 8012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7942,
											"end": 8012,
											"name": "tag",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 7942,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8031,
											"end": 8039,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8031,
											"end": 8039,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 7916,
											"end": 8012,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7916,
											"end": 8012,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7635,
											"end": 8072,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7635,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8077,
											"end": 8649,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 8077,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8172,
											"end": 8178,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8180,
											"end": 8186,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8188,
											"end": 8194,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8243,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8229,
											"end": 8238,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8220,
											"end": 8227,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8216,
											"end": 8239,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8212,
											"end": 8244,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8209,
											"end": 8261,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8209,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 8209,
											"end": 8261,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8257,
											"end": 8258,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8254,
											"end": 8255,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8247,
											"end": 8259,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8209,
											"end": 8261,
											"name": "tag",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 8209,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8296,
											"end": 8305,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8283,
											"end": 8306,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8315,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 8340,
											"end": 8345,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8315,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 8315,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8315,
											"end": 8346,
											"name": "tag",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 8315,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8365,
											"end": 8370,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8421,
											"end": 8423,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8406,
											"end": 8424,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8406,
											"end": 8424,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8393,
											"end": 8425,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8437,
											"end": 8467,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8437,
											"end": 8467,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8434,
											"end": 8484,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8434,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "742"
										},
										{
											"begin": 8434,
											"end": 8484,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8480,
											"end": 8481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8478,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8470,
											"end": 8482,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8434,
											"end": 8484,
											"name": "tag",
											"source": 14,
											"value": "742"
										},
										{
											"begin": 8434,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8519,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "743"
										},
										{
											"begin": 8581,
											"end": 8588,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8561,
											"end": 8570,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8557,
											"end": 8579,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8519,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 8519,
											"end": 8589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8519,
											"end": 8589,
											"name": "tag",
											"source": 14,
											"value": "743"
										},
										{
											"begin": 8519,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8077,
											"end": 8649,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8077,
											"end": 8649,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8608,
											"end": 8616,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8493,
											"end": 8589,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8493,
											"end": 8589,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8654,
											"end": 9034,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 8654,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8733,
											"end": 8734,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 8729,
											"end": 8741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8729,
											"end": 8741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8729,
											"end": 8741,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 8729,
											"end": 8741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8776,
											"end": 8788,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8776,
											"end": 8788,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8776,
											"end": 8788,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 8797,
											"end": 8858,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8851,
											"end": 8855,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 8843,
											"end": 8849,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8839,
											"end": 8856,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8829,
											"end": 8856,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8829,
											"end": 8856,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8858,
											"name": "tag",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 8797,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8904,
											"end": 8906,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8896,
											"end": 8902,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8893,
											"end": 8907,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8870,
											"end": 8908,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8867,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 8867,
											"end": 9028,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8950,
											"end": 8960,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 8945,
											"end": 8948,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 8941,
											"end": 8961,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 8938,
											"end": 8939,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8962,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8985,
											"end": 8989,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 8982,
											"end": 8983,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8975,
											"end": 8990,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9013,
											"end": 9017,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9010,
											"end": 9011,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9018,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8867,
											"end": 9028,
											"name": "tag",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 8867,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8867,
											"end": 9028,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8654,
											"end": 9034,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8654,
											"end": 9034,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8654,
											"end": 9034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8654,
											"end": 9034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9166,
											"name": "tag",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 9039,
											"end": 9166,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9100,
											"end": 9110,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 9095,
											"end": 9098,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 9091,
											"end": 9111,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 9088,
											"end": 9089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9081,
											"end": 9112,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9131,
											"end": 9135,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 9128,
											"end": 9129,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9121,
											"end": 9136,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9155,
											"end": 9159,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9152,
											"end": 9153,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9160,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9171,
											"end": 9296,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 9171,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9236,
											"end": 9245,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9236,
											"end": 9245,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9236,
											"end": 9245,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9257,
											"end": 9267,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9257,
											"end": 9267,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9257,
											"end": 9267,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9254,
											"end": 9290,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9254,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 9254,
											"end": 9290,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 9270,
											"end": 9288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9633,
											"end": 9845,
											"name": "tag",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 9633,
											"end": 9845,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9675,
											"end": 9678,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9718,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9707,
											"end": 9719,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9757,
											"end": 9763,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9750,
											"end": 9754,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9743,
											"end": 9748,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9739,
											"end": 9755,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9734,
											"end": 9737,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9728,
											"end": 9764,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 9819,
											"end": 9820,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9783,
											"end": 9799,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9783,
											"end": 9799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9808,
											"end": 9821,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9808,
											"end": 9821,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9808,
											"end": 9821,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9783,
											"end": 9799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9783,
											"end": 9799,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9633,
											"end": 9845,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9633,
											"end": 9845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9850,
											"end": 10198,
											"name": "tag",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 9850,
											"end": 10198,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10082,
											"end": 10085,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "754"
										},
										{
											"begin": 10136,
											"end": 10139,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10128,
											"end": 10134,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10110,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 10110,
											"end": 10140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10110,
											"end": 10140,
											"name": "tag",
											"source": 14,
											"value": "754"
										},
										{
											"begin": 10110,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2D4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10149,
											"end": 10166,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10149,
											"end": 10166,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10190,
											"end": 10191,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 10182,
											"end": 10192,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10182,
											"end": 10192,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9850,
											"end": 10198,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9850,
											"end": 10198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10417,
											"end": 10545,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 10417,
											"end": 10545,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10484,
											"end": 10493,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10484,
											"end": 10493,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10484,
											"end": 10493,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10505,
											"end": 10516,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10505,
											"end": 10516,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10505,
											"end": 10516,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10502,
											"end": 10539,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10502,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 10502,
											"end": 10539,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10519,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 10519,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 10519,
											"end": 10537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10550,
											"end": 10767,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 10550,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10590,
											"end": 10591,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10616,
											"end": 10617,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10606,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "760"
										},
										{
											"begin": 10606,
											"end": 10738,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10660,
											"end": 10670,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 10655,
											"end": 10658,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 10648,
											"end": 10649,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10641,
											"end": 10672,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10695,
											"end": 10699,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 10692,
											"end": 10693,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10685,
											"end": 10700,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10723,
											"end": 10727,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10728,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10606,
											"end": 10738,
											"name": "tag",
											"source": 14,
											"value": "760"
										},
										{
											"begin": 10606,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10752,
											"end": 10761,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 10752,
											"end": 10761,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10550,
											"end": 10767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11025,
											"end": 11209,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 11025,
											"end": 11209,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11095,
											"end": 11101,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11148,
											"end": 11150,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11136,
											"end": 11145,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11127,
											"end": 11134,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11123,
											"end": 11146,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11119,
											"end": 11151,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11116,
											"end": 11168,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11116,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "763"
										},
										{
											"begin": 11116,
											"end": 11168,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11164,
											"end": 11165,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11161,
											"end": 11162,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11166,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11116,
											"end": 11168,
											"name": "tag",
											"source": 14,
											"value": "763"
										},
										{
											"begin": 11116,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11187,
											"end": 11203,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11187,
											"end": 11203,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11025,
											"end": 11209,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11025,
											"end": 11209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11214,
											"end": 11341,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 11214,
											"end": 11341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11275,
											"end": 11285,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 11270,
											"end": 11273,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11266,
											"end": 11286,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11263,
											"end": 11264,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11256,
											"end": 11287,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11306,
											"end": 11310,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 11303,
											"end": 11304,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11296,
											"end": 11311,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11330,
											"end": 11334,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11327,
											"end": 11328,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11320,
											"end": 11335,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11346,
											"end": 11597,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 11346,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11416,
											"end": 11422,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11469,
											"end": 11471,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11457,
											"end": 11466,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11448,
											"end": 11455,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11444,
											"end": 11467,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11440,
											"end": 11472,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11437,
											"end": 11489,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11437,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "766"
										},
										{
											"begin": 11437,
											"end": 11489,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11485,
											"end": 11486,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11482,
											"end": 11483,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11475,
											"end": 11487,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11437,
											"end": 11489,
											"name": "tag",
											"source": 14,
											"value": "766"
										},
										{
											"begin": 11437,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11517,
											"end": 11526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11511,
											"end": 11527,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11536,
											"end": 11567,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 11561,
											"end": 11566,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11536,
											"end": 11567,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 11536,
											"end": 11567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11907,
											"end": 12908,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 11907,
											"end": 12908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12002,
											"end": 12008,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12055,
											"end": 12057,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12043,
											"end": 12052,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12034,
											"end": 12041,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12053,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12026,
											"end": 12058,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12023,
											"end": 12075,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12023,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "770"
										},
										{
											"begin": 12023,
											"end": 12075,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12071,
											"end": 12072,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12068,
											"end": 12069,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12061,
											"end": 12073,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12023,
											"end": 12075,
											"name": "tag",
											"source": 14,
											"value": "770"
										},
										{
											"begin": 12023,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12104,
											"end": 12113,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12129,
											"end": 12135,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12126,
											"end": 12156,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12123,
											"end": 12173,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12123,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "771"
										},
										{
											"begin": 12123,
											"end": 12173,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12169,
											"end": 12170,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12166,
											"end": 12167,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12159,
											"end": 12171,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12123,
											"end": 12173,
											"name": "tag",
											"source": 14,
											"value": "771"
										},
										{
											"begin": 12123,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12192,
											"end": 12214,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12192,
											"end": 12214,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12245,
											"end": 12249,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12237,
											"end": 12250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12237,
											"end": 12250,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12233,
											"end": 12260,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 12223,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "772"
										},
										{
											"begin": 12223,
											"end": 12278,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12274,
											"end": 12275,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12271,
											"end": 12272,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12264,
											"end": 12276,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12223,
											"end": 12278,
											"name": "tag",
											"source": 14,
											"value": "772"
										},
										{
											"begin": 12223,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12307,
											"end": 12309,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12301,
											"end": 12310,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12325,
											"end": 12331,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12322,
											"end": 12352,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12319,
											"end": 12375,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12319,
											"end": 12375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "774"
										},
										{
											"begin": 12319,
											"end": 12375,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12355,
											"end": 12373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "774"
										},
										{
											"begin": 12355,
											"end": 12373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 12355,
											"end": 12373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12355,
											"end": 12373,
											"name": "tag",
											"source": 14,
											"value": "774"
										},
										{
											"begin": 12355,
											"end": 12373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12401,
											"end": 12407,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12398,
											"end": 12399,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 12394,
											"end": 12408,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 12428,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "775"
										},
										{
											"begin": 12452,
											"end": 12454,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12448,
											"end": 12450,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12444,
											"end": 12455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12428,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 12428,
											"end": 12456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12428,
											"end": 12456,
											"name": "tag",
											"source": 14,
											"value": "775"
										},
										{
											"begin": 12428,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12490,
											"end": 12509,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12490,
											"end": 12509,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12490,
											"end": 12509,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12534,
											"end": 12536,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12564,
											"end": 12575,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12564,
											"end": 12575,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12564,
											"end": 12575,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12560,
											"end": 12580,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12560,
											"end": 12580,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12560,
											"end": 12580,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12525,
											"end": 12537,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12525,
											"end": 12537,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12525,
											"end": 12537,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12525,
											"end": 12537,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12592,
											"end": 12611,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12592,
											"end": 12611,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12592,
											"end": 12611,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12589,
											"end": 12628,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12589,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 12589,
											"end": 12628,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12624,
											"end": 12625,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12621,
											"end": 12622,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12614,
											"end": 12626,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12589,
											"end": 12628,
											"name": "tag",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 12589,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12652,
											"end": 12654,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12648,
											"end": 12659,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12637,
											"end": 12659,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 12637,
											"end": 12659,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12668,
											"end": 12878,
											"name": "tag",
											"source": 14,
											"value": "777"
										},
										{
											"begin": 12668,
											"end": 12878,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12684,
											"end": 12690,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12679,
											"end": 12682,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12676,
											"end": 12691,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12668,
											"end": 12878,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12668,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 12668,
											"end": 12878,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12757,
											"end": 12760,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12751,
											"end": 12761,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12738,
											"end": 12761,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12738,
											"end": 12761,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12774,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "780"
										},
										{
											"begin": 12799,
											"end": 12804,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12774,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 12774,
											"end": 12805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12774,
											"end": 12805,
											"name": "tag",
											"source": 14,
											"value": "780"
										},
										{
											"begin": 12774,
											"end": 12805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12818,
											"end": 12836,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12818,
											"end": 12836,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12818,
											"end": 12836,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12865,
											"end": 12867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12701,
											"end": 12713,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 12701,
											"end": 12713,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12701,
											"end": 12713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12701,
											"end": 12713,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 12856,
											"end": 12868,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12856,
											"end": 12868,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12856,
											"end": 12868,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12856,
											"end": 12868,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12668,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "777"
										},
										{
											"begin": 12668,
											"end": 12878,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12913,
											"end": 13081,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 12913,
											"end": 13081,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12995,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12995,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12995,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 13017,
											"end": 13026,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13017,
											"end": 13026,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13034,
											"end": 13049,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13034,
											"end": 13049,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13034,
											"end": 13049,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 13028,
											"end": 13050,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13028,
											"end": 13050,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13014,
											"end": 13051,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 13004,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 13004,
											"end": 13075,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13055,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 13055,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 13055,
											"end": 13073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13086,
											"end": 13418,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 13086,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13293,
											"end": 13299,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13282,
											"end": 13291,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13275,
											"end": 13300,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13336,
											"end": 13338,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13331,
											"end": 13333,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13320,
											"end": 13329,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13316,
											"end": 13334,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13309,
											"end": 13339,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13256,
											"end": 13260,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13356,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 13408,
											"end": 13410,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13397,
											"end": 13406,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13393,
											"end": 13411,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13385,
											"end": 13391,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13356,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 13356,
											"end": 13412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13819,
											"end": 14503,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 13819,
											"end": 14503,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14019,
											"end": 14021,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14031,
											"end": 14052,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14031,
											"end": 14052,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14031,
											"end": 14052,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14087,
											"end": 14109,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14087,
											"end": 14109,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14087,
											"end": 14109,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13971,
											"end": 13975,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14166,
											"end": 14172,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14140,
											"end": 14142,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14143,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14125,
											"end": 14143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13971,
											"end": 13975,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14200,
											"end": 14477,
											"name": "tag",
											"source": 14,
											"value": "788"
										},
										{
											"begin": 14200,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14214,
											"end": 14220,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14211,
											"end": 14212,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14208,
											"end": 14221,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14200,
											"end": 14477,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14200,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "790"
										},
										{
											"begin": 14200,
											"end": 14477,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14289,
											"end": 14295,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14276,
											"end": 14296,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 14309,
											"end": 14340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "791"
										},
										{
											"begin": 14334,
											"end": 14339,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14309,
											"end": 14340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 14309,
											"end": 14340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14309,
											"end": 14340,
											"name": "tag",
											"source": 14,
											"value": "791"
										},
										{
											"begin": 14309,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14365,
											"end": 14396,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14353,
											"end": 14397,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14353,
											"end": 14397,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14426,
											"end": 14428,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14452,
											"end": 14467,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14452,
											"end": 14467,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14452,
											"end": 14467,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14452,
											"end": 14467,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14417,
											"end": 14429,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14417,
											"end": 14429,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14417,
											"end": 14429,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14417,
											"end": 14429,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14393,
											"end": 14394,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14229,
											"end": 14238,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14200,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "788"
										},
										{
											"begin": 14200,
											"end": 14477,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14200,
											"end": 14477,
											"name": "tag",
											"source": 14,
											"value": "790"
										},
										{
											"begin": 14200,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14494,
											"end": 14497,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 13819,
											"end": 14503,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13819,
											"end": 14503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15263,
											"end": 15781,
											"name": "tag",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 15263,
											"end": 15781,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15365,
											"end": 15367,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 15360,
											"end": 15363,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15368,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 15354,
											"end": 15775,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15354,
											"end": 15775,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 15354,
											"end": 15775,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15401,
											"end": 15406,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15398,
											"end": 15399,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15391,
											"end": 15407,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15445,
											"end": 15449,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15442,
											"end": 15443,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15432,
											"end": 15450,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 15515,
											"end": 15517,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 15503,
											"end": 15513,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15499,
											"end": 15518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15496,
											"end": 15497,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 15492,
											"end": 15519,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 15486,
											"end": 15490,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15482,
											"end": 15520,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15551,
											"end": 15555,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15539,
											"end": 15549,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15536,
											"end": 15556,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 15533,
											"end": 15580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15533,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "797"
										},
										{
											"begin": 15533,
											"end": 15580,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15574,
											"end": 15578,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15533,
											"end": 15580,
											"name": "tag",
											"source": 14,
											"value": "797"
										},
										{
											"begin": 15533,
											"end": 15580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15629,
											"end": 15631,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 15624,
											"end": 15627,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15620,
											"end": 15632,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15617,
											"end": 15618,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 15613,
											"end": 15633,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 15607,
											"end": 15611,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15603,
											"end": 15634,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15593,
											"end": 15634,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15593,
											"end": 15634,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15684,
											"end": 15765,
											"name": "tag",
											"source": 14,
											"value": "798"
										},
										{
											"begin": 15684,
											"end": 15765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15702,
											"end": 15704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15695,
											"end": 15700,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15692,
											"end": 15705,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 15684,
											"end": 15765,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15684,
											"end": 15765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 15684,
											"end": 15765,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15761,
											"end": 15762,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15747,
											"end": 15763,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15747,
											"end": 15763,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 15728,
											"end": 15729,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15717,
											"end": 15730,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15684,
											"end": 15765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "798"
										},
										{
											"begin": 15684,
											"end": 15765,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15957,
											"end": 17256,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 15957,
											"end": 17256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16083,
											"end": 16086,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16087,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16102,
											"end": 16108,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16099,
											"end": 16129,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16096,
											"end": 16152,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16096,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "804"
										},
										{
											"begin": 16096,
											"end": 16152,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16132,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "804"
										},
										{
											"begin": 16132,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 16132,
											"end": 16150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16132,
											"end": 16150,
											"name": "tag",
											"source": 14,
											"value": "804"
										},
										{
											"begin": 16132,
											"end": 16150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16161,
											"end": 16258,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "805"
										},
										{
											"begin": 16251,
											"end": 16257,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16211,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "806"
										},
										{
											"begin": 16243,
											"end": 16247,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16237,
											"end": 16248,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 16211,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 16211,
											"end": 16249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16211,
											"end": 16249,
											"name": "tag",
											"source": 14,
											"value": "806"
										},
										{
											"begin": 16211,
											"end": 16249,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16205,
											"end": 16209,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16161,
											"end": 16258,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 16161,
											"end": 16258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16161,
											"end": 16258,
											"name": "tag",
											"source": 14,
											"value": "805"
										},
										{
											"begin": 16161,
											"end": 16258,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16307,
											"end": 16311,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16338,
											"end": 16340,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 16327,
											"end": 16341,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16327,
											"end": 16341,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16355,
											"end": 16356,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16350,
											"end": 16999,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16999,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "808"
										},
										{
											"begin": 16350,
											"end": 16999,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17043,
											"end": 17044,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17060,
											"end": 17066,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17057,
											"end": 17146,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17057,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "809"
										},
										{
											"begin": 17057,
											"end": 17146,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17112,
											"end": 17131,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17112,
											"end": 17131,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17112,
											"end": 17131,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17106,
											"end": 17132,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 17057,
											"end": 17146,
											"name": "tag",
											"source": 14,
											"value": "809"
										},
										{
											"begin": 17057,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 15910,
											"end": 15921,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15910,
											"end": 15921,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15910,
											"end": 15921,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 15906,
											"end": 15930,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 15902,
											"end": 15931,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 15892,
											"end": 15932,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15938,
											"end": 15939,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15934,
											"end": 15945,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15934,
											"end": 15945,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15934,
											"end": 15945,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 15889,
											"end": 15946,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 17159,
											"end": 17240,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17159,
											"end": 17240,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 16320,
											"end": 17250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 16320,
											"end": 17250,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16350,
											"end": 16999,
											"name": "tag",
											"source": 14,
											"value": "808"
										},
										{
											"begin": 16350,
											"end": 16999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15210,
											"end": 15211,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15203,
											"end": 15217,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15203,
											"end": 15217,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15203,
											"end": 15217,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15247,
											"end": 15251,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15234,
											"end": 15252,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15234,
											"end": 15252,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16386,
											"end": 16406,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16386,
											"end": 16406,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 16386,
											"end": 16406,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16504,
											"end": 16726,
											"name": "tag",
											"source": 14,
											"value": "812"
										},
										{
											"begin": 16504,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16518,
											"end": 16525,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16515,
											"end": 16516,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16512,
											"end": 16526,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 16504,
											"end": 16726,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16504,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "814"
										},
										{
											"begin": 16504,
											"end": 16726,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16600,
											"end": 16619,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 16600,
											"end": 16619,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16600,
											"end": 16619,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16594,
											"end": 16620,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 16579,
											"end": 16621,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16579,
											"end": 16621,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 16707,
											"end": 16711,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16692,
											"end": 16712,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16692,
											"end": 16712,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16692,
											"end": 16712,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16692,
											"end": 16712,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16660,
											"end": 16661,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16648,
											"end": 16662,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16648,
											"end": 16662,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16648,
											"end": 16662,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16648,
											"end": 16662,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16534,
											"end": 16546,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16504,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "812"
										},
										{
											"begin": 16504,
											"end": 16726,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16504,
											"end": 16726,
											"name": "tag",
											"source": 14,
											"value": "814"
										},
										{
											"begin": 16504,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16508,
											"end": 16511,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16754,
											"end": 16760,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16745,
											"end": 16752,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16742,
											"end": 16761,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 16739,
											"end": 16940,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16739,
											"end": 16940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "815"
										},
										{
											"begin": 16739,
											"end": 16940,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16815,
											"end": 16834,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16815,
											"end": 16834,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16815,
											"end": 16834,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16809,
											"end": 16835,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16898,
											"end": 16899,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 16894,
											"end": 16908,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 16894,
											"end": 16908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16894,
											"end": 16908,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 16910,
											"end": 16913,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 16890,
											"end": 16914,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 16886,
											"end": 16923,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 16882,
											"end": 16924,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 16867,
											"end": 16925,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 16852,
											"end": 16926,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16852,
											"end": 16926,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 16739,
											"end": 16940,
											"name": "tag",
											"source": 14,
											"value": "815"
										},
										{
											"begin": 16739,
											"end": 16940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16986,
											"end": 16987,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16970,
											"end": 16984,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16970,
											"end": 16984,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16970,
											"end": 16984,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 16966,
											"end": 16988,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16953,
											"end": 16989,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16953,
											"end": 16989,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15957,
											"end": 17256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17261,
											"end": 17506,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 17261,
											"end": 17506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17328,
											"end": 17334,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17383,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17369,
											"end": 17378,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17360,
											"end": 17367,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17356,
											"end": 17379,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 17352,
											"end": 17384,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 17349,
											"end": 17401,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17349,
											"end": 17401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "817"
										},
										{
											"begin": 17349,
											"end": 17401,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17397,
											"end": 17398,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17394,
											"end": 17395,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17387,
											"end": 17399,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17349,
											"end": 17401,
											"name": "tag",
											"source": 14,
											"value": "817"
										},
										{
											"begin": 17349,
											"end": 17401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17429,
											"end": 17438,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17423,
											"end": 17439,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 17448,
											"end": 17476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 17470,
											"end": 17475,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17448,
											"end": 17476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 17448,
											"end": 17476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18329,
											"end": 18519,
											"name": "tag",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 18329,
											"end": 18519,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18458,
											"end": 18461,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18483,
											"end": 18513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 18509,
											"end": 18512,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18501,
											"end": 18507,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18483,
											"end": 18513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 18483,
											"end": 18513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										}
									],
									".data": {
										"3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B": "52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00",
										"5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D": "52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/interfaces/IBTSPair.sol",
								"contracts/interfaces/IFactory.sol",
								"contracts/tokens/BTSPair.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"calFee()": "55917ebe",
							"calculateShareETH(uint256)": "9257fa07",
							"calculateShareLP(uint256)": "e54ef9a0",
							"calculateShareTokens(uint256)": "d410ad7d",
							"decimals()": "313ce567",
							"distMgmtFee()": "b4b93c8c",
							"factory()": "c45a0155",
							"getTokenAddress(uint256)": "67ccdf38",
							"getTokenAndUserBal(address)": "a131d436",
							"getTokenList()": "273cbaa0",
							"getTokenReserve(uint256)": "8e73f1b4",
							"getTokensReserve()": "ec5975c6",
							"getTotalMgmtFee()": "090318fb",
							"initialize(address,string,address[])": "3a105cfb",
							"lastAccruedAt()": "5483067d",
							"mint(address,uint256[])": "de836ebd",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"reentrancyGuardEntered()": "d2c725e0",
							"renounceOwnership()": "715018a6",
							"setReentrancyGuardStatus(bool)": "ba6ba385",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferTokensToOwner()": "a7c7fdeb",
							"updateTokens(address[])": "de41691c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"paramName\",\"type\":\"string\"}],\"name\":\"EmptyStringParameter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"TokensUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"months\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAccruedAt\",\"type\":\"uint256\"}],\"name\":\"feeAccrued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"months\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountLP\",\"type\":\"uint256\"}],\"name\":\"calculateShareETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountETH\",\"type\":\"uint256\"}],\"name\":\"calculateShareLP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountLP\",\"type\":\"uint256\"}],\"name\":\"calculateShareTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountTokens\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distMgmtFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTokenAndUserBal\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTokenReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokensReserve\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMgmtFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factoryAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastAccruedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reentrancyGuardEntered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setReentrancyGuardStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferTokensToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"updateTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements ERC20 for liquidity tokens and acts as a liquidity pool for the specified tokens\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InsufficientLiquidity()\":[{\"details\":\"The InsufficientLiquidity error is thrown when there is not enough liquidity for an operation\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidRecipient()\":[{\"details\":\"The InvalidRecipient error is thrown when an address is zero\"}],\"InvalidToken()\":[{\"details\":\"The InvalidToken error is thrown when a token address is invalid\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrantCall()\":[{\"details\":\"The ReentrancyError is thrown when a reentrancy attempt is detected\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TokensUpdated(address[])\":{\"params\":{\"_tokens\":\"New array of token addresses\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"feeAccrued(address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"Amount of LP tokens to be minted\",\"months\":\"Number of months since last accrual\",\"newAccruedAt\":\"New timestamp for accrual\",\"owner\":\"Address of the BTS\",\"supply\":\"Current supply of LP tokens\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address)\":{\"details\":\"Burns LP tokens and transfers the corresponding tokens to the recipient\",\"params\":{\"_to\":\"Address to transfer tokens to\"},\"returns\":{\"amounts\":\"Array of token amounts transferred\"}},\"calFee()\":{\"details\":\"Calculates the management fee based on the time elapsed since last accrual\",\"returns\":{\"feeAmount\":\"Amount of LP tokens to be minted\",\"months\":\"Number of months since last accrual\",\"supply\":\"Current supply of LP tokens\"}},\"calculateShareETH(uint256)\":{\"details\":\"Calculates the equivalent ETH value for a specific amount of LP tokens\",\"params\":{\"_amountLP\":\"Amount of LP tokens to calculate share for\"},\"returns\":{\"amountETH\":\"Amount of ETH\"}},\"calculateShareLP(uint256)\":{\"details\":\"Calculates the amount of LP tokens for a specific amount of ETH value\",\"params\":{\"_amountETH\":\"Amount of ETH to calculate share for\"},\"returns\":{\"amountLP\":\"Amount of LP tokens\"}},\"calculateShareTokens(uint256)\":{\"details\":\"Calculates the token amounts that correspond to a specific amount of LP tokens\",\"params\":{\"_amountLP\":\"Amount of LP tokens to calculate share for\"},\"returns\":{\"amountTokens\":\"Array of token amounts corresponding to the LP tokens\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"distMgmtFee()\":{\"details\":\"Mints LP tokens for the BTS manager and updates the accrual time. It can be called by internal functions, external cron jobs, or manually by any account.\"},\"getTokenAddress(uint256)\":{\"params\":{\"_index\":\"Index of the token in the basket\"},\"returns\":{\"_0\":\"Token address\"}},\"getTokenAndUserBal(address)\":{\"details\":\"Returns the token balances in the contract and the user's LP token balance\",\"params\":{\"_user\":\"Address to get user balance for\"},\"returns\":{\"_0\":\"_tokenBal Array of token balances in the contract\",\"_1\":\"_supply Total supply of LP tokens\",\"_2\":\"_userLP User's LP token balance\"}},\"getTokenList()\":{\"details\":\"Returns the array of token addresses in the basket\",\"returns\":{\"_0\":\"Array of token addresses\"}},\"getTokenReserve(uint256)\":{\"params\":{\"_index\":\"Index of the token in the basket\"},\"returns\":{\"_0\":\"Token reserve\"}},\"getTokensReserve()\":{\"details\":\"Returns the array of token reserves in the basket\",\"returns\":{\"_0\":\"Array of token reserves\"}},\"getTotalMgmtFee()\":{\"details\":\"Returns the fee by calculating new fee and adding existing fee balance\",\"returns\":{\"_0\":\"Total management fee\"}},\"initialize(address,string,address[])\":{\"details\":\"Sets up the ERC20 token and initializes pair parameters\",\"params\":{\"_factoryAddress\":\"Factory contract address\",\"_name\":\"Name of the pair token\",\"_tokens\":\"Array of token addresses in the pair\"}},\"mint(address,uint256[])\":{\"details\":\"Calculates the liquidity amount based on token balances and mints LP tokens\",\"params\":{\"_to\":\"Address to mint tokens to\"},\"returns\":{\"liquidity\":\"Amount of liquidity tokens minted\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setReentrancyGuardStatus(bool)\":{\"params\":{\"_state\":\"New state for the reentrancy guard flag for read-only functions\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferTokensToOwner()\":{\"details\":\"Transfers all tokens to the owner, typically called during basket rebalancing\"},\"updateTokens(address[])\":{\"details\":\"Updates the tokens array and recalculates reserves\",\"params\":{\"_tokens\":\"New array of token addresses\"}}},\"stateVariables\":{\"factory\":{\"details\":\"The factory contract is responsible for managing the liquidity pairs\"},\"lastAccruedAt\":{\"details\":\"The lastAccruedAt variable stores the timestamp for occurrence of fee accrual\"},\"reentrancyGuardEntered\":{\"details\":\"Prevents reentrancy by checking the state of operations in BTS\"},\"reserves\":{\"details\":\"The reserves array stores the reserve amounts of the tokens in the basket\"},\"tokens\":{\"details\":\"The tokens array stores the addresses of the tokens in the basket\"}},\"title\":\"Basket Token Standard Pair\",\"version\":1},\"userdoc\":{\"errors\":{\"EmptyStringParameter(string)\":[{\"notice\":\"Error thrown when a parameter string is empty\"}],\"InsufficientLiquidity()\":[{\"notice\":\"Error thrown when there is insufficient liquidity for an operation\"}],\"InvalidRecipient()\":[{\"notice\":\"Error thrown when an invalid recipient address is provided\"}],\"InvalidToken()\":[{\"notice\":\"Error thrown when an invalid token is provided\"}],\"ReentrantCall()\":[{\"notice\":\"Error thrown when a reentrancy attempt is detected\"}]},\"events\":{\"TokensUpdated(address[])\":{\"notice\":\"Emitted when the token list is updated\"},\"feeAccrued(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when the fee is accrued\"}},\"kind\":\"user\",\"methods\":{\"burn(address)\":{\"notice\":\"Burns liquidity tokensThis function is only callable by the owner\"},\"calFee()\":{\"notice\":\"Calculates the management fee\"},\"calculateShareETH(uint256)\":{\"notice\":\"Calculates the share of ETH\"},\"calculateShareLP(uint256)\":{\"notice\":\"Calculates the share of LP tokens\"},\"calculateShareTokens(uint256)\":{\"notice\":\"Calculates the share of tokens\"},\"distMgmtFee()\":{\"notice\":\"Distributes the management fee\"},\"factory()\":{\"notice\":\"Address of the factory contract\"},\"getTokenAddress(uint256)\":{\"notice\":\"Returns the token address in the basket\"},\"getTokenAndUserBal(address)\":{\"notice\":\"Gets the token and user balances\"},\"getTokenList()\":{\"notice\":\"Gets the token list\"},\"getTokenReserve(uint256)\":{\"notice\":\"Returns the token reserve in the basket\"},\"getTokensReserve()\":{\"notice\":\"Gets the token reserves\"},\"getTotalMgmtFee()\":{\"notice\":\"Gets the total management fee\"},\"initialize(address,string,address[])\":{\"notice\":\"Initializes the pair contract\"},\"lastAccruedAt()\":{\"notice\":\"Timestamp of the last fee accrual\"},\"mint(address,uint256[])\":{\"notice\":\"Mints liquidity tokensThis function is only callable by the owner\"},\"reentrancyGuardEntered()\":{\"notice\":\"Boolean to track reentrancy\"},\"setReentrancyGuardStatus(bool)\":{\"notice\":\"Sets or resets the reentrancy guard flagThis function is only callable by the owner\"},\"transferTokensToOwner()\":{\"notice\":\"Transfer Tokens To Owner This function is only callable by the owner\"},\"updateTokens(address[])\":{\"notice\":\"Updates the token listThis function is only callable by the owner\"}},\"notice\":\"A contract for managing liquidity pairs of basket tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/BTSPair.sol\":\"BasketTokenStandardPair\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/interfaces/IBTSPair.sol\":{\"keccak256\":\"0x9197c2dc6a0263499023fe9729663cd274178ab12728be376770017765b6f3fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca05997f835f3465db76fdf6467f9f45a0a2114086075ef807a36c25c370c73d\",\"dweb:/ipfs/Qmdo7RBaf79BPsc22CZQd1stthZrBjq2qkJGUvKZzwFgop\"]},\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0x5636330ecca844a604c16c4f296b8d2912ebacd47833514c290e3cd988a21b37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cddc3566c0eba18fae8c0942e638bc5b3c325f2e3f9579ce035861634f0bdc51\",\"dweb:/ipfs/QmZ6ZHCi4KwDjLTWAJs7QLe67Pv3QwBijv9ErY813umBMg\"]},\"contracts/tokens/BTSPair.sol\":{\"keccak256\":\"0x01945633c96a7b6a78e3dd63902243f35d84fcaf8f2fe02a4a76ca4c4eb5f646\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb90538cc81b8494f8003675d3420e837d674997d6246a2bfbf3bd17b80f3529\",\"dweb:/ipfs/QmcVzqbSfAkhv3S9FKmKXHozN3w9A6SUTZ78UK5wKP5SXz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2559,
								"contract": "contracts/tokens/BTSPair.sol:BasketTokenStandardPair",
								"label": "factory",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2562,
								"contract": "contracts/tokens/BTSPair.sol:BasketTokenStandardPair",
								"label": "lastAccruedAt",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 2565,
								"contract": "contracts/tokens/BTSPair.sol:BasketTokenStandardPair",
								"label": "reentrancyGuardEntered",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 2569,
								"contract": "contracts/tokens/BTSPair.sol:BasketTokenStandardPair",
								"label": "tokens",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 2573,
								"contract": "contracts/tokens/BTSPair.sol:BasketTokenStandardPair",
								"label": "reserves",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"EmptyStringParameter(string)": [
								{
									"notice": "Error thrown when a parameter string is empty"
								}
							],
							"InsufficientLiquidity()": [
								{
									"notice": "Error thrown when there is insufficient liquidity for an operation"
								}
							],
							"InvalidRecipient()": [
								{
									"notice": "Error thrown when an invalid recipient address is provided"
								}
							],
							"InvalidToken()": [
								{
									"notice": "Error thrown when an invalid token is provided"
								}
							],
							"ReentrantCall()": [
								{
									"notice": "Error thrown when a reentrancy attempt is detected"
								}
							]
						},
						"events": {
							"TokensUpdated(address[])": {
								"notice": "Emitted when the token list is updated"
							},
							"feeAccrued(address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted when the fee is accrued"
							}
						},
						"kind": "user",
						"methods": {
							"burn(address)": {
								"notice": "Burns liquidity tokensThis function is only callable by the owner"
							},
							"calFee()": {
								"notice": "Calculates the management fee"
							},
							"calculateShareETH(uint256)": {
								"notice": "Calculates the share of ETH"
							},
							"calculateShareLP(uint256)": {
								"notice": "Calculates the share of LP tokens"
							},
							"calculateShareTokens(uint256)": {
								"notice": "Calculates the share of tokens"
							},
							"distMgmtFee()": {
								"notice": "Distributes the management fee"
							},
							"factory()": {
								"notice": "Address of the factory contract"
							},
							"getTokenAddress(uint256)": {
								"notice": "Returns the token address in the basket"
							},
							"getTokenAndUserBal(address)": {
								"notice": "Gets the token and user balances"
							},
							"getTokenList()": {
								"notice": "Gets the token list"
							},
							"getTokenReserve(uint256)": {
								"notice": "Returns the token reserve in the basket"
							},
							"getTokensReserve()": {
								"notice": "Gets the token reserves"
							},
							"getTotalMgmtFee()": {
								"notice": "Gets the total management fee"
							},
							"initialize(address,string,address[])": {
								"notice": "Initializes the pair contract"
							},
							"lastAccruedAt()": {
								"notice": "Timestamp of the last fee accrual"
							},
							"mint(address,uint256[])": {
								"notice": "Mints liquidity tokensThis function is only callable by the owner"
							},
							"reentrancyGuardEntered()": {
								"notice": "Boolean to track reentrancy"
							},
							"setReentrancyGuardStatus(bool)": {
								"notice": "Sets or resets the reentrancy guard flagThis function is only callable by the owner"
							},
							"transferTokensToOwner()": {
								"notice": "Transfer Tokens To Owner This function is only callable by the owner"
							},
							"updateTokens(address[])": {
								"notice": "Updates the token listThis function is only callable by the owner"
							}
						},
						"notice": "A contract for managing liquidity pairs of basket tokens",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1945
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1946,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1945,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 463,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1945,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1945,
								462
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1927,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 462,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 462,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 462,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 462,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 462,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 462,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 454,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 459,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 205,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 462,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "2349:6929:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1945
						],
						"ERC20Upgradeable": [
							1079
						],
						"IERC20": [
							2160
						],
						"IERC20Errors": [
							1987
						],
						"IERC20Metadata": [
							2186
						],
						"Initializable": [
							462
						]
					},
					"id": 1080,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 2161,
							"src": "131:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 465,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2160,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 2187,
							"src": "202:97:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2186,
										"src": "210:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1946,
							"src": "300:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1945,
										"src": "308:18:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 2083,
							"src": "371:83:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 471,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1987,
										"src": "379:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 474,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 463,
							"src": "455:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 473,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "463:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 476,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "1319:13:2"
									},
									"id": 477,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:2"
								},
								{
									"baseName": {
										"id": 478,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1945,
										"src": "1334:18:2"
									},
									"id": 479,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:2"
								},
								{
									"baseName": {
										"id": 480,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2160,
										"src": "1354:6:2"
									},
									"id": 481,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:2"
								},
								{
									"baseName": {
										"id": 482,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2186,
										"src": "1362:14:2"
									},
									"id": 483,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:2"
								},
								{
									"baseName": {
										"id": 484,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1987,
										"src": "1378:12:2"
									},
									"id": 485,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:2"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079,
								1987,
								2186,
								2160,
								1945,
								462
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:2",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 503,
									"members": [
										{
											"constant": false,
											"id": 490,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1495:45:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 489,
												"keyName": "account",
												"keyNameLocation": "1511:7:2",
												"keyType": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 496,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1551:75:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 495,
												"keyName": "account",
												"keyNameLocation": "1567:7:2",
												"keyType": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 494,
													"keyName": "spender",
													"keyNameLocation": "1594:7:2",
													"keyType": {
														"id": 492,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 493,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 498,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1637:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 497,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 500,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1668:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 499,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 502,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1690:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 501,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:2",
									"nodeType": "StructDefinition",
									"scope": 1079,
									"src": "1465:246:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 506,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 1079,
									"src": "1826:114:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 504,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 505,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "2021:79:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:2",
													"nodeType": "YulBlock",
													"src": "2040:54:2",
													"statements": [
														{
															"nativeSrc": "2054:30:2",
															"nodeType": "YulAssignment",
															"src": "2054:30:2",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:2",
																"nodeType": "YulIdentifier",
																"src": "2064:20:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 510,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 506,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:2",
														"valueSize": 1
													}
												],
												"id": 512,
												"nodeType": "InlineAssembly",
												"src": "2031:63:2"
											}
										]
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1997:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 509,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 508,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "1997:12:2"
													},
													"referencedDeclaration": 503,
													"src": "1997:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:2"
									},
									"scope": 1079,
									"src": "1947:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "2355:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 525,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "2388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 526,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2395:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 524,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "2365:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "2365:38:2"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "2106:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 522,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 521,
												"name": "onlyInitializing",
												"nameLocations": [
													"2338:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2338:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:16:2"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2272:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2299:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2285:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 516,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2285:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2320:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2306:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2306:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:44:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:2"
									},
									"scope": 1079,
									"src": "2263:147:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "2518:114:2",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2549:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "2528:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 540,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 539,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2528:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "2528:12:2"
															},
															"referencedDeclaration": 503,
															"src": "2528:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 542,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2553:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:43:2"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 545,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2581:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2583:5:2",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "2581:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 548,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2591:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2581:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "2581:15:2"
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 551,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2606:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2608:7:2",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 502,
														"src": "2606:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 554,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "2618:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2606:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "2606:19:2"
											}
										]
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 537,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 536,
												"name": "onlyInitializing",
												"nameLocations": [
													"2501:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2501:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2501:16:2"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2425:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2462:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2448:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 531,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2448:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2483:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2469:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2469:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:44:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:2"
									},
									"scope": 1079,
									"src": "2416:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2173
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "2757:84:2",
										"statements": [
											{
												"assignments": [
													566
												],
												"declarations": [
													{
														"constant": false,
														"id": 566,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2788:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "2767:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 565,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 564,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2767:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "2767:12:2"
															},
															"referencedDeclaration": 503,
															"src": "2767:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 567,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2792:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 570,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "2827:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2829:5:2",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 500,
													"src": "2827:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "2820:14:2"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "2638:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2706:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:2:2"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2742:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:2"
									},
									"scope": 1079,
									"src": "2697:144:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2179
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "3016:86:2",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3047:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "3026:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 581,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 580,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3026:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "3026:12:2"
															},
															"referencedDeclaration": 503,
															"src": "3026:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3051:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 586,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "3086:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3088:7:2",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 502,
													"src": "3086:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 579,
												"id": 588,
												"nodeType": "Return",
												"src": "3079:16:2"
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "2847:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2963:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:2:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3001:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3001:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:15:2"
									},
									"scope": 1079,
									"src": "2954:148:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2185
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3791:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3808:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 595,
												"id": 597,
												"nodeType": "Return",
												"src": "3801:9:2"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "3108:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3744:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:2"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3784:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 593,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3784:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:7:2"
									},
									"scope": 1079,
									"src": "3735:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2109
									],
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "3938:91:2",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3969:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 614,
														"src": "3948:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 606,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 605,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3948:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "3948:12:2"
															},
															"referencedDeclaration": 503,
															"src": "3948:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 608,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3973:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3948:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 611,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "4008:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4010:12:2",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 498,
													"src": "4008:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 604,
												"id": 613,
												"nodeType": "Return",
												"src": "4001:21:2"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3823:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3886:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3897:2:2"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3929:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:9:2"
									},
									"scope": 1079,
									"src": "3877:152:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2117
									],
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "4161:97:2",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4192:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "4171:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 624,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 623,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4171:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "4171:12:2"
															},
															"referencedDeclaration": 503,
															"src": "4171:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 626,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "4196:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4196:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4171:43:2"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 629,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "4231:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4233:9:2",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 490,
														"src": "4231:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 632,
													"indexExpression": {
														"id": 631,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "4243:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4231:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 622,
												"id": 633,
												"nodeType": "Return",
												"src": "4224:27:2"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "4035:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4096:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4114:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4106:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4106:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4105:17:2"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4152:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4151:9:2"
									},
									"scope": 1079,
									"src": "4087:171:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2127
									],
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "4528:103:2",
										"statements": [
											{
												"assignments": [
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4546:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "4538:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 645,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 647,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "4554:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4554:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "4586:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4593:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4597:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "4576:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4576:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "4576:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4620:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 644,
												"id": 657,
												"nodeType": "Return",
												"src": "4613:11:2"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "4264:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4462:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4479:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "4471:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4491:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "4483:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:27:2"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "4522:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4522:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4521:6:2"
									},
									"scope": 1079,
									"src": "4453:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2137
									],
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "4778:106:2",
										"statements": [
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4809:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "4788:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 670,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 669,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4788:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "4788:12:2"
															},
															"referencedDeclaration": 503,
															"src": "4788:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 672,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "4813:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4813:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4788:43:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 675,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "4848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4850:11:2",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 496,
															"src": "4848:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 678,
														"indexExpression": {
															"id": 677,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4862:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4848:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 680,
													"indexExpression": {
														"id": 679,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "4869:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4848:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 668,
												"id": 681,
												"nodeType": "Return",
												"src": "4841:36:2"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "4637:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4698:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4716:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4708:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4708:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4731:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4723:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4707:32:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4769:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:9:2"
									},
									"scope": 1079,
									"src": "4689:195:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2147
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "5270:107:2",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5288:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "5280:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5280:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "5296:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5296:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5280:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5327:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "5334:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5343:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															962,
															1030
														],
														"referencedDeclaration": 962,
														"src": "5318:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5318:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5318:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 705,
												"nodeType": "Return",
												"src": "5359:11:2"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "4890:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5200:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5216:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5208:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5233:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5225:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:32:2"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5264:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5263:6:2"
									},
									"scope": 1079,
									"src": "5191:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2159
									],
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6062:151:2",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6080:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "6072:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 719,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6072:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 721,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "6090:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6090:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6072:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6128:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "6134:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "6143:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "6112:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6112:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "6112:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6169:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "6175:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "6179:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "6159:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6159:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "6159:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6202:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 718,
												"id": 737,
												"nodeType": "Return",
												"src": "6195:11:2"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "5383:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5978:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5999:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5991:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6013:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6005:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6025:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6017:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6017:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5990:41:2"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6056:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6056:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:6:2"
									},
									"scope": 1079,
									"src": "5969:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "6655:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 749,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "6669:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6685:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6677:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 750,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6677:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6677:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6669:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "6665:86:2",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6689:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6737:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6729:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 756,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6729:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6729:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 755,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1962,
																	"src": "6710:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6710:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 761,
															"nodeType": "RevertStatement",
															"src": "6703:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "6764:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6778:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6770:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 765,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6770:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6770:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6764:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "6760:86:2",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "6782:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6832:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6824:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 771,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6824:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6824:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 770,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "6803:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6803:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 776,
															"nodeType": "RevertStatement",
															"src": "6796:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6863:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "6869:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "6873:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "6855:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6855:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "6855:24:2"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6219:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6595:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6613:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6605:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6605:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6627:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6619:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6639:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6631:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6604:41:2"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6655:0:2"
									},
									"scope": 1079,
									"src": "6586:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "7276:1095:2",
										"statements": [
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7307:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "7286:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 797,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 796,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7286:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "7286:12:2"
															},
															"referencedDeclaration": 503,
															"src": "7286:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 799,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "7311:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7311:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7286:43:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 802,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "7343:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7359:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7351:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 803,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7351:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7351:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7343:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "7519:366:2",
													"statements": [
														{
															"assignments": [
																816
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 816,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7541:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 844,
																	"src": "7533:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7533:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 821,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 817,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "7555:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7557:9:2",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 490,
																	"src": "7555:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 820,
																"indexExpression": {
																	"id": 819,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "7567:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7555:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7533:39:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 822,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "7590:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7604:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7590:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 832,
															"nodeType": "IfStatement",
															"src": "7586:115:2",
															"trueBody": {
																"id": 831,
																"nodeType": "Block",
																"src": "7611:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 826,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7661:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 827,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 816,
																					"src": "7667:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 828,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "7680:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 825,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1957,
																				"src": "7636:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7636:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 830,
																		"nodeType": "RevertStatement",
																		"src": "7629:57:2"
																	}
																]
															}
														},
														{
															"id": 843,
															"nodeType": "UncheckedBlock",
															"src": "7714:161:2",
															"statements": [
																{
																	"expression": {
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 833,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "7821:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7823:9:2",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 490,
																				"src": "7821:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 837,
																			"indexExpression": {
																				"id": 835,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 789,
																				"src": "7833:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7821:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 838,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 816,
																				"src": "7841:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 839,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "7855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7821:39:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 842,
																	"nodeType": "ExpressionStatement",
																	"src": "7821:39:2"
																}
															]
														}
													]
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "7339:546:2",
												"trueBody": {
													"id": 814,
													"nodeType": "Block",
													"src": "7363:150:2",
													"statements": [
														{
															"expression": {
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 808,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "7479:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7481:12:2",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 498,
																	"src": "7479:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7479:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"nodeType": "ExpressionStatement",
															"src": "7479:23:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "7899:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7913:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7905:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 847,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7905:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7905:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7899:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 869,
													"nodeType": "Block",
													"src": "8116:208:2",
													"statements": [
														{
															"id": 868,
															"nodeType": "UncheckedBlock",
															"src": "8130:184:2",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 860,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "8275:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 863,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8277:9:2",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 490,
																				"src": "8275:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 864,
																			"indexExpression": {
																				"id": 862,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 791,
																				"src": "8287:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8275:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 865,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "8294:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8275:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "8275:24:2"
																}
															]
														}
													]
												},
												"id": 870,
												"nodeType": "IfStatement",
												"src": "7895:429:2",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "7917:193:2",
													"statements": [
														{
															"id": 858,
															"nodeType": "UncheckedBlock",
															"src": "7931:169:2",
															"statements": [
																{
																	"expression": {
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 852,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "8062:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 854,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8064:12:2",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 498,
																			"src": "8062:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 855,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "8080:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8062:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 857,
																	"nodeType": "ExpressionStatement",
																	"src": "8062:23:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 872,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "8348:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8354:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "8358:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "8339:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8339:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "EmitStatement",
												"src": "8334:30:2"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "6892:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7210:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7226:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7218:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7240:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7252:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7244:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7244:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:41:2"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7276:0:2"
									},
									"scope": 1079,
									"src": "7201:1170:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "8770:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "8784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8803:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8795:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8795:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8795:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8784:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "IfStatement",
												"src": "8780:91:2",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "8807:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8857:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8849:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 893,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8849:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8849:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 892,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "8828:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8828:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 898,
															"nodeType": "RevertStatement",
															"src": "8821:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8888:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 902,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8888:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8888:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "8909:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "8880:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8880:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "8880:35:2"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "8377:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8723:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8737:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "8729:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8729:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "8746:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8746:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8728:32:2"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:0:2"
									},
									"scope": 1079,
									"src": "8714:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "9296:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 919,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "9310:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9321:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 920,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9321:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9321:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9310:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"nodeType": "IfStatement",
												"src": "9306:89:2",
												"trueBody": {
													"id": 932,
													"nodeType": "Block",
													"src": "9333:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9381:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9373:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 926,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9373:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9373:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 925,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1962,
																	"src": "9354:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9354:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 931,
															"nodeType": "RevertStatement",
															"src": "9347:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "9412:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9429:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9421:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 936,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9421:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9421:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "9433:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 934,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "9404:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9404:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "9404:35:2"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "8928:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9249:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9263:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "9255:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9255:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9280:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "9272:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9272:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9254:32:2"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9296:0:2"
									},
									"scope": 1079,
									"src": "9240:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "10056:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "10075:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "10082:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "10091:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10098:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 954,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															962,
															1030
														],
														"referencedDeclaration": 1030,
														"src": "10066:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10066:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "10066:37:2"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "9452:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9991:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10008:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "10000:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "10015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "10032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9999:47:2"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10056:0:2"
									},
									"scope": 1079,
									"src": "9982:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "11055:389:2",
										"statements": [
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11086:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "11065:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 975,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 974,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11065:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "11065:12:2"
															},
															"referencedDeclaration": 503,
															"src": "11065:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 977,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "11090:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11090:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11065:43:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 980,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "11122:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11139:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11131:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 981,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11131:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11131:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11122:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "11118:89:2",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "11143:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11193:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11185:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 987,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11185:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11185:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 986,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "11164:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11164:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 992,
															"nodeType": "RevertStatement",
															"src": "11157:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 995,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "11220:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11239:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 996,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11231:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11231:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11220:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1009,
												"nodeType": "IfStatement",
												"src": "11216:90:2",
												"trueBody": {
													"id": 1008,
													"nodeType": "Block",
													"src": "11243:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11292:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11284:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1002,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11284:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11284:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1001,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1986,
																	"src": "11264:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11264:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1007,
															"nodeType": "RevertStatement",
															"src": "11257:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1010,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "11315:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11317:11:2",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 496,
																"src": "11315:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1015,
															"indexExpression": {
																"id": 1012,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "11329:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11315:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1016,
														"indexExpression": {
															"id": 1013,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11336:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11315:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "11347:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11315:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "11315:37:2"
											},
											{
												"condition": {
													"id": 1020,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 971,
													"src": "11366:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "IfStatement",
												"src": "11362:76:2",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "11377:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1022,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "11405:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1023,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "11412:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1024,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "11421:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1021,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2103,
																	"src": "11396:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11396:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1026,
															"nodeType": "EmitStatement",
															"src": "11391:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "10116:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10966:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10983:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10975:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10975:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10998:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10990:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "11007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11007:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11027:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "11022:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11022:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10974:63:2"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11055:0:2"
									},
									"scope": 1079,
									"src": "10957:487:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "11815:387:2",
										"statements": [
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11833:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1077,
														"src": "11825:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11825:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1046,
												"initialValue": {
													"arguments": [
														{
															"id": 1043,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "11862:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "11869:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1042,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "11852:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11852:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11825:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1047,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "11891:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11915:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1049,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11915:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1048,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11910:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11910:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11924:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11910:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11891:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "11887:309:2",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "11929:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1054,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "11947:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1055,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "11966:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11947:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1064,
															"nodeType": "IfStatement",
															"src": "11943:130:2",
															"trueBody": {
																"id": 1063,
																"nodeType": "Block",
																"src": "11973:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1058,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1035,
																					"src": "12025:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1059,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1041,
																					"src": "12034:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1060,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "12052:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1057,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1976,
																				"src": "11998:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11998:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1062,
																		"nodeType": "RevertStatement",
																		"src": "11991:67:2"
																	}
																]
															}
														},
														{
															"id": 1074,
															"nodeType": "UncheckedBlock",
															"src": "12086:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1066,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1033,
																				"src": "12123:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1067,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1035,
																				"src": "12130:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1068,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1041,
																					"src": "12139:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1069,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "12158:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12139:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12165:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1065,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				962,
																				1030
																			],
																			"referencedDeclaration": 1030,
																			"src": "12114:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12114:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1073,
																	"nodeType": "ExpressionStatement",
																	"src": "12114:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "11450:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11735:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "11751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11751:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11774:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "11766:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11766:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11791:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "11783:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11783:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11750:47:2"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11815:0:2"
									},
									"scope": 1079,
									"src": "11726:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1080,
							"src": "1281:10923:2",
							"usedErrors": [
								211,
								214,
								1957,
								1962,
								1967,
								1976,
								1981,
								1986
							],
							"usedEvents": [
								219,
								2094,
								2103
							]
						}
					],
					"src": "105:12100:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1157
						]
					},
					"id": 1158,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1081,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1082,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1157,
							"linearizedBaseContracts": [
								1157
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1091,
									"name": "Transfer",
									"nameLocation": "405:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "414:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "436:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "456:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:3"
									},
									"src": "399:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1100,
									"name": "Approval",
									"nameLocation": "636:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "645:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "668:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:3"
									},
									"src": "630:78:3"
								},
								{
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:3"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "831:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:3"
									},
									"scope": 1157,
									"src": "785:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "942:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:3"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "982:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:3"
									},
									"scope": 1157,
									"src": "923:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1234:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:3"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 1157,
									"src": "1204:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 1157,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2302:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2319:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:3"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2353:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:3"
									},
									"scope": 1157,
									"src": "2285:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2679:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2693:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2705:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:3"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2739:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:3"
									},
									"scope": 1157,
									"src": "2657:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1158,
							"src": "202:2545:3",
							"usedErrors": [],
							"usedEvents": [
								1091,
								1100
							]
						}
					],
					"src": "106:2642:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
					"exportedSymbols": {
						"IERC20PermitUpgradeable": [
							1193
						]
					},
					"id": 1194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1159,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20PermitUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1160,
								"nodeType": "StructuredDocumentation",
								"src": "148:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1193,
							"linearizedBaseContracts": [
								1193
							],
							"name": "IERC20PermitUpgradeable",
							"nameLocation": "2122:23:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "2152:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3016:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3063:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3055:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3055:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3088:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3080:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3080:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3111:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3103:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3135:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3129:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1170,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3129:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3173:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3165:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:158:4"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3189:0:4"
									},
									"scope": 1193,
									"src": "3007:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "3196:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3504:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3519:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3511:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3510:15:4"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3549:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:9:4"
									},
									"scope": 1193,
									"src": "3495:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "3564:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3759:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3775:2:4"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3801:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1189,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3801:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:9:4"
									},
									"scope": 1193,
									"src": "3750:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1194,
							"src": "2112:1700:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3690:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1899
						],
						"IERC20PermitUpgradeable": [
							1193
						],
						"IERC20Upgradeable": [
							1157
						],
						"SafeERC20Upgradeable": [
							1569
						]
					},
					"id": 1570,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 1196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1570,
							"sourceUnit": 1158,
							"src": "140:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
							"file": "../extensions/IERC20PermitUpgradeable.sol",
							"id": 1197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1570,
							"sourceUnit": 1194,
							"src": "175:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 1198,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1570,
							"sourceUnit": 1900,
							"src": "227:47:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1199,
								"nodeType": "StructuredDocumentation",
								"src": "276:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1569,
							"linearizedBaseContracts": [
								1569
							],
							"name": "SafeERC20Upgradeable",
							"nameLocation": "742:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1202,
									"libraryName": {
										"id": 1200,
										"name": "AddressUpgradeable",
										"nameLocations": [
											"775:18:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1899,
										"src": "775:18:5"
									},
									"nodeType": "UsingForDirective",
									"src": "769:37:5",
									"typeName": {
										"id": 1201,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "798:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "1079:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1214,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "1109:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1217,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1206,
																			"src": "1139:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1145:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1124,
																		"src": "1139:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1154:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1139:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1220,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "1164:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1221,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1215,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1116:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1120:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1116:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1116:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1213,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "1089:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1157_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "1089:86:5"
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "812:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1005:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1036:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "1018:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1205,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1204,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1018:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1157,
														"src": "1018:17:5"
													},
													"referencedDeclaration": 1157,
													"src": "1018:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1051:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "1043:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1063:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "1055:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:52:5"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:0:5"
									},
									"scope": 1569,
									"src": "996:186:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "1522:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1240,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "1552:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1243,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "1582:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1588:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1156,
																		"src": "1582:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1601:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1582:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1246,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "1611:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1247,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "1617:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1236,
																	"src": "1621:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1241,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1559:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1563:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1559:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1559:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1239,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "1532:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1157_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1532:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "1532:96:5"
											}
										]
									},
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "1188:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1430:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1465:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1447:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1228,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1447:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1157,
														"src": "1447:17:5"
													},
													"referencedDeclaration": 1157,
													"src": "1447:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1480:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1472:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1494:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1486:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1506:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1498:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:66:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1522:0:5"
									},
									"scope": 1569,
									"src": "1421:214:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "1982:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1265,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "2231:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2240:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2231:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2230:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1273,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2271:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1569",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1569",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 1272,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2263:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1271,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2263:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1274,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2263:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1275,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "2278:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1269,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1257,
																					"src": "2247:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2253:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1134,
																				"src": "2247:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2247:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2290:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2247:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1279,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2246:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2230:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2209:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "2209:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1285,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "2402:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1288,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "2432:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2438:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1144,
																		"src": "2432:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2446:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2432:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1291,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "2456:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1292,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "2465:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1286,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2409:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2413:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2409:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2409:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1284,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "2382:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1157_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2382:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "2382:90:5"
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "1641:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1904:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1934:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1916:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1255,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"1916:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1157,
														"src": "1916:17:5"
													},
													"referencedDeclaration": 1157,
													"src": "1916:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1949:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1941:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1966:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1958:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:57:5"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:0:5"
									},
									"scope": 1569,
									"src": "1895:584:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "2767:194:5",
										"statements": [
											{
												"assignments": [
													1309
												],
												"declarations": [
													{
														"constant": false,
														"id": 1309,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2785:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "2777:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2777:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1318,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1314,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2824:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1569",
																		"typeString": "library SafeERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1569",
																		"typeString": "library SafeERC20Upgradeable"
																	}
																],
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2816:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1312,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2816:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2816:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1316,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "2831:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1310,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "2800:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2806:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1134,
														"src": "2800:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2800:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2777:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1320,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "2869:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1323,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1301,
																			"src": "2899:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 1324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2905:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1144,
																		"src": "2899:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2913:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2899:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1326,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "2923:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1327,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "2932:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1328,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1305,
																		"src": "2947:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2932:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1321,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2876:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2880:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2876:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2876:77:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1319,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "2849:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1157_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2849:105:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "2849:105:5"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "2485:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2679:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2719:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2701:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1299,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"2701:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1157,
														"src": "2701:17:5"
													},
													"referencedDeclaration": 1157,
													"src": "2701:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2734:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2726:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2751:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2743:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:57:5"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2767:0:5"
									},
									"scope": 1569,
									"src": "2670:291:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "3249:321:5",
										"statements": [
											{
												"id": 1377,
												"nodeType": "UncheckedBlock",
												"src": "3259:305:5",
												"statements": [
													{
														"assignments": [
															1346
														],
														"declarations": [
															{
																"constant": false,
																"id": 1346,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3291:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 1377,
																"src": "3283:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3283:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1355,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1351,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3330:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1569",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1569",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3322:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1349,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3322:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3322:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1353,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "3337:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1347,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "3306:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3312:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1134,
																"src": "3306:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3306:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3283:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1357,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1346,
																		"src": "3367:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1358,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "3383:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3367:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3390:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1356,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3359:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3359:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1362,
														"nodeType": "ExpressionStatement",
														"src": "3359:75:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1364,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "3468:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1367,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "3498:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 1368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3504:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1144,
																				"src": "3498:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3512:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3498:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1370,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "3522:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1371,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1346,
																				"src": "3531:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1372,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "3546:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3531:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1365,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3475:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3479:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3475:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3475:77:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1363,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1520,
																"src": "3448:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1157_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3448:105:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1376,
														"nodeType": "ExpressionStatement",
														"src": "3448:105:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "2967:180:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3161:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3201:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "3183:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1336,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"3183:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1157,
														"src": "3183:17:5"
													},
													"referencedDeclaration": 1157,
													"src": "3183:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3216:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "3208:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3233:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:57:5"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:0:5"
									},
									"scope": 1569,
									"src": "3152:418:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "3977:333:5",
										"statements": [
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4000:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1425,
														"src": "3987:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1390,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3987:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1400,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1394,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "4038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4044:7:5",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1144,
																"src": "4038:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4052:8:5",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4038:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 1397,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "4062:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "4071:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1392,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4015:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4019:18:5",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "4015:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4015:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3987:90:5"
											},
											{
												"condition": {
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4092:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1402,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "4117:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															{
																"id": 1403,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "4124:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																	"typeString": "contract IERC20Upgradeable"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1401,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "4093:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1157_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20Upgradeable,bytes memory) returns (bool)"
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4093:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1424,
												"nodeType": "IfStatement",
												"src": "4088:216:5",
												"trueBody": {
													"id": 1423,
													"nodeType": "Block",
													"src": "4139:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1407,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1383,
																		"src": "4173:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 1410,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1383,
																						"src": "4203:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																							"typeString": "contract IERC20Upgradeable"
																						}
																					},
																					"id": 1411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4209:7:5",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1144,
																					"src": "4203:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 1412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4217:8:5",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4203:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 1413,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "4227:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 1414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4236:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 1408,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4180:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4184:18:5",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4180:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4180:58:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																			"typeString": "contract IERC20Upgradeable"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1406,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1520,
																	"src": "4153:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1157_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																	}
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4153:86:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1417,
															"nodeType": "ExpressionStatement",
															"src": "4153:86:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1419,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1383,
																		"src": "4273:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	{
																		"id": 1420,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1391,
																		"src": "4280:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																			"typeString": "contract IERC20Upgradeable"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1418,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1520,
																	"src": "4253:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1157_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4253:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1422,
															"nodeType": "ExpressionStatement",
															"src": "4253:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "3576:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3898:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3929:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "3911:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1382,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1381,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"3911:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1157,
														"src": "3911:17:5"
													},
													"referencedDeclaration": 1157,
													"src": "3911:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3944:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "3936:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "3953:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3910:57:5"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3977:0:5"
									},
									"scope": 1569,
									"src": "3889:421:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "4688:257:5",
										"statements": [
											{
												"assignments": [
													1448
												],
												"declarations": [
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4706:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1482,
														"src": "4698:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1447,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4698:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1453,
												"initialValue": {
													"arguments": [
														{
															"id": 1451,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "4733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1449,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "4720:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1193",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4726:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "4720:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4720:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4698:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1457,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "4762:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1458,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "4769:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "4778:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1460,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "4785:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1461,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "4795:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1462,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "4798:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1463,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "4801:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1454,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "4749:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1193",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4755:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1178,
														"src": "4749:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4749:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "4749:54:5"
											},
											{
												"assignments": [
													1467
												],
												"declarations": [
													{
														"constant": false,
														"id": 1467,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4821:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1482,
														"src": "4813:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4813:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1472,
												"initialValue": {
													"arguments": [
														{
															"id": 1470,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "4847:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1468,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "4834:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1193",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4840:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "4834:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4813:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1474,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "4871:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1475,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1448,
																	"src": "4885:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4899:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4885:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4871:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4902:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4863:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4863:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "4863:75:5"
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "4316:141:5",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4471:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4515:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4491:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1193",
													"typeString": "contract IERC20PermitUpgradeable"
												},
												"typeName": {
													"id": 1429,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1428,
														"name": "IERC20PermitUpgradeable",
														"nameLocations": [
															"4491:23:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1193,
														"src": "4491:23:5"
													},
													"referencedDeclaration": 1193,
													"src": "4491:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$1193",
														"typeString": "contract IERC20PermitUpgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4538:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4530:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4561:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4553:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4586:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4578:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4609:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4601:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4633:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4627:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1439,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4652:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4644:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4671:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4663:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1443,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4481:197:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4688:0:5"
									},
									"scope": 1569,
									"src": "4462:483:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "5409:572:5",
										"statements": [
											{
												"assignments": [
													1493
												],
												"declarations": [
													{
														"constant": false,
														"id": 1493,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5771:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1519,
														"src": "5758:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1492,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5758:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1502,
												"initialValue": {
													"arguments": [
														{
															"id": 1499,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "5812:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5818:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1496,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "5792:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5784:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1494,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5784:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5784:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5799:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1659,
														"src": "5784:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5784:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5758:95:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1504,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "5871:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5882:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5871:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5892:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5871:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1510,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "5908:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5921:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 1511,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5921:4:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 1513,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5920:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 1508,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5897:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5901:6:5",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5897:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5897:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5871:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5929:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 1503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5863:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5863:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "5863:111:5"
											}
										]
									},
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "4951:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5337:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5375:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "5357:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1485,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"5357:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1157,
														"src": "5357:17:5"
													},
													"referencedDeclaration": 1157,
													"src": "5357:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5395:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "5382:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5382:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5356:44:5"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5409:0:5"
									},
									"scope": 1569,
									"src": "5328:653:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "6582:516:5",
										"statements": [
											{
												"assignments": [
													1532,
													1534
												],
												"declarations": [
													{
														"constant": false,
														"id": 1532,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6883:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "6878:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1531,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6878:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1534,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6905:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "6892:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1533,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6892:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1542,
												"initialValue": {
													"arguments": [
														{
															"id": 1540,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "6939:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1537,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1524,
																	"src": "6927:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6919:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1535,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6919:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6919:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6934:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6919:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6919:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6877:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1543,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6973:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1544,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1534,
																				"src": "6985:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6996:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6985:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7006:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6985:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1550,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1534,
																				"src": "7022:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1552,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7035:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1551,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "7035:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1553,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7034:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1548,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "7011:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "7015:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "7011:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7011:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6985:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1556,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6984:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6973:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1562,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "7084:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	],
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7076:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1560,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7076:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7076:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1558,
																"name": "AddressUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "7046:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1899_$",
																	"typeString": "type(library AddressUpgradeable)"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7065:10:5",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1587,
															"src": "7046:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7046:45:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6973:118:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1530,
												"id": 1566,
												"nodeType": "Return",
												"src": "6954:137:5"
											}
										]
									},
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "5987:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6491:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6533:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6515:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1523,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1522,
														"name": "IERC20Upgradeable",
														"nameLocations": [
															"6515:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1157,
														"src": "6515:17:5"
													},
													"referencedDeclaration": 1157,
													"src": "6515:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6553:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6540:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6540:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6514:44:5"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6576:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6576:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:6:5"
									},
									"scope": 1569,
									"src": "6482:616:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1570,
							"src": "734:6366:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6986:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1899
						]
					},
					"id": 1900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1571,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1572,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1899,
							"linearizedBaseContracts": [
								1899
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "1489:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1580,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "1713:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1579,
												"id": 1585,
												"nodeType": "Return",
												"src": "1706:30:6"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "1443:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:6"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "1483:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:6"
									},
									"scope": 1899,
									"src": "1423:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "2729:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1598,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1899",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1899",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1596,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1601,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "2772:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:6"
											},
											{
												"assignments": [
													1607,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1620,
														"src": "2824:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1606,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1614,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1608,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "2842:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1610,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "2864:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1616,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "2893:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:6"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "2677:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "2704:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:6"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:6"
									},
									"scope": 1899,
									"src": "2658:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "3801:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1632,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "3840:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "3848:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1631,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1679,
															1723
														],
														"referencedDeclaration": 1723,
														"src": "3818:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1637,
												"nodeType": "Return",
												"src": "3811:79:6"
											}
										]
									},
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "3734:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "3750:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:6"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "3787:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:6"
									},
									"scope": 1899,
									"src": "3712:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "4266:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1652,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "4305:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1653,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "4313:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1655,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "4322:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1651,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1679,
															1723
														],
														"referencedDeclaration": 1723,
														"src": "4283:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1657,
												"nodeType": "Return",
												"src": "4276:59:6"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "4150:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "4174:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "4201:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:6"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "4252:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:6"
									},
									"scope": 1899,
									"src": "4119:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "4817:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1672,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "4856:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "4864:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1674,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "4870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1671,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1679,
															1723
														],
														"referencedDeclaration": 1723,
														"src": "4834:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1670,
												"id": 1677,
												"nodeType": "Return",
												"src": "4827:94:6"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4735:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4751:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4770:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:6"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4803:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:6"
									},
									"scope": 1899,
									"src": "4704:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "5355:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1696,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1899",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1899",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1694,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1699,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "5398:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:6"
											},
											{
												"assignments": [
													1705,
													1707
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "5457:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1704,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1707,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "5471:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1706,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1714,
												"initialValue": {
													"arguments": [
														{
															"id": 1712,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "5524:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1708,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "5498:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1710,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "5517:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1716,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "5573:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1717,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "5581:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1718,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "5590:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1719,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "5602:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1715,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "5546:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1721,
												"nodeType": "Return",
												"src": "5539:76:6"
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5216:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5240:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5290:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:6"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5341:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1690,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:6"
									},
									"scope": 1899,
									"src": "5176:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "5899:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1734,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "5935:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1735,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "5943:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1733,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1740,
															1769
														],
														"referencedDeclaration": 1769,
														"src": "5916:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1732,
												"id": 1738,
												"nodeType": "Return",
												"src": "5909:80:6"
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "5827:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "5843:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:6"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "5885:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:6"
									},
									"scope": 1899,
									"src": "5799:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "6338:168:6",
										"statements": [
											{
												"assignments": [
													1753,
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1768,
														"src": "6349:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1752,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1768,
														"src": "6363:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1754,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"arguments": [
														{
															"id": 1758,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "6408:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1756,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "6390:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1762,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "6457:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1763,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "6465:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1764,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "6474:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1765,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "6486:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1761,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "6430:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1751,
												"id": 1767,
												"nodeType": "Return",
												"src": "6423:76:6"
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "6217:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "6241:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "6268:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:6"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "6324:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:6"
									},
									"scope": 1899,
									"src": "6180:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "6782:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1780,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "6820:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1781,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "6828:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1779,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1786,
															1815
														],
														"referencedDeclaration": 1815,
														"src": "6799:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1778,
												"id": 1784,
												"nodeType": "Return",
												"src": "6792:84:6"
											}
										]
									},
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "6715:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "6731:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:6"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "6768:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:6"
									},
									"scope": 1899,
									"src": "6685:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "7224:170:6",
										"statements": [
											{
												"assignments": [
													1799,
													1801
												],
												"declarations": [
													{
														"constant": false,
														"id": 1799,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1814,
														"src": "7235:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1798,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1801,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1814,
														"src": "7249:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1800,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1806,
												"initialValue": {
													"arguments": [
														{
															"id": 1804,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "7296:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1802,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "7276:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1808,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "7345:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1809,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "7353:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1810,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "7362:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1811,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "7374:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1807,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "7318:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1797,
												"id": 1813,
												"nodeType": "Return",
												"src": "7311:76:6"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "7108:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "7132:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1790,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "7159:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1792,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:6"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "7210:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1795,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:6"
									},
									"scope": 1899,
									"src": "7069:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "7876:434:6",
										"statements": [
											{
												"condition": {
													"id": 1829,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1820,
													"src": "7890:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1851,
													"nodeType": "Block",
													"src": "8246:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1847,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1822,
																		"src": "8268:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1848,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1824,
																		"src": "8280:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1846,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "8260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1850,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:6"
														}
													]
												},
												"id": 1852,
												"nodeType": "IfStatement",
												"src": "7886:418:6",
												"trueBody": {
													"id": 1845,
													"nodeType": "Block",
													"src": "7899:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1830,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1822,
																		"src": "7917:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1842,
															"nodeType": "IfStatement",
															"src": "7913:286:6",
															"trueBody": {
																"id": 1841,
																"nodeType": "Block",
																"src": "7941:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1836,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1818,
																							"src": "8143:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1835,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1587,
																						"src": "8132:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1837,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1838,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1834,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1840,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1843,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "8219:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1828,
															"id": 1844,
															"nodeType": "Return",
															"src": "8212:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "7727:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "7751:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "7773:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1821,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "7806:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1823,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:6"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "7862:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1826,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:6"
									},
									"scope": 1899,
									"src": "7682:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "8691:135:6",
										"statements": [
											{
												"condition": {
													"id": 1866,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1857,
													"src": "8705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1875,
													"nodeType": "Block",
													"src": "8762:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1871,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "8784:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1872,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1861,
																		"src": "8796:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1870,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "8776:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1874,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:6"
														}
													]
												},
												"id": 1876,
												"nodeType": "IfStatement",
												"src": "8701:119:6",
												"trueBody": {
													"id": 1869,
													"nodeType": "Block",
													"src": "8714:42:6",
													"statements": [
														{
															"expression": {
																"id": 1867,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "8735:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1865,
															"id": 1868,
															"nodeType": "Return",
															"src": "8728:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "8566:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "8588:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "8621:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:6"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "8677:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:6"
									},
									"scope": 1899,
									"src": "8531:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "8915:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1885,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "8991:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1895,
													"nodeType": "Block",
													"src": "9321:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1892,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "9342:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1891,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1894,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:6"
														}
													]
												},
												"id": 1896,
												"nodeType": "IfStatement",
												"src": "8987:379:6",
												"trueBody": {
													"id": 1890,
													"nodeType": "Block",
													"src": "9014:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:6",
																"nodeType": "YulBlock",
																"src": "9172:133:6",
																"statements": [
																	{
																		"nativeSrc": "9190:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:6"
																			},
																			"nativeSrc": "9213:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:6",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:6",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:6"
																					},
																					"nativeSrc": "9254:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:6"
																			},
																			"nativeSrc": "9247:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:6"
																		},
																		"nativeSrc": "9247:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1880,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1880,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:6",
																	"valueSize": 1
																}
															],
															"id": 1889,
															"nodeType": "InlineAssembly",
															"src": "9163:142:6"
														}
													]
												}
											}
										]
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "8849:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "8874:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1881,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:6"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:6"
									},
									"scope": 1899,
									"src": "8832:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1900,
							"src": "194:9180:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1945
						],
						"Initializable": [
							462
						]
					},
					"id": 1946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1901,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1946,
							"sourceUnit": 463,
							"src": "126:63:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1902,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "134:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1905,
										"name": "Initializable",
										"nameLocations": [
											"728:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "728:13:7"
									},
									"id": 1906,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:7"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1904,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1945,
							"linearizedBaseContracts": [
								1945,
								462
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "800:7:7",
										"statements": []
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1909,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1908,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:7"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:7"
									},
									"scope": 1945,
									"src": "748:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "875:7:7",
										"statements": []
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1915,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1914,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:7"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:7"
									},
									"scope": 1945,
									"src": "813:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "949:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1923,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1922,
												"id": 1925,
												"nodeType": "Return",
												"src": "959:17:7"
											}
										]
									},
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:7"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "940:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:7"
									},
									"scope": 1945,
									"src": "887:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "1056:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1932,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1931,
												"id": 1934,
												"nodeType": "Return",
												"src": "1066:15:7"
											}
										]
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:7"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1040:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1929,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:7"
									},
									"scope": 1945,
									"src": "989:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "1166:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1940,
												"id": 1942,
												"nodeType": "Return",
												"src": "1176:8:7"
											}
										]
									},
									"id": 1944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:7"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "1157:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:7"
									},
									"scope": 1945,
									"src": "1094:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1946,
							"src": "688:505:7",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							2082
						],
						"IERC20Errors": [
							1987
						],
						"IERC721Errors": [
							2035
						]
					},
					"id": 2083,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1947,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1948,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:8",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1987,
							"linearizedBaseContracts": [
								1987
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:8",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1957,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "654:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "670:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "687:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:8"
									},
									"src": "623:80:8"
								},
								{
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1962,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "891:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:8"
									},
									"src": "866:41:8"
								},
								{
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1967,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "1104:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:8"
									},
									"src": "1077:45:8"
								},
								{
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:8",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1976,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "1511:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "1528:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "1547:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:8"
									},
									"src": "1478:85:8"
								},
								{
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1981,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "1775:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:8"
									},
									"src": "1748:45:8"
								},
								{
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:8",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1986,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "2025:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:8"
									},
									"src": "1999:43:8"
								}
							],
							"scope": 2083,
							"src": "280:1764:8",
							"usedErrors": [
								1957,
								1962,
								1967,
								1976,
								1981,
								1986
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1988,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:8",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 2035,
							"linearizedBaseContracts": [
								2035
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:8",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1993,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2469:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:8"
									},
									"src": "2444:40:8"
								},
								{
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:8",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1998,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "2656:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:8"
									},
									"src": "2627:46:8"
								},
								{
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:8",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 2007,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3000:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3016:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "3033:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:8"
									},
									"src": "2973:75:8"
								},
								{
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 2012,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3237:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:8"
									},
									"src": "3211:42:8"
								},
								{
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 2017,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3451:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:8"
									},
									"src": "3423:46:8"
								},
								{
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:8",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 2024,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "3760:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "3778:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:8"
									},
									"src": "3727:68:8"
								},
								{
									"documentation": {
										"id": 2025,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 2029,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "4008:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:8"
									},
									"src": "3980:46:8"
								},
								{
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:8",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 2034,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "4262:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:8"
									},
									"src": "4234:46:8"
								}
							],
							"scope": 2083,
							"src": "2190:2092:8",
							"usedErrors": [
								1993,
								1998,
								2007,
								2012,
								2017,
								2024,
								2029,
								2034
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2036,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:8",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 2082,
							"linearizedBaseContracts": [
								2082
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:8",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 2047,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "4860:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "4876:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "4893:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "4909:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:8"
									},
									"src": "4827:99:8"
								},
								{
									"documentation": {
										"id": 2048,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 2052,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "5116:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:8"
									},
									"src": "5089:43:8"
								},
								{
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 2057,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "5331:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:8"
									},
									"src": "5302:47:8"
								},
								{
									"documentation": {
										"id": 2058,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:8",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 2064,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "5651:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "5669:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:8"
									},
									"src": "5616:68:8"
								},
								{
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 2069,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "5898:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:8"
									},
									"src": "5869:47:8"
								},
								{
									"documentation": {
										"id": 2070,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:8",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 2074,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "6153:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:8"
									},
									"src": "6124:47:8"
								},
								{
									"documentation": {
										"id": 2075,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:8",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 2081,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "6494:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "6513:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:8"
									},
									"src": "6462:73:8"
								}
							],
							"scope": 2083,
							"src": "4430:2107:8",
							"usedErrors": [
								2047,
								2052,
								2057,
								2064,
								2069,
								2074,
								2081
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2160
						]
					},
					"id": 2161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2084,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2085,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:9",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 2160,
							"linearizedBaseContracts": [
								2160
							],
							"name": "IERC20",
							"nameLocation": "214:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:9",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2094,
									"name": "Transfer",
									"nameLocation": "396:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "405:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "427:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "447:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:9"
									},
									"src": "390:72:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:9",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2103,
									"name": "Approval",
									"nameLocation": "627:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "636:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "659:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "684:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:9"
									},
									"src": "621:78:9"
								},
								{
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:9",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:9"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "821:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:9"
									},
									"scope": 2160,
									"src": "775:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:9",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "931:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:9"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "971:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:9"
									},
									"scope": 2160,
									"src": "912:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2118,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:9",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "1222:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "1234:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:9"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "1267:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:9"
									},
									"scope": 2160,
									"src": "1204:69:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2128,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:9",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "1567:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "1582:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:9"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "1622:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:9"
									},
									"scope": 2160,
									"src": "1548:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:9",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "2326:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "2343:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:9"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "2376:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:9"
									},
									"scope": 2160,
									"src": "2309:73:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:9",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "2712:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "2726:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "2738:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:9"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "2771:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:9"
									},
									"scope": 2160,
									"src": "2690:87:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2161,
							"src": "204:2575:9",
							"usedErrors": [],
							"usedEvents": [
								2094,
								2103
							]
						}
					],
					"src": "106:2674:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							2160
						],
						"IERC20Metadata": [
							2186
						]
					},
					"id": 2187,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2187,
							"sourceUnit": 2161,
							"src": "151:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2163,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2160,
										"src": "159:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2166,
										"name": "IERC20",
										"nameLocations": [
											"306:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2160,
										"src": "306:6:10"
									},
									"id": 2167,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:10"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2165,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:10",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 2186,
							"linearizedBaseContracts": [
								2186,
								2160
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:10",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:10"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "417:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2170,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:10"
									},
									"scope": 2186,
									"src": "378:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2174,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:10",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:10"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "540:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:10"
									},
									"scope": 2186,
									"src": "499:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2180,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:10",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:10"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "674:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2182,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:10"
									},
									"scope": 2186,
									"src": "631:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2187,
							"src": "278:405:10",
							"usedErrors": [],
							"usedEvents": [
								2094,
								2103
							]
						}
					],
					"src": "125:559:10"
				},
				"id": 10
			},
			"contracts/interfaces/IBTSPair.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IBTSPair.sol",
					"exportedSymbols": {
						"IBTSPair": [
							2292
						]
					},
					"id": 2293,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBTSPair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2292,
							"linearizedBaseContracts": [
								2292
							],
							"name": "IBTSPair",
							"nameLocation": "68:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3a105cfb",
									"id": 2198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "92:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "factoryAddress",
												"nameLocation": "111:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "103:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "141:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "127:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "127:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "166:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "147:25:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2193,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "147:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2194,
													"nodeType": "ArrayTypeName",
													"src": "147:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:71:11"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:0:11"
									},
									"scope": 2292,
									"src": "83:100:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "de836ebd",
									"id": 2208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "198:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "211:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "203:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "234:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "215:26:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2201,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "215:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2202,
													"nodeType": "ArrayTypeName",
													"src": "215:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:40:11"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "269:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "261:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "260:19:11"
									},
									"scope": 2292,
									"src": "189:91:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 2216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "295:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "308:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "300:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:12:11"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "347:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "330:24:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2212,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "330:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2213,
													"nodeType": "ArrayTypeName",
													"src": "330:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:26:11"
									},
									"scope": 2292,
									"src": "286:70:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a7c7fdeb",
									"id": 2219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokensToOwner",
									"nameLocation": "371:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:11"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:0:11"
									},
									"scope": 2292,
									"src": "362:42:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "de41691c",
									"id": 2225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokens",
									"nameLocation": "419:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "451:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "432:25:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2220,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "432:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2221,
													"nodeType": "ArrayTypeName",
													"src": "432:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:27:11"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:0:11"
									},
									"scope": 2292,
									"src": "410:58:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ba6ba385",
									"id": 2230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReentrancyGuardStatus",
									"nameLocation": "483:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "513:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "508:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "508:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:13:11"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:0:11"
									},
									"scope": 2292,
									"src": "474:56:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b4b93c8c",
									"id": 2233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distMgmtFee",
									"nameLocation": "545:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:2:11"
									},
									"returnParameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:11"
									},
									"scope": 2292,
									"src": "536:32:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "67ccdf38",
									"id": 2240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAddress",
									"nameLocation": "583:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "tokenIndex",
												"nameLocation": "607:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "599:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:20:11"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "642:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:9:11"
									},
									"scope": 2292,
									"src": "574:77:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8e73f1b4",
									"id": 2247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenReserve",
									"nameLocation": "666:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "tokenIndex",
												"nameLocation": "690:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "682:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:20:11"
									},
									"returnParameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "725:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:11"
									},
									"scope": 2292,
									"src": "657:77:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "273cbaa0",
									"id": 2253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenList",
									"nameLocation": "749:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:2:11"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "787:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2249,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "787:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2250,
													"nodeType": "ArrayTypeName",
													"src": "787:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:18:11"
									},
									"scope": 2292,
									"src": "740:65:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ec5975c6",
									"id": 2259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensReserve",
									"nameLocation": "820:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "836:2:11"
									},
									"returnParameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "862:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2255,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "862:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2256,
													"nodeType": "ArrayTypeName",
													"src": "862:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:18:11"
									},
									"scope": 2292,
									"src": "811:69:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "090318fb",
									"id": 2264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalMgmtFee",
									"nameLocation": "895:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "910:2:11"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "936:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "936:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "935:6:11"
									},
									"scope": 2292,
									"src": "886:56:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9257fa07",
									"id": 2271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateShareETH",
									"nameLocation": "957:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "amountLP",
												"nameLocation": "983:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "975:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:18:11"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1024:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "1016:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:19:11"
									},
									"scope": 2292,
									"src": "948:87:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d410ad7d",
									"id": 2279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateShareTokens",
									"nameLocation": "1050:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "amountLP",
												"nameLocation": "1079:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "1071:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:18:11"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "amountTokens",
												"nameLocation": "1129:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "1112:29:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2275,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1112:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2276,
													"nodeType": "ArrayTypeName",
													"src": "1112:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:31:11"
									},
									"scope": 2292,
									"src": "1041:102:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a131d436",
									"id": 2291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAndUserBal",
									"nameLocation": "1158:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1185:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1177:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:14:11"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1214:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2283,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1214:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2284,
													"nodeType": "ArrayTypeName",
													"src": "1214:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1232:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "1241:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:36:11"
									},
									"scope": 2292,
									"src": "1149:101:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2293,
							"src": "58:1194:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1221:11"
				},
				"id": 11
			},
			"contracts/interfaces/IFactory.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IFactory.sol",
					"exportedSymbols": {
						"IFactory": [
							2538
						]
					},
					"id": 2539,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2294,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2538,
							"linearizedBaseContracts": [
								2538
							],
							"name": "IFactory",
							"nameLocation": "68:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b28775cd",
									"id": 2299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "alva",
									"nameLocation": "122:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:2:12"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:9:12"
									},
									"scope": 2538,
									"src": "113:48:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01c4aebe",
									"id": 2304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "minPercentALVA",
									"nameLocation": "175:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "189:2:12"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "215:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2301,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "215:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:8:12"
									},
									"scope": 2538,
									"src": "166:57:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6dbd5d2a",
									"id": 2309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "minLpWithdrawal",
									"nameLocation": "237:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:12"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "278:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:9:12"
									},
									"scope": 2538,
									"src": "228:59:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f74a28d1",
									"id": 2314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "btsImplementation",
									"nameLocation": "301:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:2:12"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "344:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:9:12"
									},
									"scope": 2538,
									"src": "292:61:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f1f0471b",
									"id": 2319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "btsPairImplementation",
									"nameLocation": "367:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:12"
									},
									"returnParameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "414:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:9:12"
									},
									"scope": 2538,
									"src": "358:65:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9fbc8713",
									"id": 2324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyReceiver",
									"nameLocation": "437:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "452:2:12"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "478:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:12"
									},
									"scope": 2538,
									"src": "428:59:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8a71bb2d",
									"id": 2329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyPercentage",
									"nameLocation": "501:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:12"
									},
									"returnParameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "544:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:9:12"
									},
									"scope": 2538,
									"src": "492:61:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f887ea40",
									"id": 2334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "router",
									"nameLocation": "567:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:2:12"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "599:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:9:12"
									},
									"scope": 2538,
									"src": "558:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3fc8cef3",
									"id": 2339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "weth",
									"nameLocation": "622:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:2:12"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:9:12"
									},
									"scope": 2538,
									"src": "613:48:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "22ee3fa1",
									"id": 2344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "minBTSCreationAmount",
									"nameLocation": "675:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:12"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "721:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:9:12"
									},
									"scope": 2538,
									"src": "666:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ef1e095f",
									"id": 2349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "monthlyFeeRate",
									"nameLocation": "744:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:2:12"
									},
									"returnParameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "784:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:12"
									},
									"scope": 2538,
									"src": "735:58:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "defcd4b3",
									"id": 2354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectionUri",
									"nameLocation": "807:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:12"
									},
									"returnParameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "846:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2351,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "846:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:15:12"
									},
									"scope": 2538,
									"src": "798:63:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782447a",
									"id": 2359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalBTS",
									"nameLocation": "875:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:2:12"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2359,
												"src": "909:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "909:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:6:12"
									},
									"scope": 2538,
									"src": "866:49:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0aa959a3",
									"id": 2366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBTSAtIndex",
									"nameLocation": "929:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "951:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "943:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:15:12"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "981:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:9:12"
									},
									"scope": 2538,
									"src": "920:70:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4e994a0",
									"id": 2377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPlatformFeeConfig",
									"nameLocation": "1004:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1024:2:12"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "1050:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2368,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1050:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "1058:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2370,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1058:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "1066:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2372,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1066:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "1074:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:33:12"
									},
									"scope": 2538,
									"src": "995:88:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "37929eb4",
									"id": 2382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContractURI",
									"nameLocation": "1097:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1111:2:12"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "1137:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2379,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1137:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1136:15:12"
									},
									"scope": 2538,
									"src": "1088:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3b9589a9",
									"id": 2389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelistedContract",
									"nameLocation": "1166:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "contractAddr",
												"nameLocation": "1196:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "1188:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:22:12"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "1233:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1233:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:6:12"
									},
									"scope": 2538,
									"src": "1157:82:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d23aaed3",
									"id": 2398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calMgmtFee",
									"nameLocation": "1253:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "months",
												"nameLocation": "1272:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "1264:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "lpSupply",
												"nameLocation": "1288:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "1280:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:34:12"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "1321:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:9:12"
									},
									"scope": 2538,
									"src": "1244:86:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "1344:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1366:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "1358:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "_path",
												"nameLocation": "1392:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "1375:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2401,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1375:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2402,
													"nodeType": "ArrayTypeName",
													"src": "1375:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1357:41:12"
									},
									"returnParameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "1422:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1422:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1421:6:12"
									},
									"scope": 2538,
									"src": "1335:93:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d88e3e3b",
									"id": 2418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPath",
									"nameLocation": "1442:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "1458:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1450:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "1475:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1467:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:34:12"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1507:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2414,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1507:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2415,
													"nodeType": "ArrayTypeName",
													"src": "1507:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:18:12"
									},
									"scope": 2538,
									"src": "1433:92:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ea2cc846",
									"id": 2445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1574:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "_alva",
												"nameLocation": "1602:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1594:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "_minPercentALVA",
												"nameLocation": "1624:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1617:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2421,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1617:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "_btsImplementation",
												"nameLocation": "1657:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1649:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "_btsPairImplementation",
												"nameLocation": "1693:22:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1685:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "_monthlyFeeRate",
												"nameLocation": "1733:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1725:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "_royaltyReceiver",
												"nameLocation": "1766:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1758:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "_collectionUri",
												"nameLocation": "1808:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1792:30:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1792:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "_feeCollector",
												"nameLocation": "1840:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1832:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "_defaultMarketplace",
												"nameLocation": "1871:19:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1863:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "_routerAddress",
												"nameLocation": "1908:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1900:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "_wethAddress",
												"nameLocation": "1940:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1932:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "_minBTSCreationAmount",
												"nameLocation": "1970:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "1962:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1584:413:12"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2006:0:12"
									},
									"scope": 2538,
									"src": "1565:442:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b0ec8be9",
									"id": 2450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMinLpWithdrawal",
									"nameLocation": "2022:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "newMin",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:16:12"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2065:0:12"
									},
									"scope": 2538,
									"src": "2013:53:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a026bcf",
									"id": 2473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createBTS",
									"nameLocation": "2080:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2115:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "2099:21:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2099:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "2146:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "2130:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2453,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2130:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "2182:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "2163:26:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2455,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2163:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2456,
													"nodeType": "ArrayTypeName",
													"src": "2163:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "_weights",
												"nameLocation": "2218:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "2199:27:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2199:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2459,
													"nodeType": "ArrayTypeName",
													"src": "2199:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "2252:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "2236:25:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2236:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "_buffer",
												"nameLocation": "2279:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "2271:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2312:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "2296:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2296:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "_description",
												"nameLocation": "2341:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "2325:28:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2325:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "_deadline",
												"nameLocation": "2371:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "2363:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:297:12"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:0:12"
									},
									"scope": 2538,
									"src": "2071:333:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c43ba010",
									"id": 2478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateBTSImplementation",
									"nameLocation": "2418:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "_btsImplementation",
												"nameLocation": "2450:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "2442:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:28:12"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:0:12"
									},
									"scope": 2538,
									"src": "2409:70:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "31e15c7c",
									"id": 2483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateBTSPairImplementation",
									"nameLocation": "2493:27:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "_btsPairImplementation",
												"nameLocation": "2529:22:12",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "2521:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2521:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2520:32:12"
									},
									"returnParameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2561:0:12"
									},
									"scope": 2538,
									"src": "2484:78:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5ee70f09",
									"id": 2488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAlva",
									"nameLocation": "2576:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "_alva",
												"nameLocation": "2595:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "2587:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:15:12"
									},
									"returnParameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2610:0:12"
									},
									"scope": 2538,
									"src": "2567:44:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "251ae3d6",
									"id": 2493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateMinPercentALVA",
									"nameLocation": "2625:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "_minPercentALVA",
												"nameLocation": "2653:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "2646:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2489,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2646:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:24:12"
									},
									"returnParameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:0:12"
									},
									"scope": 2538,
									"src": "2616:63:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7910af6f",
									"id": 2498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateCollectionURI",
									"nameLocation": "2693:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "_collectionURI",
												"nameLocation": "2729:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "2713:30:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2713:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:32:12"
									},
									"returnParameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2753:0:12"
									},
									"scope": 2538,
									"src": "2684:70:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "621bb669",
									"id": 2503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyPercentage",
									"nameLocation": "2768:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "_royaltyPercentage",
												"nameLocation": "2800:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "2792:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2792:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2791:28:12"
									},
									"returnParameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2828:0:12"
									},
									"scope": 2538,
									"src": "2759:70:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "29dc4d9b",
									"id": 2508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyReceiver",
									"nameLocation": "2843:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "_royaltyReceiver",
												"nameLocation": "2873:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "2865:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2865:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:26:12"
									},
									"returnParameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2899:0:12"
									},
									"scope": 2538,
									"src": "2834:66:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0217d7c3",
									"id": 2513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateMinBTSCreationAmount",
									"nameLocation": "2914:26:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "_minBTSCreationAmount",
												"nameLocation": "2949:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "2941:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2941:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2940:31:12"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2980:0:12"
									},
									"scope": 2538,
									"src": "2905:76:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46704adb",
									"id": 2518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addWhitelistedContract",
									"nameLocation": "2995:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "contractAddr",
												"nameLocation": "3026:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "3018:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3018:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3017:22:12"
									},
									"returnParameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3048:0:12"
									},
									"scope": 2538,
									"src": "2986:63:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0b9421bd",
									"id": 2523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dewhitelistContract",
									"nameLocation": "3063:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "contractAddr",
												"nameLocation": "3091:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "3083:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:22:12"
									},
									"returnParameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:12"
									},
									"scope": 2538,
									"src": "3054:60:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bbf75517",
									"id": 2532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPlatformFeeConfig",
									"nameLocation": "3128:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "_btsCreationFee",
												"nameLocation": "3156:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "3149:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2524,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3149:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "_contributionFee",
												"nameLocation": "3180:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "3173:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2526,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3173:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "_withdrawalFee",
												"nameLocation": "3205:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "3198:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2528,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3198:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:72:12"
									},
									"returnParameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3229:0:12"
									},
									"scope": 2538,
									"src": "3119:111:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a42dce80",
									"id": 2537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeCollector",
									"nameLocation": "3244:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "_feeCollector",
												"nameLocation": "3268:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "3260:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3260:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3259:23:12"
									},
									"returnParameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3291:0:12"
									},
									"scope": 2538,
									"src": "3235:57:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2539,
							"src": "58:3236:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:3262:12"
				},
				"id": 12
			},
			"contracts/tokens/BTSPair.sol": {
				"ast": {
					"absolutePath": "contracts/tokens/BTSPair.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1899
						],
						"BasketTokenStandardPair": [
							3587
						],
						"ContextUpgradeable": [
							1945
						],
						"ERC20Upgradeable": [
							1079
						],
						"IBTSPair": [
							2292
						],
						"IERC20": [
							2160
						],
						"IERC20Errors": [
							1987
						],
						"IERC20Metadata": [
							2186
						],
						"IERC20PermitUpgradeable": [
							1193
						],
						"IERC20Upgradeable": [
							1157
						],
						"IFactory": [
							2538
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						],
						"SafeERC20Upgradeable": [
							1569
						]
					},
					"id": 3588,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2540,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2541,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3588,
							"sourceUnit": 195,
							"src": "57:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2542,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3588,
							"sourceUnit": 1080,
							"src": "133:78:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 2543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3588,
							"sourceUnit": 1570,
							"src": "212:88:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IFactory.sol",
							"file": "../interfaces/IFactory.sol",
							"id": 2544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3588,
							"sourceUnit": 2539,
							"src": "301:36:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IBTSPair.sol",
							"file": "../interfaces/IBTSPair.sol",
							"id": 2545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3588,
							"sourceUnit": 2293,
							"src": "338:36:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2547,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"620:16:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1079,
										"src": "620:16:13"
									},
									"id": 2548,
									"nodeType": "InheritanceSpecifier",
									"src": "620:16:13"
								},
								{
									"baseName": {
										"id": 2549,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"638:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "638:18:13"
									},
									"id": 2550,
									"nodeType": "InheritanceSpecifier",
									"src": "638:18:13"
								},
								{
									"baseName": {
										"id": 2551,
										"name": "IBTSPair",
										"nameLocations": [
											"658:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2292,
										"src": "658:8:13"
									},
									"id": 2552,
									"nodeType": "InheritanceSpecifier",
									"src": "658:8:13"
								}
							],
							"canonicalName": "BasketTokenStandardPair",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2546,
								"nodeType": "StructuredDocumentation",
								"src": "376:208:13",
								"text": "@title Basket Token Standard Pair\n @notice A contract for managing liquidity pairs of basket tokens\n @dev Implements ERC20 for liquidity tokens and acts as a liquidity pool for the specified tokens"
							},
							"fullyImplemented": true,
							"id": 3587,
							"linearizedBaseContracts": [
								3587,
								2292,
								194,
								1079,
								1987,
								2186,
								2160,
								1945,
								462
							],
							"name": "BasketTokenStandardPair",
							"nameLocation": "593:23:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2556,
									"libraryName": {
										"id": 2553,
										"name": "SafeERC20Upgradeable",
										"nameLocations": [
											"679:20:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1569,
										"src": "679:20:13"
									},
									"nodeType": "UsingForDirective",
									"src": "673:49:13",
									"typeName": {
										"id": 2555,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2554,
											"name": "IERC20Upgradeable",
											"nameLocations": [
												"704:17:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1157,
											"src": "704:17:13"
										},
										"referencedDeclaration": 1157,
										"src": "704:17:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
											"typeString": "contract IERC20Upgradeable"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "866:125:13",
										"text": "@notice Address of the factory contract\n @dev The factory contract is responsible for managing the liquidity pairs"
									},
									"functionSelector": "c45a0155",
									"id": 2559,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "1011:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 3587,
									"src": "996:22:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2558,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "996:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "1025:136:13",
										"text": "@notice Timestamp of the last fee accrual\n @dev The lastAccruedAt variable stores the timestamp for occurrence of fee accrual"
									},
									"functionSelector": "5483067d",
									"id": 2562,
									"mutability": "mutable",
									"name": "lastAccruedAt",
									"nameLocation": "1181:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3587,
									"src": "1166:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2561,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1166:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2563,
										"nodeType": "StructuredDocumentation",
										"src": "1205:115:13",
										"text": "@notice Boolean to track reentrancy\n @dev Prevents reentrancy by checking the state of operations in BTS"
									},
									"functionSelector": "d2c725e0",
									"id": 2565,
									"mutability": "mutable",
									"name": "reentrancyGuardEntered",
									"nameLocation": "1337:22:13",
									"nodeType": "VariableDeclaration",
									"scope": 3587,
									"src": "1325:34:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2564,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1325:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "1370:129:13",
										"text": "@notice Array of token addresses in the basket\n @dev The tokens array stores the addresses of the tokens in the basket"
									},
									"id": 2569,
									"mutability": "mutable",
									"name": "tokens",
									"nameLocation": "1522:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 3587,
									"src": "1504:24:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 2567,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1504:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 2568,
										"nodeType": "ArrayTypeName",
										"src": "1504:9:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2570,
										"nodeType": "StructuredDocumentation",
										"src": "1535:156:13",
										"text": "@notice Array of token reserves corresponding to the tokens array\n @dev The reserves array stores the reserve amounts of the tokens in the basket"
									},
									"id": 2573,
									"mutability": "mutable",
									"name": "reserves",
									"nameLocation": "1714:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 3587,
									"src": "1696:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2571,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1696:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2572,
										"nodeType": "ArrayTypeName",
										"src": "1696:9:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "1907:77:13",
										"statements": [
											{
												"condition": {
													"id": 2576,
													"name": "reentrancyGuardEntered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2565,
													"src": "1920:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2580,
												"nodeType": "IfStatement",
												"src": "1917:49:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2577,
															"name": "ReentrantCall",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "1951:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1951:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2579,
													"nodeType": "RevertStatement",
													"src": "1944:22:13"
												}
											},
											{
												"id": 2581,
												"nodeType": "PlaceholderStatement",
												"src": "1976:1:13"
											}
										]
									},
									"documentation": {
										"id": 2574,
										"nodeType": "StructuredDocumentation",
										"src": "1729:141:13",
										"text": "@notice Modifier to prevent reentrancy in read-only functions\n @dev Prevents reentrancy by checking the state of operations in BTS"
									},
									"id": 2583,
									"name": "nonReentrantReadOnly",
									"nameLocation": "1884:20:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:13"
									},
									"src": "1875:109:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "2115:300:13",
										"text": "@notice Emitted when the fee is accrued\n @param owner Address of the BTS\n @param months Number of months since last accrual\n @param supply Current supply of LP tokens\n @param amount Amount of LP tokens to be minted\n @param newAccruedAt New timestamp for accrual"
									},
									"eventSelector": "06ef86d1d001d3f4d5d79d6a6647502b17af442209a78bbbafb8867cb5cf6fb7",
									"id": 2596,
									"name": "feeAccrued",
									"nameLocation": "2426:10:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2453:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "2437:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"indexed": false,
												"mutability": "mutable",
												"name": "months",
												"nameLocation": "2468:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "2460:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"indexed": false,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "2484:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "2476:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2500:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "2492:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAccruedAt",
												"nameLocation": "2516:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "2508:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:93:13"
									},
									"src": "2420:110:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2597,
										"nodeType": "StructuredDocumentation",
										"src": "2536:102:13",
										"text": "@notice Emitted when the token list is updated\n @param _tokens New array of token addresses"
									},
									"eventSelector": "3ca096a4c913a6f222a557151d17832dddab787e6ddf59063cab45e15b9a9fac",
									"id": 2602,
									"name": "TokensUpdated",
									"nameLocation": "2649:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2600,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "2673:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2663:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2598,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2663:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2599,
													"nodeType": "ArrayTypeName",
													"src": "2663:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2662:19:13"
									},
									"src": "2643:39:13"
								},
								{
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "2813:136:13",
										"text": "@notice Error thrown when an invalid token is provided\n @dev The InvalidToken error is thrown when a token address is invalid"
									},
									"errorSelector": "c1ab6dc1",
									"id": 2605,
									"name": "InvalidToken",
									"nameLocation": "2960:12:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2972:2:13"
									},
									"src": "2954:21:13"
								},
								{
									"documentation": {
										"id": 2606,
										"nodeType": "StructuredDocumentation",
										"src": "2981:185:13",
										"text": "@notice Error thrown when there is insufficient liquidity for an operation\n @dev The InsufficientLiquidity error is thrown when there is not enough liquidity for an operation"
									},
									"errorSelector": "bb55fd27",
									"id": 2608,
									"name": "InsufficientLiquidity",
									"nameLocation": "3177:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3198:2:13"
									},
									"src": "3171:30:13"
								},
								{
									"documentation": {
										"id": 2609,
										"nodeType": "StructuredDocumentation",
										"src": "3207:144:13",
										"text": "@notice Error thrown when an invalid recipient address is provided\n @dev The InvalidRecipient error is thrown when an address is zero"
									},
									"errorSelector": "9c8d2cd2",
									"id": 2611,
									"name": "InvalidRecipient",
									"nameLocation": "3362:16:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3378:2:13"
									},
									"src": "3356:25:13"
								},
								{
									"documentation": {
										"id": 2612,
										"nodeType": "StructuredDocumentation",
										"src": "3387:57:13",
										"text": "@notice Error thrown when a parameter string is empty"
									},
									"errorSelector": "90c8618c",
									"id": 2616,
									"name": "EmptyStringParameter",
									"nameLocation": "3455:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "paramName",
												"nameLocation": "3483:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "3476:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3476:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3475:18:13"
									},
									"src": "3449:45:13"
								},
								{
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "3500:143:13",
										"text": "@notice Error thrown when a reentrancy attempt is detected\n @dev The ReentrancyError is thrown when a reentrancy attempt is detected"
									},
									"errorSelector": "37ed32e8",
									"id": 2619,
									"name": "ReentrantCall",
									"nameLocation": "3654:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3667:2:13"
									},
									"src": "3648:22:13"
								},
								{
									"baseFunctions": [
										2198
									],
									"body": {
										"id": 2695,
										"nodeType": "Block",
										"src": "4229:423:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2632,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2627,
															"src": "4243:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4251:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4243:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4261:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4243:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2639,
												"nodeType": "IfStatement",
												"src": "4239:46:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2636,
															"name": "InvalidToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "4271:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4271:14:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2638,
													"nodeType": "RevertStatement",
													"src": "4264:21:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2642,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2624,
																	"src": "4305:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4299:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2640,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "4299:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4299:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4312:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4299:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4322:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4299:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2651,
												"nodeType": "IfStatement",
												"src": "4295:65:13",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "6e616d65",
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4353:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
																	"typeString": "literal_string \"name\""
																},
																"value": "name"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
																	"typeString": "literal_string \"name\""
																}
															],
															"id": 2647,
															"name": "EmptyStringParameter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "4332:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																"typeString": "function (string memory) pure returns (error)"
															}
														},
														"id": 2649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4332:28:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2650,
													"nodeType": "RevertStatement",
													"src": "4325:35:13"
												}
											},
											{
												"expression": {
													"id": 2661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2652,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2624,
														"src": "4371:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2657,
																		"name": "_name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2624,
																		"src": "4403:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "2d4c50",
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4410:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d99d682fc356fa21b92bd2fb80417dfa6820fd52fa032cb0ed3383e56770a7d7",
																			"typeString": "literal_string \"-LP\""
																		},
																		"value": "-LP"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d99d682fc356fa21b92bd2fb80417dfa6820fd52fa032cb0ed3383e56770a7d7",
																			"typeString": "literal_string \"-LP\""
																		}
																	],
																	"expression": {
																		"id": 2655,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "4386:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4390:12:13",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "4386:16:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4386:30:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4379:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2653,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "4379:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4379:38:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4371:46:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 2662,
												"nodeType": "ExpressionStatement",
												"src": "4371:46:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2664,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2624,
															"src": "4441:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2665,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2624,
															"src": "4448:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2663,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "4428:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4428:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2667,
												"nodeType": "ExpressionStatement",
												"src": "4428:26:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2669,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4479:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4483:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4479:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2668,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "4464:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4464:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2672,
												"nodeType": "ExpressionStatement",
												"src": "4464:26:13"
											},
											{
												"expression": {
													"id": 2675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2673,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "4501:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2674,
														"name": "_tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "4510:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"src": "4501:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 2676,
												"nodeType": "ExpressionStatement",
												"src": "4501:16:13"
											},
											{
												"expression": {
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2677,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "4527:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2681,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "4554:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4561:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4554:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4538:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2678,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4542:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2679,
																"nodeType": "ArrayTypeName",
																"src": "4542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4538:30:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "4527:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 2685,
												"nodeType": "ExpressionStatement",
												"src": "4527:41:13"
											},
											{
												"expression": {
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2686,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2559,
														"src": "4579:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2687,
														"name": "_factoryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2622,
														"src": "4589:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4579:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2689,
												"nodeType": "ExpressionStatement",
												"src": "4579:25:13"
											},
											{
												"expression": {
													"id": 2693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2690,
														"name": "lastAccruedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2562,
														"src": "4614:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2691,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4630:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4636:9:13",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4630:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4614:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2694,
												"nodeType": "ExpressionStatement",
												"src": "4614:31:13"
											}
										]
									},
									"documentation": {
										"id": 2620,
										"nodeType": "StructuredDocumentation",
										"src": "3809:270:13",
										"text": "@notice Initializes the pair contract\n @dev Sets up the ERC20 token and initializes pair parameters\n @param _factoryAddress Factory contract address\n @param _name Name of the pair token\n @param _tokens Array of token addresses in the pair"
									},
									"functionSelector": "3a105cfb",
									"id": 2696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2630,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2629,
												"name": "initializer",
												"nameLocations": [
													"4217:11:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "4217:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4217:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "4093:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "_factoryAddress",
												"nameLocation": "4121:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "4113:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4113:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "4160:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "4146:19:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4146:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "4194:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "4175:26:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2625,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4175:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2626,
													"nodeType": "ArrayTypeName",
													"src": "4175:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4103:104:13"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4229:0:13"
									},
									"scope": 3587,
									"src": "4084:568:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2219
									],
									"body": {
										"id": 2750,
										"nodeType": "Block",
										"src": "5040:445:13",
										"statements": [
											{
												"assignments": [
													2703
												],
												"declarations": [
													{
														"constant": false,
														"id": 2703,
														"mutability": "mutable",
														"name": "ownerAddress",
														"nameLocation": "5058:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 2750,
														"src": "5050:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2702,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5050:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2706,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2704,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "5073:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5073:7:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5050:30:13"
											},
											{
												"assignments": [
													2708
												],
												"declarations": [
													{
														"constant": false,
														"id": 2708,
														"mutability": "mutable",
														"name": "tokensLength",
														"nameLocation": "5098:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 2750,
														"src": "5090:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5090:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2711,
												"initialValue": {
													"expression": {
														"id": 2709,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "5113:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5120:6:13",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5113:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5090:36:13"
											},
											{
												"body": {
													"id": 2748,
													"nodeType": "Block",
													"src": "5176:303:13",
													"statements": [
														{
															"assignments": [
																2720
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2720,
																	"mutability": "mutable",
																	"name": "token",
																	"nameLocation": "5198:5:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2748,
																	"src": "5190:13:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2719,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5190:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2724,
															"initialValue": {
																"baseExpression": {
																	"id": 2721,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "5206:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2723,
																"indexExpression": {
																	"id": 2722,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2713,
																	"src": "5213:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5206:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5190:25:13"
														},
														{
															"assignments": [
																2726
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2726,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "5264:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2748,
																	"src": "5256:15:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2725,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5256:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2730,
															"initialValue": {
																"baseExpression": {
																	"id": 2727,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "5274:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 2729,
																"indexExpression": {
																	"id": 2728,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2713,
																	"src": "5283:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5274:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5256:29:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2731,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "5305:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5315:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5305:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2743,
															"nodeType": "IfStatement",
															"src": "5301:136:13",
															"trueBody": {
																"id": 2742,
																"nodeType": "Block",
																"src": "5318:119:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2738,
																					"name": "ownerAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2703,
																					"src": "5374:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2739,
																					"name": "balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2726,
																					"src": "5388:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 2735,
																							"name": "token",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2720,
																							"src": "5354:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2734,
																						"name": "IERC20Upgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1157,
																						"src": "5336:17:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1157_$",
																							"typeString": "type(contract IERC20Upgradeable)"
																						}
																					},
																					"id": 2736,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5336:24:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 2737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5361:12:13",
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1226,
																				"src": "5336:37:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1157_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$1157_$",
																					"typeString": "function (contract IERC20Upgradeable,address,uint256)"
																				}
																			},
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5336:60:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2741,
																		"nodeType": "ExpressionStatement",
																		"src": "5336:60:13"
																	}
																]
															}
														},
														{
															"id": 2747,
															"nodeType": "UncheckedBlock",
															"src": "5451:18:13",
															"statements": [
																{
																	"expression": {
																		"id": 2745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "5463:3:13",
																		"subExpression": {
																			"id": 2744,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "5465:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2746,
																	"nodeType": "ExpressionStatement",
																	"src": "5463:3:13"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2716,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2713,
														"src": "5156:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2717,
														"name": "tokensLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "5160:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5156:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2749,
												"initializationExpression": {
													"assignments": [
														2713
													],
													"declarations": [
														{
															"constant": false,
															"id": 2713,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5149:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2749,
															"src": "5141:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2712,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5141:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2715,
													"initialValue": {
														"hexValue": "30",
														"id": 2714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5153:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5141:13:13"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "5136:343:13"
											}
										]
									},
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "4795:188:13",
										"text": "@notice Transfer Tokens To Owner \n @dev Transfers all tokens to the owner, typically called during basket rebalancing\n @notice This function is only callable by the owner"
									},
									"functionSelector": "a7c7fdeb",
									"id": 2751,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2700,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2699,
												"name": "onlyOwner",
												"nameLocations": [
													"5030:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5030:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5030:9:13"
										}
									],
									"name": "transferTokensToOwner",
									"nameLocation": "4997:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5018:2:13"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5040:0:13"
									},
									"scope": 3587,
									"src": "4988:497:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2225
									],
									"body": {
										"id": 2779,
										"nodeType": "Block",
										"src": "5775:162:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2760,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "5789:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 2761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5797:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5789:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5807:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5789:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2767,
												"nodeType": "IfStatement",
												"src": "5785:46:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2764,
															"name": "InvalidToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "5817:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5817:14:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2766,
													"nodeType": "RevertStatement",
													"src": "5810:21:13"
												}
											},
											{
												"expression": {
													"id": 2770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2768,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "5842:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2769,
														"name": "_tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "5851:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"src": "5842:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 2771,
												"nodeType": "ExpressionStatement",
												"src": "5842:16:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2772,
														"name": "_updateRebalanceReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "5868:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5868:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2774,
												"nodeType": "ExpressionStatement",
												"src": "5868:25:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2776,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "5922:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														],
														"id": 2775,
														"name": "TokensUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "5908:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory)"
														}
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5908:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2778,
												"nodeType": "EmitStatement",
												"src": "5903:27:13"
											}
										]
									},
									"documentation": {
										"id": 2752,
										"nodeType": "StructuredDocumentation",
										"src": "5491:210:13",
										"text": "@notice Updates the token list\n @dev Updates the tokens array and recalculates reserves\n @param _tokens New array of token addresses\n @notice This function is only callable by the owner"
									},
									"functionSelector": "de41691c",
									"id": 2780,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2758,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2757,
												"name": "onlyOwner",
												"nameLocations": [
													"5765:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5765:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5765:9:13"
										}
									],
									"name": "updateTokens",
									"nameLocation": "5715:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "5747:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "5728:26:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2753,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5728:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2754,
													"nodeType": "ArrayTypeName",
													"src": "5728:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5727:28:13"
									},
									"returnParameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5775:0:13"
									},
									"scope": 3587,
									"src": "5706:231:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2208
									],
									"body": {
										"id": 2905,
										"nodeType": "Block",
										"src": "6366:904:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2793,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2783,
														"src": "6380:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6395:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6387:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2794,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6387:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6387:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6380:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2802,
												"nodeType": "IfStatement",
												"src": "6376:48:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2799,
															"name": "InvalidRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "6406:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6406:18:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2801,
													"nodeType": "RevertStatement",
													"src": "6399:25:13"
												}
											},
											{
												"assignments": [
													2805
												],
												"declarations": [
													{
														"constant": false,
														"id": 2805,
														"mutability": "mutable",
														"name": "factoryInstance",
														"nameLocation": "6478:15:13",
														"nodeType": "VariableDeclaration",
														"scope": 2905,
														"src": "6469:24:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFactory_$2538",
															"typeString": "contract IFactory"
														},
														"typeName": {
															"id": 2804,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2803,
																"name": "IFactory",
																"nameLocations": [
																	"6469:8:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2538,
																"src": "6469:8:13"
															},
															"referencedDeclaration": 2538,
															"src": "6469:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$2538",
																"typeString": "contract IFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2808,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2806,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3462,
														"src": "6496:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IFactory_$2538_$",
															"typeString": "function () view returns (contract IFactory)"
														}
													},
													"id": 2807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6496:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFactory_$2538",
														"typeString": "contract IFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6469:37:13"
											},
											{
												"assignments": [
													2810
												],
												"declarations": [
													{
														"constant": false,
														"id": 2810,
														"mutability": "mutable",
														"name": "wethAddress",
														"nameLocation": "6524:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2905,
														"src": "6516:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2809,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6516:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2814,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2811,
															"name": "factoryInstance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2805,
															"src": "6538:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$2538",
																"typeString": "contract IFactory"
															}
														},
														"id": 2812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6554:4:13",
														"memberName": "weth",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2339,
														"src": "6538:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6538:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6516:44:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2815,
														"name": "distMgmtFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3067,
														"src": "6571:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6571:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2817,
												"nodeType": "ExpressionStatement",
												"src": "6571:13:13"
											},
											{
												"assignments": [
													2819
												],
												"declarations": [
													{
														"constant": false,
														"id": 2819,
														"mutability": "mutable",
														"name": "tokensLength",
														"nameLocation": "6602:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 2905,
														"src": "6594:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2818,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6594:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2822,
												"initialValue": {
													"expression": {
														"id": 2820,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "6617:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6624:6:13",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6617:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6594:36:13"
											},
											{
												"assignments": [
													2824
												],
												"declarations": [
													{
														"constant": false,
														"id": 2824,
														"mutability": "mutable",
														"name": "totalETH",
														"nameLocation": "6648:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2905,
														"src": "6640:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6640:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2825,
												"nodeType": "VariableDeclarationStatement",
												"src": "6640:16:13"
											},
											{
												"body": {
													"id": 2864,
													"nodeType": "Block",
													"src": "6707:281:13",
													"statements": [
														{
															"assignments": [
																2834
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2834,
																	"mutability": "mutable",
																	"name": "token",
																	"nameLocation": "6729:5:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2864,
																	"src": "6721:13:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2833,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6721:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2838,
															"initialValue": {
																"baseExpression": {
																	"id": 2835,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "6737:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2837,
																"indexExpression": {
																	"id": 2836,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2827,
																	"src": "6744:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6737:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6721:25:13"
														},
														{
															"assignments": [
																2843
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2843,
																	"mutability": "mutable",
																	"name": "path",
																	"nameLocation": "6804:4:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2864,
																	"src": "6787:21:13",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2841,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6787:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2842,
																		"nodeType": "ArrayTypeName",
																		"src": "6787:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2849,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2846,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "6835:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2847,
																		"name": "wethAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2810,
																		"src": "6842:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2844,
																		"name": "factoryInstance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2805,
																		"src": "6811:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IFactory_$2538",
																			"typeString": "contract IFactory"
																		}
																	},
																	"id": 2845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6827:7:13",
																	"memberName": "getPath",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2418,
																	"src": "6811:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$_t_address_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "function (address,address) pure external returns (address[] memory)"
																	}
																},
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6811:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6787:67:13"
														},
														{
															"expression": {
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2850,
																	"name": "totalETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2824,
																	"src": "6886:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2853,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2786,
																				"src": "6928:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 2855,
																			"indexExpression": {
																				"id": 2854,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2827,
																				"src": "6936:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6928:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2856,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2843,
																			"src": "6940:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		],
																		"expression": {
																			"id": 2851,
																			"name": "factoryInstance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "6898:15:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IFactory_$2538",
																				"typeString": "contract IFactory"
																			}
																		},
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6914:13:13",
																		"memberName": "getAmountsOut",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2408,
																		"src": "6898:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
																			"typeString": "function (uint256,address[] memory) view external returns (uint256)"
																		}
																	},
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6898:47:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6886:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2859,
															"nodeType": "ExpressionStatement",
															"src": "6886:59:13"
														},
														{
															"id": 2863,
															"nodeType": "UncheckedBlock",
															"src": "6960:18:13",
															"statements": [
																{
																	"expression": {
																		"id": 2861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "6972:3:13",
																		"subExpression": {
																			"id": 2860,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2827,
																			"src": "6974:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2862,
																	"nodeType": "ExpressionStatement",
																	"src": "6972:3:13"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2830,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2827,
														"src": "6687:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2831,
														"name": "tokensLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2819,
														"src": "6691:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6687:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2865,
												"initializationExpression": {
													"assignments": [
														2827
													],
													"declarations": [
														{
															"constant": false,
															"id": 2827,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6680:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2865,
															"src": "6672:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2826,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6672:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2829,
													"initialValue": {
														"hexValue": "30",
														"id": 2828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6684:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6672:13:13"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "6667:321:13"
											},
											{
												"expression": {
													"id": 2876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2866,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2791,
														"src": "6998:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2867,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "7010:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7010:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7010:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [
																{
																	"id": 2873,
																	"name": "totalETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2824,
																	"src": "7061:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2872,
																"name": "calculateShareLP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3100,
																"src": "7044:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 2874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7044:26:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "7010:60:13",
														"trueExpression": {
															"hexValue": "31303030",
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7031:10:13",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"value": "1000"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6998:72:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2877,
												"nodeType": "ExpressionStatement",
												"src": "6998:72:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2879,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2783,
															"src": "7086:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2880,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2791,
															"src": "7091:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2878,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "7080:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7080:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2882,
												"nodeType": "ExpressionStatement",
												"src": "7080:21:13"
											},
											{
												"body": {
													"id": 2903,
													"nodeType": "Block",
													"src": "7154:110:13",
													"statements": [
														{
															"expression": {
																"id": 2897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2891,
																		"name": "reserves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2573,
																		"src": "7168:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2893,
																	"indexExpression": {
																		"id": 2892,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2884,
																		"src": "7177:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7168:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2894,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2786,
																		"src": "7183:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 2896,
																	"indexExpression": {
																		"id": 2895,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2884,
																		"src": "7191:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7183:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7168:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2898,
															"nodeType": "ExpressionStatement",
															"src": "7168:25:13"
														},
														{
															"id": 2902,
															"nodeType": "UncheckedBlock",
															"src": "7208:46:13",
															"statements": [
																{
																	"expression": {
																		"id": 2900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "7236:3:13",
																		"subExpression": {
																			"id": 2899,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2884,
																			"src": "7238:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2901,
																	"nodeType": "ExpressionStatement",
																	"src": "7236:3:13"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2887,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2884,
														"src": "7132:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2888,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2786,
															"src": "7136:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7144:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7136:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7132:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2904,
												"initializationExpression": {
													"assignments": [
														2884
													],
													"declarations": [
														{
															"constant": false,
															"id": 2884,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7125:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2904,
															"src": "7117:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2883,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7117:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2886,
													"initialValue": {
														"hexValue": "30",
														"id": 2885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7129:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7117:13:13"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "7112:152:13"
											}
										]
									},
									"documentation": {
										"id": 2781,
										"nodeType": "StructuredDocumentation",
										"src": "5943:288:13",
										"text": "@notice Mints liquidity tokens\n @dev Calculates the liquidity amount based on token balances and mints LP tokens\n @param _to Address to mint tokens to\n @return liquidity Amount of liquidity tokens minted\n @notice This function is only callable by the owner"
									},
									"functionSelector": "de836ebd",
									"id": 2906,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2789,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2788,
												"name": "onlyOwner",
												"nameLocations": [
													"6316:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "6316:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6316:9:13"
										}
									],
									"name": "mint",
									"nameLocation": "6245:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6258:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "6250:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6250:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6282:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "6263:26:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2784,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6263:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2785,
													"nodeType": "ArrayTypeName",
													"src": "6263:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6249:41:13"
									},
									"returnParameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6351:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "6343:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:19:13"
									},
									"scope": 3587,
									"src": "6236:1034:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2216
									],
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "7677:776:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2917,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2909,
														"src": "7691:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7706:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7698:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7698:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7698:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7691:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2926,
												"nodeType": "IfStatement",
												"src": "7687:48:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2923,
															"name": "InvalidRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "7717:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7717:18:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2925,
													"nodeType": "RevertStatement",
													"src": "7710:25:13"
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2927,
														"name": "distMgmtFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3067,
														"src": "7746:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2929,
												"nodeType": "ExpressionStatement",
												"src": "7746:13:13"
											},
											{
												"assignments": [
													2931
												],
												"declarations": [
													{
														"constant": false,
														"id": 2931,
														"mutability": "mutable",
														"name": "_liquidity",
														"nameLocation": "7777:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 3009,
														"src": "7769:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2930,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7769:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2938,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2935,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7808:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BasketTokenStandardPair_$3587",
																		"typeString": "contract BasketTokenStandardPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BasketTokenStandardPair_$3587",
																		"typeString": "contract BasketTokenStandardPair"
																	}
																],
																"id": 2934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7800:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2933,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7800:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7800:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2932,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "7790:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7790:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7769:45:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2939,
														"name": "_liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2931,
														"src": "7828:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7842:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7828:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2945,
												"nodeType": "IfStatement",
												"src": "7824:51:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2942,
															"name": "InsufficientLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2608,
															"src": "7852:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7852:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2944,
													"nodeType": "RevertStatement",
													"src": "7845:30:13"
												}
											},
											{
												"expression": {
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2946,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2915,
														"src": "7886:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2948,
																"name": "_liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2931,
																"src": "7917:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2947,
															"name": "calculateShareTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3260,
															"src": "7896:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) view returns (uint256[] memory)"
															}
														},
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7896:32:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "7886:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2951,
												"nodeType": "ExpressionStatement",
												"src": "7886:42:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2955,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7952:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BasketTokenStandardPair_$3587",
																		"typeString": "contract BasketTokenStandardPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BasketTokenStandardPair_$3587",
																		"typeString": "contract BasketTokenStandardPair"
																	}
																],
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7944:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2953,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7944:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7944:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2957,
															"name": "_liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2931,
															"src": "7959:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2952,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "7938:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7938:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2959,
												"nodeType": "ExpressionStatement",
												"src": "7938:32:13"
											},
											{
												"assignments": [
													2961
												],
												"declarations": [
													{
														"constant": false,
														"id": 2961,
														"mutability": "mutable",
														"name": "tokensLength",
														"nameLocation": "7988:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 3009,
														"src": "7980:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2960,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7980:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2964,
												"initialValue": {
													"expression": {
														"id": 2962,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "8003:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8010:6:13",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "8003:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7980:36:13"
											},
											{
												"body": {
													"id": 3007,
													"nodeType": "Block",
													"src": "8067:380:13",
													"statements": [
														{
															"assignments": [
																2973
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2973,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "8089:6:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 3007,
																	"src": "8081:14:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2972,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8081:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2977,
															"initialValue": {
																"baseExpression": {
																	"id": 2974,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2915,
																	"src": "8098:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2976,
																"indexExpression": {
																	"id": 2975,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2966,
																	"src": "8106:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8098:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8081:27:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2978,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2973,
																	"src": "8126:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8135:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8126:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2996,
															"nodeType": "IfStatement",
															"src": "8122:192:13",
															"trueBody": {
																"id": 2995,
																"nodeType": "Block",
																"src": "8137:177:13",
																"statements": [
																	{
																		"assignments": [
																			2982
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2982,
																				"mutability": "mutable",
																				"name": "token",
																				"nameLocation": "8163:5:13",
																				"nodeType": "VariableDeclaration",
																				"scope": 2995,
																				"src": "8155:13:13",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 2981,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8155:7:13",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2986,
																		"initialValue": {
																			"baseExpression": {
																				"id": 2983,
																				"name": "tokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2569,
																				"src": "8171:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2985,
																			"indexExpression": {
																				"id": 2984,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2966,
																				"src": "8178:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8171:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8155:25:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2991,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2909,
																					"src": "8263:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2992,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2973,
																					"src": "8268:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 2988,
																							"name": "token",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2982,
																							"src": "8243:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2987,
																						"name": "IERC20Upgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1157,
																						"src": "8225:17:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1157_$",
																							"typeString": "type(contract IERC20Upgradeable)"
																						}
																					},
																					"id": 2989,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8225:24:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 2990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8250:12:13",
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1226,
																				"src": "8225:37:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1157_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$1157_$",
																					"typeString": "function (contract IERC20Upgradeable,address,uint256)"
																				}
																			},
																			"id": 2993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8225:50:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2994,
																		"nodeType": "ExpressionStatement",
																		"src": "8225:50:13"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 3001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2997,
																		"name": "reserves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2573,
																		"src": "8330:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2999,
																	"indexExpression": {
																		"id": 2998,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2966,
																		"src": "8339:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8330:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 3000,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2973,
																	"src": "8345:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8330:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3002,
															"nodeType": "ExpressionStatement",
															"src": "8330:21:13"
														},
														{
															"id": 3006,
															"nodeType": "UncheckedBlock",
															"src": "8391:46:13",
															"statements": [
																{
																	"expression": {
																		"id": 3004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "8419:3:13",
																		"subExpression": {
																			"id": 3003,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2966,
																			"src": "8421:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3005,
																	"nodeType": "ExpressionStatement",
																	"src": "8419:3:13"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2969,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2966,
														"src": "8047:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2970,
														"name": "tokensLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2961,
														"src": "8051:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8047:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3008,
												"initializationExpression": {
													"assignments": [
														2966
													],
													"declarations": [
														{
															"constant": false,
															"id": 2966,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8040:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3008,
															"src": "8032:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2965,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8032:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2968,
													"initialValue": {
														"hexValue": "30",
														"id": 2967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8044:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8032:13:13"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "8027:420:13"
											}
										]
									},
									"documentation": {
										"id": 2907,
										"nodeType": "StructuredDocumentation",
										"src": "7276:287:13",
										"text": "@notice Burns liquidity tokens\n @dev Burns LP tokens and transfers the corresponding tokens to the recipient\n @param _to Address to transfer tokens to\n @return amounts Array of token amounts transferred\n @notice This function is only callable by the owner"
									},
									"functionSelector": "89afcb44",
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2912,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2911,
												"name": "onlyOwner",
												"nameLocations": [
													"7620:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7620:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7620:9:13"
										}
									],
									"name": "burn",
									"nameLocation": "7577:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7590:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "7582:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7582:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7581:13:13"
									},
									"returnParameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7664:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "7647:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2913,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7647:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2914,
													"nodeType": "ArrayTypeName",
													"src": "7647:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7646:26:13"
									},
									"scope": 3587,
									"src": "7568:885:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2230
									],
									"body": {
										"id": 3022,
										"nodeType": "Block",
										"src": "8728:48:13",
										"statements": [
											{
												"expression": {
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3018,
														"name": "reentrancyGuardEntered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2565,
														"src": "8738:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3019,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3013,
														"src": "8763:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8738:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3021,
												"nodeType": "ExpressionStatement",
												"src": "8738:31:13"
											}
										]
									},
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "8459:198:13",
										"text": "@notice Sets or resets the reentrancy guard flag\n @param _state New state for the reentrancy guard flag for read-only functions\n @notice This function is only callable by the owner"
									},
									"functionSelector": "ba6ba385",
									"id": 3023,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3016,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3015,
												"name": "onlyOwner",
												"nameLocations": [
													"8718:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "8718:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8718:9:13"
										}
									],
									"name": "setReentrancyGuardStatus",
									"nameLocation": "8671:24:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "8701:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "8696:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8696:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8695:13:13"
									},
									"returnParameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8728:0:13"
									},
									"scope": 3587,
									"src": "8662:114:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2233
									],
									"body": {
										"id": 3066,
										"nodeType": "Block",
										"src": "9161:368:13",
										"statements": [
											{
												"assignments": [
													3028,
													3030,
													3032
												],
												"declarations": [
													{
														"constant": false,
														"id": 3028,
														"mutability": "mutable",
														"name": "months",
														"nameLocation": "9180:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3066,
														"src": "9172:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9172:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3030,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "9196:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3066,
														"src": "9188:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3029,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9188:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3032,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "9212:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 3066,
														"src": "9204:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3031,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9204:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3035,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3033,
														"name": "calFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "9225:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256,uint256)"
														}
													},
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9225:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:62:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3036,
														"name": "months",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3028,
														"src": "9246:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9256:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9246:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3040,
												"nodeType": "IfStatement",
												"src": "9243:23:13",
												"trueBody": {
													"functionReturnParameters": 3026,
													"id": 3039,
													"nodeType": "Return",
													"src": "9259:7:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3041,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3032,
														"src": "9326:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9338:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9326:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3050,
												"nodeType": "IfStatement",
												"src": "9322:44:13",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3045,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "9347:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 3046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9347:7:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3047,
																"name": "feeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3032,
																"src": "9356:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3044,
															"name": "_mint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "9341:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,uint256)"
															}
														},
														"id": 3048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9341:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3049,
													"nodeType": "ExpressionStatement",
													"src": "9341:25:13"
												}
											},
											{
												"expression": {
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3051,
														"name": "lastAccruedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2562,
														"src": "9412:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3052,
															"name": "months",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3028,
															"src": "9429:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3330",
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9438:7:13",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"src": "9429:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9412:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3056,
												"nodeType": "ExpressionStatement",
												"src": "9412:33:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3058,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "9472:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9472:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3060,
															"name": "months",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3028,
															"src": "9481:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3061,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3030,
															"src": "9489:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3062,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3032,
															"src": "9497:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3063,
															"name": "lastAccruedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2562,
															"src": "9508:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3057,
														"name": "feeAccrued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2596,
														"src": "9461:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 3064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3065,
												"nodeType": "EmitStatement",
												"src": "9456:66:13"
											}
										]
									},
									"documentation": {
										"id": 3024,
										"nodeType": "StructuredDocumentation",
										"src": "8917:209:13",
										"text": "@notice Distributes the management fee\n @dev Mints LP tokens for the BTS manager and updates the accrual time. It can be called by internal functions, external cron jobs, or manually by any account."
									},
									"functionSelector": "b4b93c8c",
									"id": 3067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distMgmtFee",
									"nameLocation": "9140:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9151:2:13"
									},
									"returnParameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9161:0:13"
									},
									"scope": 3587,
									"src": "9131:398:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3099,
										"nodeType": "Block",
										"src": "10052:172:13",
										"statements": [
											{
												"assignments": [
													3078
												],
												"declarations": [
													{
														"constant": false,
														"id": 3078,
														"mutability": "mutable",
														"name": "reservedETH",
														"nameLocation": "10070:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 3099,
														"src": "10062:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3077,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10062:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3081,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3079,
														"name": "_totalReservedETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3586,
														"src": "10084:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10084:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10062:41:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3082,
														"name": "reservedETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3078,
														"src": "10117:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10132:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10117:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3087,
												"nodeType": "IfStatement",
												"src": "10113:39:13",
												"trueBody": {
													"expression": {
														"hexValue": "31303030",
														"id": 3085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10142:10:13",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000"
														},
														"value": "1000"
													},
													"functionReturnParameters": 3076,
													"id": 3086,
													"nodeType": "Return",
													"src": "10135:17:13"
												}
											},
											{
												"expression": {
													"id": 3097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3088,
														"name": "amountLP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3075,
														"src": "10162:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3089,
																				"name": "_amountETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3070,
																				"src": "10175:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 3090,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "10188:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 3091,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10188:13:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10175:26:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3093,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10174:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3094,
																	"name": "reservedETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3078,
																	"src": "10205:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10174:42:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3096,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10173:44:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10162:55:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3098,
												"nodeType": "ExpressionStatement",
												"src": "10162:55:13"
											}
										]
									},
									"documentation": {
										"id": 3068,
										"nodeType": "StructuredDocumentation",
										"src": "9685:236:13",
										"text": "@notice Calculates the share of LP tokens\n @dev Calculates the amount of LP tokens for a specific amount of ETH value\n @param _amountETH Amount of ETH to calculate share for\n @return amountLP Amount of LP tokens"
									},
									"functionSelector": "e54ef9a0",
									"id": 3100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3073,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3072,
												"name": "nonReentrantReadOnly",
												"nameLocations": [
													"9996:20:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2583,
												"src": "9996:20:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9996:20:13"
										}
									],
									"name": "calculateShareLP",
									"nameLocation": "9935:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "_amountETH",
												"nameLocation": "9960:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "9952:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9952:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9951:20:13"
									},
									"returnParameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "amountLP",
												"nameLocation": "10038:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "10030:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10030:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10029:18:13"
									},
									"scope": 3587,
									"src": "9926:298:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2271
									],
									"body": {
										"id": 3196,
										"nodeType": "Block",
										"src": "10597:824:13",
										"statements": [
											{
												"assignments": [
													3111
												],
												"declarations": [
													{
														"constant": false,
														"id": 3111,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "10615:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3196,
														"src": "10607:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10607:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3114,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3112,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "10624:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10624:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10607:30:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3115,
														"name": "supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3111,
														"src": "10676:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10686:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10676:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3120,
												"nodeType": "IfStatement",
												"src": "10672:25:13",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 3118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10696:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 3109,
													"id": 3119,
													"nodeType": "Return",
													"src": "10689:8:13"
												}
											},
											{
												"assignments": [
													3123
												],
												"declarations": [
													{
														"constant": false,
														"id": 3123,
														"mutability": "mutable",
														"name": "factoryInstance",
														"nameLocation": "10725:15:13",
														"nodeType": "VariableDeclaration",
														"scope": 3196,
														"src": "10716:24:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFactory_$2538",
															"typeString": "contract IFactory"
														},
														"typeName": {
															"id": 3122,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3121,
																"name": "IFactory",
																"nameLocations": [
																	"10716:8:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2538,
																"src": "10716:8:13"
															},
															"referencedDeclaration": 2538,
															"src": "10716:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$2538",
																"typeString": "contract IFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3126,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3124,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3462,
														"src": "10743:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IFactory_$2538_$",
															"typeString": "function () view returns (contract IFactory)"
														}
													},
													"id": 3125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10743:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFactory_$2538",
														"typeString": "contract IFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10716:37:13"
											},
											{
												"assignments": [
													3128
												],
												"declarations": [
													{
														"constant": false,
														"id": 3128,
														"mutability": "mutable",
														"name": "reservesLength",
														"nameLocation": "10771:14:13",
														"nodeType": "VariableDeclaration",
														"scope": 3196,
														"src": "10763:22:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10763:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3131,
												"initialValue": {
													"expression": {
														"id": 3129,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "10788:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 3130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10797:6:13",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "10788:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10763:40:13"
											},
											{
												"assignments": [
													3133
												],
												"declarations": [
													{
														"constant": false,
														"id": 3133,
														"mutability": "mutable",
														"name": "wethAddress",
														"nameLocation": "10821:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 3196,
														"src": "10813:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10813:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3137,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3134,
															"name": "factoryInstance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3123,
															"src": "10835:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$2538",
																"typeString": "contract IFactory"
															}
														},
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10851:4:13",
														"memberName": "weth",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2339,
														"src": "10835:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10835:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10813:44:13"
											},
											{
												"body": {
													"id": 3194,
													"nodeType": "Block",
													"src": "10918:497:13",
													"statements": [
														{
															"assignments": [
																3146
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3146,
																	"mutability": "mutable",
																	"name": "token",
																	"nameLocation": "10940:5:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 3194,
																	"src": "10932:13:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 3145,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10932:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3150,
															"initialValue": {
																"baseExpression": {
																	"id": 3147,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "10948:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 3149,
																"indexExpression": {
																	"id": 3148,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3139,
																	"src": "10955:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10948:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10932:25:13"
														},
														{
															"assignments": [
																3152
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3152,
																	"mutability": "mutable",
																	"name": "tokenBalance",
																	"nameLocation": "10998:12:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 3194,
																	"src": "10990:20:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3151,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10990:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3156,
															"initialValue": {
																"baseExpression": {
																	"id": 3153,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "11013:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 3155,
																"indexExpression": {
																	"id": 3154,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3139,
																	"src": "11022:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11013:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10990:34:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3157,
																	"name": "tokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "11068:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11083:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11068:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3189,
															"nodeType": "IfStatement",
															"src": "11064:282:13",
															"trueBody": {
																"id": 3188,
																"nodeType": "Block",
																"src": "11086:260:13",
																"statements": [
																	{
																		"assignments": [
																			3164
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3164,
																				"mutability": "mutable",
																				"name": "path",
																				"nameLocation": "11121:4:13",
																				"nodeType": "VariableDeclaration",
																				"scope": 3188,
																				"src": "11104:21:13",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 3162,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "11104:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 3163,
																					"nodeType": "ArrayTypeName",
																					"src": "11104:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[]"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3170,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 3167,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3146,
																					"src": "11152:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3168,
																					"name": "wethAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3133,
																					"src": "11159:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 3165,
																					"name": "factoryInstance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3123,
																					"src": "11128:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IFactory_$2538",
																						"typeString": "contract IFactory"
																					}
																				},
																				"id": 3166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11144:7:13",
																				"memberName": "getPath",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2418,
																				"src": "11128:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_pure$_t_address_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address,address) pure external returns (address[] memory)"
																				}
																			},
																			"id": 3169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11128:43:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11104:67:13"
																	},
																	{
																		"assignments": [
																			3172
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3172,
																				"mutability": "mutable",
																				"name": "share",
																				"nameLocation": "11215:5:13",
																				"nodeType": "VariableDeclaration",
																				"scope": 3188,
																				"src": "11207:13:13",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3171,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11207:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3179,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3175,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3173,
																							"name": "_amountLP",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3103,
																							"src": "11224:9:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 3174,
																							"name": "tokenBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3152,
																							"src": "11236:12:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11224:24:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3176,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "11223:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3177,
																				"name": "supply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3111,
																				"src": "11252:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11223:35:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11207:51:13"
																	},
																	{
																		"expression": {
																			"id": 3186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3180,
																				"name": "amountETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3108,
																				"src": "11276:9:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 3183,
																						"name": "share",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3172,
																						"src": "11319:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 3184,
																						"name": "path",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3164,
																						"src": "11326:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					],
																					"expression": {
																						"id": 3181,
																						"name": "factoryInstance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3123,
																						"src": "11289:15:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IFactory_$2538",
																							"typeString": "contract IFactory"
																						}
																					},
																					"id": 3182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11305:13:13",
																					"memberName": "getAmountsOut",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2408,
																					"src": "11289:29:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
																						"typeString": "function (uint256,address[] memory) view external returns (uint256)"
																					}
																				},
																				"id": 3185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11289:42:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11276:55:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3187,
																		"nodeType": "ExpressionStatement",
																		"src": "11276:55:13"
																	}
																]
															}
														},
														{
															"id": 3193,
															"nodeType": "UncheckedBlock",
															"src": "11359:46:13",
															"statements": [
																{
																	"expression": {
																		"id": 3191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "11387:3:13",
																		"subExpression": {
																			"id": 3190,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "11389:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3192,
																	"nodeType": "ExpressionStatement",
																	"src": "11387:3:13"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3142,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "10896:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3143,
														"name": "reservesLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3128,
														"src": "10900:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10896:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3195,
												"initializationExpression": {
													"assignments": [
														3139
													],
													"declarations": [
														{
															"constant": false,
															"id": 3139,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10889:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3195,
															"src": "10881:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3138,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10881:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3141,
													"initialValue": {
														"hexValue": "30",
														"id": 3140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10893:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10881:13:13"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "10876:539:13"
											}
										]
									},
									"documentation": {
										"id": 3101,
										"nodeType": "StructuredDocumentation",
										"src": "10234:231:13",
										"text": "@notice Calculates the share of ETH\n @dev Calculates the equivalent ETH value for a specific amount of LP tokens\n @param _amountLP Amount of LP tokens to calculate share for\n @return amountETH Amount of ETH"
									},
									"functionSelector": "9257fa07",
									"id": 3197,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3105,
												"name": "nonReentrantReadOnly",
												"nameLocations": [
													"10540:20:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2583,
												"src": "10540:20:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10540:20:13"
										}
									],
									"name": "calculateShareETH",
									"nameLocation": "10479:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "_amountLP",
												"nameLocation": "10505:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 3197,
												"src": "10497:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10497:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10496:19:13"
									},
									"returnParameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "10582:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 3197,
												"src": "10574:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10574:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10573:19:13"
									},
									"scope": 3587,
									"src": "10470:951:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2279
									],
									"body": {
										"id": 3259,
										"nodeType": "Block",
										"src": "11863:420:13",
										"statements": [
											{
												"assignments": [
													3209
												],
												"declarations": [
													{
														"constant": false,
														"id": 3209,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "11881:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3259,
														"src": "11873:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11873:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3212,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3210,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "11890:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11890:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11873:30:13"
											},
											{
												"expression": {
													"id": 3220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3213,
														"name": "amountTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3206,
														"src": "11938:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3217,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "11967:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 3218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11974:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11967:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "11953:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 3214,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11957:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3215,
																"nodeType": "ArrayTypeName",
																"src": "11957:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 3219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11953:28:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "11938:43:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 3221,
												"nodeType": "ExpressionStatement",
												"src": "11938:43:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3222,
														"name": "supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3209,
														"src": "11995:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12005:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11995:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3227,
												"nodeType": "IfStatement",
												"src": "11991:36:13",
												"trueBody": {
													"expression": {
														"id": 3225,
														"name": "amountTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3206,
														"src": "12015:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"functionReturnParameters": 3207,
													"id": 3226,
													"nodeType": "Return",
													"src": "12008:19:13"
												}
											},
											{
												"body": {
													"id": 3257,
													"nodeType": "Block",
													"src": "12089:188:13",
													"statements": [
														{
															"assignments": [
																3237
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3237,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "12111:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 3257,
																	"src": "12103:15:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3236,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12103:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3241,
															"initialValue": {
																"baseExpression": {
																	"id": 3238,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "12121:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 3240,
																"indexExpression": {
																	"id": 3239,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3229,
																	"src": "12130:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12121:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12103:29:13"
														},
														{
															"expression": {
																"id": 3251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3242,
																		"name": "amountTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3206,
																		"src": "12146:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3244,
																	"indexExpression": {
																		"id": 3243,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3229,
																		"src": "12159:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12146:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3245,
																					"name": "_amountLP",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3200,
																					"src": "12165:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3246,
																					"name": "balance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3237,
																					"src": "12177:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12165:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 3248,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "12164:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3249,
																		"name": "supply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3209,
																		"src": "12188:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12164:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12146:48:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3252,
															"nodeType": "ExpressionStatement",
															"src": "12146:48:13"
														},
														{
															"id": 3256,
															"nodeType": "UncheckedBlock",
															"src": "12221:46:13",
															"statements": [
																{
																	"expression": {
																		"id": 3254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "12249:3:13",
																		"subExpression": {
																			"id": 3253,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3229,
																			"src": "12251:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3255,
																	"nodeType": "ExpressionStatement",
																	"src": "12249:3:13"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3232,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3229,
														"src": "12066:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3233,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2573,
															"src": "12070:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12079:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12070:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12066:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3258,
												"initializationExpression": {
													"assignments": [
														3229
													],
													"declarations": [
														{
															"constant": false,
															"id": 3229,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12059:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3258,
															"src": "12051:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3228,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12051:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3231,
													"initialValue": {
														"hexValue": "30",
														"id": 3230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12063:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12051:13:13"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "12046:231:13"
											}
										]
									},
									"documentation": {
										"id": 3198,
										"nodeType": "StructuredDocumentation",
										"src": "11431:285:13",
										"text": "@notice Calculates the share of tokens\n @dev Calculates the token amounts that correspond to a specific amount of LP tokens\n @param _amountLP Amount of LP tokens to calculate share for\n @return amountTokens Array of token amounts corresponding to the LP tokens"
									},
									"functionSelector": "d410ad7d",
									"id": 3260,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3202,
												"name": "nonReentrantReadOnly",
												"nameLocations": [
													"11794:20:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2583,
												"src": "11794:20:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11794:20:13"
										}
									],
									"name": "calculateShareTokens",
									"nameLocation": "11730:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3200,
												"mutability": "mutable",
												"name": "_amountLP",
												"nameLocation": "11759:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "11751:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11750:19:13"
									},
									"returnParameters": {
										"id": 3207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3206,
												"mutability": "mutable",
												"name": "amountTokens",
												"nameLocation": "11845:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "11828:29:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3204,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11828:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3205,
													"nodeType": "ArrayTypeName",
													"src": "11828:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11827:31:13"
									},
									"scope": 3587,
									"src": "11721:562:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2291
									],
									"body": {
										"id": 3328,
										"nodeType": "Block",
										"src": "12834:481:13",
										"statements": [
											{
												"assignments": [
													3276
												],
												"declarations": [
													{
														"constant": false,
														"id": 3276,
														"mutability": "mutable",
														"name": "tokensLength",
														"nameLocation": "12856:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 3328,
														"src": "12848:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12848:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3279,
												"initialValue": {
													"expression": {
														"id": 3277,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "12871:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 3278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12878:6:13",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "12871:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12848:36:13"
											},
											{
												"assignments": [
													3284
												],
												"declarations": [
													{
														"constant": false,
														"id": 3284,
														"mutability": "mutable",
														"name": "_tokenBal",
														"nameLocation": "12915:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 3328,
														"src": "12898:26:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3282,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12898:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3283,
															"nodeType": "ArrayTypeName",
															"src": "12898:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3290,
												"initialValue": {
													"arguments": [
														{
															"id": 3288,
															"name": "tokensLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3276,
															"src": "12941:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "12927:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12931:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3286,
															"nodeType": "ArrayTypeName",
															"src": "12931:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 3289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12927:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12898:56:13"
											},
											{
												"body": {
													"id": 3310,
													"nodeType": "Block",
													"src": "13021:132:13",
													"statements": [
														{
															"expression": {
																"id": 3304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3298,
																		"name": "_tokenBal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3284,
																		"src": "13039:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 3300,
																	"indexExpression": {
																		"id": 3299,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3292,
																		"src": "13049:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13039:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3301,
																		"name": "reserves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2573,
																		"src": "13054:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 3303,
																	"indexExpression": {
																		"id": 3302,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3292,
																		"src": "13063:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13054:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13039:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3305,
															"nodeType": "ExpressionStatement",
															"src": "13039:26:13"
														},
														{
															"id": 3309,
															"nodeType": "UncheckedBlock",
															"src": "13083:56:13",
															"statements": [
																{
																	"expression": {
																		"id": 3307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "13116:3:13",
																		"subExpression": {
																			"id": 3306,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3292,
																			"src": "13118:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3308,
																	"nodeType": "ExpressionStatement",
																	"src": "13116:3:13"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3295,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3292,
														"src": "13001:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3296,
														"name": "tokensLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3276,
														"src": "13005:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13001:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3311,
												"initializationExpression": {
													"assignments": [
														3292
													],
													"declarations": [
														{
															"constant": false,
															"id": 3292,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12994:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3311,
															"src": "12986:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3291,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12986:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3294,
													"initialValue": {
														"hexValue": "30",
														"id": 3293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12998:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12986:13:13"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "12981:172:13"
											},
											{
												"assignments": [
													3313
												],
												"declarations": [
													{
														"constant": false,
														"id": 3313,
														"mutability": "mutable",
														"name": "_supply",
														"nameLocation": "13187:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 3328,
														"src": "13179:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13179:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3316,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3314,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "13197:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13197:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13179:31:13"
											},
											{
												"assignments": [
													3318
												],
												"declarations": [
													{
														"constant": false,
														"id": 3318,
														"mutability": "mutable",
														"name": "_userLP",
														"nameLocation": "13232:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 3328,
														"src": "13224:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13224:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3322,
												"initialValue": {
													"arguments": [
														{
															"id": 3320,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3263,
															"src": "13252:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3319,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "13242:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13242:16:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13224:34:13"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3323,
															"name": "_tokenBal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3284,
															"src": "13280:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3324,
															"name": "_supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3313,
															"src": "13291:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3325,
															"name": "_userLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3318,
															"src": "13300:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3326,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13279:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256[] memory,uint256,uint256)"
													}
												},
												"functionReturnParameters": 3274,
												"id": 3327,
												"nodeType": "Return",
												"src": "13272:36:13"
											}
										]
									},
									"documentation": {
										"id": 3261,
										"nodeType": "StructuredDocumentation",
										"src": "12293:349:13",
										"text": "@notice Gets the token and user balances\n @dev Returns the token balances in the contract and the user's LP token balance\n @param _user Address to get user balance for\n @return _tokenBal Array of token balances in the contract\n @return _supply Total supply of LP tokens\n @return _userLP User's LP token balance"
									},
									"functionSelector": "a131d436",
									"id": 3329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3265,
												"name": "nonReentrantReadOnly",
												"nameLocations": [
													"12714:20:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2583,
												"src": "12714:20:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12714:20:13"
										}
									],
									"name": "getTokenAndUserBal",
									"nameLocation": "12656:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "12683:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "12675:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12675:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12674:15:13"
									},
									"returnParameters": {
										"id": 3274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "12757:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3267,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12757:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3268,
													"nodeType": "ArrayTypeName",
													"src": "12757:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "12787:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12787:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "12808:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12747:78:13"
									},
									"scope": 3587,
									"src": "12647:668:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3376,
										"nodeType": "Block",
										"src": "13718:227:13",
										"statements": [
											{
												"expression": {
													"id": 3347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3339,
														"name": "months",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3333,
														"src": "13728:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 3340,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "13738:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 3341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13744:9:13",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "13738:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 3342,
																		"name": "lastAccruedAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2562,
																		"src": "13756:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13738:31:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3344,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13737:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3330",
															"id": 3345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13772:7:13",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"src": "13737:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13728:51:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3348,
												"nodeType": "ExpressionStatement",
												"src": "13728:51:13"
											},
											{
												"expression": {
													"id": 3352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3349,
														"name": "supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3335,
														"src": "13789:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3350,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "13798:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 3351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13798:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13789:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3353,
												"nodeType": "ExpressionStatement",
												"src": "13789:22:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3354,
															"name": "months",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3333,
															"src": "13824:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 3355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13834:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "13824:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3357,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3335,
															"src": "13839:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 3358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13849:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "13839:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13824:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3366,
												"nodeType": "IfStatement",
												"src": "13821:57:13",
												"trueBody": {
													"expression": {
														"components": [
															{
																"id": 3361,
																"name": "months",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3333,
																"src": "13860:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3362,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3335,
																"src": "13868:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 3363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13876:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 3364,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13859:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_rational_0_by_1_$",
															"typeString": "tuple(uint256,uint256,int_const 0)"
														}
													},
													"functionReturnParameters": 3338,
													"id": 3365,
													"nodeType": "Return",
													"src": "13852:26:13"
												}
											},
											{
												"expression": {
													"id": 3374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3367,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3337,
														"src": "13888:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3371,
																"name": "months",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3333,
																"src": "13923:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3372,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3335,
																"src": "13931:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3368,
																	"name": "_factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3462,
																	"src": "13901:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IFactory_$2538_$",
																		"typeString": "function () view returns (contract IFactory)"
																	}
																},
																"id": 3369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13901:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFactory_$2538",
																	"typeString": "contract IFactory"
																}
															},
															"id": 3370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13912:10:13",
															"memberName": "calMgmtFee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2398,
															"src": "13901:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) view external returns (uint256)"
															}
														},
														"id": 3373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13901:37:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13888:50:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3375,
												"nodeType": "ExpressionStatement",
												"src": "13888:50:13"
											}
										]
									},
									"documentation": {
										"id": 3330,
										"nodeType": "StructuredDocumentation",
										"src": "13325:298:13",
										"text": "@notice Calculates the management fee\n @dev Calculates the management fee based on the time elapsed since last accrual\n @return months Number of months since last accrual\n @return supply Current supply of LP tokens\n @return feeAmount Amount of LP tokens to be minted"
									},
									"functionSelector": "55917ebe",
									"id": 3377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calFee",
									"nameLocation": "13637:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13643:2:13"
									},
									"returnParameters": {
										"id": 3338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "months",
												"nameLocation": "13675:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "13667:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13667:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3335,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "13691:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "13683:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3337,
												"mutability": "mutable",
												"name": "feeAmount",
												"nameLocation": "13707:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "13699:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13699:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13666:51:13"
									},
									"scope": 3587,
									"src": "13628:317:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2240
									],
									"body": {
										"id": 3391,
										"nodeType": "Block",
										"src": "14222:38:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3387,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "14239:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 3389,
													"indexExpression": {
														"id": 3388,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3380,
														"src": "14246:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14239:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3386,
												"id": 3390,
												"nodeType": "Return",
												"src": "14232:21:13"
											}
										]
									},
									"documentation": {
										"id": 3378,
										"nodeType": "StructuredDocumentation",
										"src": "13951:136:13",
										"text": "@notice Returns the token address in the basket\n @param _index Index of the token in the basket\n @return Token address"
									},
									"functionSelector": "67ccdf38",
									"id": 3392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3382,
												"name": "nonReentrantReadOnly",
												"nameLocations": [
													"14171:20:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2583,
												"src": "14171:20:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "14171:20:13"
										}
									],
									"name": "getTokenAddress",
									"nameLocation": "14101:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "14125:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "14117:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14117:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14116:16:13"
									},
									"returnParameters": {
										"id": 3386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "14209:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14209:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14208:9:13"
									},
									"scope": 3587,
									"src": "14092:168:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2247
									],
									"body": {
										"id": 3406,
										"nodeType": "Block",
										"src": "14537:40:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3402,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "14554:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 3404,
													"indexExpression": {
														"id": 3403,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3395,
														"src": "14563:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14554:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3401,
												"id": 3405,
												"nodeType": "Return",
												"src": "14547:23:13"
											}
										]
									},
									"documentation": {
										"id": 3393,
										"nodeType": "StructuredDocumentation",
										"src": "14266:136:13",
										"text": "@notice Returns the token reserve in the basket\n @param _index Index of the token in the basket\n @return Token reserve"
									},
									"functionSelector": "8e73f1b4",
									"id": 3407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3398,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3397,
												"name": "nonReentrantReadOnly",
												"nameLocations": [
													"14486:20:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2583,
												"src": "14486:20:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "14486:20:13"
										}
									],
									"name": "getTokenReserve",
									"nameLocation": "14416:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3395,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "14440:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3407,
												"src": "14432:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14432:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14431:16:13"
									},
									"returnParameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3407,
												"src": "14524:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14524:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14523:9:13"
									},
									"scope": 3587,
									"src": "14407:170:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2253
									],
									"body": {
										"id": 3418,
										"nodeType": "Block",
										"src": "14820:30:13",
										"statements": [
											{
												"expression": {
													"id": 3416,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2569,
													"src": "14837:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 3415,
												"id": 3417,
												"nodeType": "Return",
												"src": "14830:13:13"
											}
										]
									},
									"documentation": {
										"id": 3408,
										"nodeType": "StructuredDocumentation",
										"src": "14587:136:13",
										"text": "@notice Gets the token list\n @dev Returns the array of token addresses in the basket\n @return Array of token addresses"
									},
									"functionSelector": "273cbaa0",
									"id": 3419,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3411,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3410,
												"name": "nonReentrantReadOnly",
												"nameLocations": [
													"14764:20:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2583,
												"src": "14764:20:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "14764:20:13"
										}
									],
									"name": "getTokenList",
									"nameLocation": "14737:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14749:2:13"
									},
									"returnParameters": {
										"id": 3415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3419,
												"src": "14802:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3412,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14802:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3413,
													"nodeType": "ArrayTypeName",
													"src": "14802:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14801:18:13"
									},
									"scope": 3587,
									"src": "14728:122:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2259
									],
									"body": {
										"id": 3430,
										"nodeType": "Block",
										"src": "15095:32:13",
										"statements": [
											{
												"expression": {
													"id": 3428,
													"name": "reserves",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2573,
													"src": "15112:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 3427,
												"id": 3429,
												"nodeType": "Return",
												"src": "15105:15:13"
											}
										]
									},
									"documentation": {
										"id": 3420,
										"nodeType": "StructuredDocumentation",
										"src": "14856:138:13",
										"text": "@notice Gets the token reserves\n @dev Returns the array of token reserves in the basket\n @return Array of token reserves"
									},
									"functionSelector": "ec5975c6",
									"id": 3431,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3423,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3422,
												"name": "nonReentrantReadOnly",
												"nameLocations": [
													"15039:20:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2583,
												"src": "15039:20:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15039:20:13"
										}
									],
									"name": "getTokensReserve",
									"nameLocation": "15008:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15024:2:13"
									},
									"returnParameters": {
										"id": 3427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "15077:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3424,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15077:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3425,
													"nodeType": "ArrayTypeName",
													"src": "15077:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15076:18:13"
									},
									"scope": 3587,
									"src": "14999:128:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2264
									],
									"body": {
										"id": 3449,
										"nodeType": "Block",
										"src": "15356:99:13",
										"statements": [
											{
												"assignments": [
													null,
													null,
													3438
												],
												"declarations": [
													null,
													null,
													{
														"constant": false,
														"id": 3438,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "15380:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 3449,
														"src": "15372:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15372:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3441,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3439,
														"name": "calFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "15393:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256,uint256)"
														}
													},
													"id": 3440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15393:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15367:34:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3442,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3438,
														"src": "15418:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3444,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "15440:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 3445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15440:7:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3443,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "15430:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 3446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15430:18:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15418:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3436,
												"id": 3448,
												"nodeType": "Return",
												"src": "15411:37:13"
											}
										]
									},
									"documentation": {
										"id": 3432,
										"nodeType": "StructuredDocumentation",
										"src": "15133:162:13",
										"text": "@notice Gets the total management fee\n @dev Returns the fee by calculating new fee and adding existing fee balance\n @return Total management fee"
									},
									"functionSelector": "090318fb",
									"id": 3450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalMgmtFee",
									"nameLocation": "15309:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15324:2:13"
									},
									"returnParameters": {
										"id": 3436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3450,
												"src": "15350:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15350:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15349:6:13"
									},
									"scope": 3587,
									"src": "15300:155:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3461,
										"nodeType": "Block",
										"src": "15876:41:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3458,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2559,
															"src": "15902:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3457,
														"name": "IFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2538,
														"src": "15893:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IFactory_$2538_$",
															"typeString": "type(contract IFactory)"
														}
													},
													"id": 3459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15893:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFactory_$2538",
														"typeString": "contract IFactory"
													}
												},
												"functionReturnParameters": 3456,
												"id": 3460,
												"nodeType": "Return",
												"src": "15886:24:13"
											}
										]
									},
									"documentation": {
										"id": 3451,
										"nodeType": "StructuredDocumentation",
										"src": "15597:222:13",
										"text": "@notice Returns the factory instance casted to IFactory interface\n @dev Used to avoid repeated casting of the factory address in loops and functions\n @return factoryInstance The factory interface instance"
									},
									"id": 3462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_factory",
									"nameLocation": "15833:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15841:2:13"
									},
									"returnParameters": {
										"id": 3456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3462,
												"src": "15866:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFactory_$2538",
													"typeString": "contract IFactory"
												},
												"typeName": {
													"id": 3454,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3453,
														"name": "IFactory",
														"nameLocations": [
															"15866:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2538,
														"src": "15866:8:13"
													},
													"referencedDeclaration": 2538,
													"src": "15866:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFactory_$2538",
														"typeString": "contract IFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15865:10:13"
									},
									"scope": 3587,
									"src": "15824:93:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3512,
										"nodeType": "Block",
										"src": "16102:399:13",
										"statements": [
											{
												"assignments": [
													3467
												],
												"declarations": [
													{
														"constant": false,
														"id": 3467,
														"mutability": "mutable",
														"name": "tokensLength",
														"nameLocation": "16121:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 3512,
														"src": "16113:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16113:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3470,
												"initialValue": {
													"expression": {
														"id": 3468,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "16136:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 3469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16143:6:13",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16136:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16113:36:13"
											},
											{
												"expression": {
													"id": 3477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3471,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "16159:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3475,
																"name": "tokensLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3467,
																"src": "16184:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "16170:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 3472,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16174:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3473,
																"nodeType": "ArrayTypeName",
																"src": "16174:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 3476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16170:27:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "16159:38:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 3478,
												"nodeType": "ExpressionStatement",
												"src": "16159:38:13"
											},
											{
												"body": {
													"id": 3510,
													"nodeType": "Block",
													"src": "16248:247:13",
													"statements": [
														{
															"assignments": [
																3487
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3487,
																	"mutability": "mutable",
																	"name": "token",
																	"nameLocation": "16270:5:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 3510,
																	"src": "16262:13:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 3486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16262:7:13",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3491,
															"initialValue": {
																"baseExpression": {
																	"id": 3488,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "16278:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 3490,
																"indexExpression": {
																	"id": 3489,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3480,
																	"src": "16285:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16278:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16262:25:13"
														},
														{
															"expression": {
																"id": 3504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3492,
																		"name": "reserves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2573,
																		"src": "16328:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 3494,
																	"indexExpression": {
																		"id": 3493,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3480,
																		"src": "16337:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16328:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3501,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "16385:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_BasketTokenStandardPair_$3587",
																						"typeString": "contract BasketTokenStandardPair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_BasketTokenStandardPair_$3587",
																						"typeString": "contract BasketTokenStandardPair"
																					}
																				],
																				"id": 3500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16377:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 3499,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "16377:7:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16377:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 3496,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3487,
																					"src": "16360:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3495,
																				"name": "IERC20Upgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "16342:17:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1157_$",
																					"typeString": "type(contract IERC20Upgradeable)"
																				}
																			},
																			"id": 3497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16342:24:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$1157",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 3498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16367:9:13",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1114,
																		"src": "16342:34:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 3503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16342:49:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16328:63:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3505,
															"nodeType": "ExpressionStatement",
															"src": "16328:63:13"
														},
														{
															"id": 3509,
															"nodeType": "UncheckedBlock",
															"src": "16439:46:13",
															"statements": [
																{
																	"expression": {
																		"id": 3507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "16467:3:13",
																		"subExpression": {
																			"id": 3506,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3480,
																			"src": "16469:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3508,
																	"nodeType": "ExpressionStatement",
																	"src": "16467:3:13"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3483,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3480,
														"src": "16228:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3484,
														"name": "tokensLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3467,
														"src": "16232:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16228:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3511,
												"initializationExpression": {
													"assignments": [
														3480
													],
													"declarations": [
														{
															"constant": false,
															"id": 3480,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "16221:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3511,
															"src": "16213:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3479,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16213:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3482,
													"initialValue": {
														"hexValue": "30",
														"id": 3481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16225:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16213:13:13"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "16208:287:13"
											}
										]
									},
									"documentation": {
										"id": 3463,
										"nodeType": "StructuredDocumentation",
										"src": "15923:131:13",
										"text": "@notice Updates the rebalance reserves\n @dev Internal function to update reserve amounts based on current token balances"
									},
									"id": 3513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateRebalanceReserve",
									"nameLocation": "16068:23:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16091:2:13"
									},
									"returnParameters": {
										"id": 3465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16102:0:13"
									},
									"scope": 3587,
									"src": "16059:442:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3585,
										"nodeType": "Block",
										"src": "16768:620:13",
										"statements": [
											{
												"assignments": [
													3521
												],
												"declarations": [
													{
														"constant": false,
														"id": 3521,
														"mutability": "mutable",
														"name": "factoryInstance",
														"nameLocation": "16787:15:13",
														"nodeType": "VariableDeclaration",
														"scope": 3585,
														"src": "16778:24:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFactory_$2538",
															"typeString": "contract IFactory"
														},
														"typeName": {
															"id": 3520,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3519,
																"name": "IFactory",
																"nameLocations": [
																	"16778:8:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2538,
																"src": "16778:8:13"
															},
															"referencedDeclaration": 2538,
															"src": "16778:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$2538",
																"typeString": "contract IFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3524,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3522,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3462,
														"src": "16805:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IFactory_$2538_$",
															"typeString": "function () view returns (contract IFactory)"
														}
													},
													"id": 3523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16805:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFactory_$2538",
														"typeString": "contract IFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16778:37:13"
											},
											{
												"assignments": [
													3526
												],
												"declarations": [
													{
														"constant": false,
														"id": 3526,
														"mutability": "mutable",
														"name": "weth",
														"nameLocation": "16833:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 3585,
														"src": "16825:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3525,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16825:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3530,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3527,
															"name": "factoryInstance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3521,
															"src": "16840:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$2538",
																"typeString": "contract IFactory"
															}
														},
														"id": 3528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16856:4:13",
														"memberName": "weth",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2339,
														"src": "16840:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 3529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16840:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16825:37:13"
											},
											{
												"assignments": [
													3532
												],
												"declarations": [
													{
														"constant": false,
														"id": 3532,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "16906:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3585,
														"src": "16898:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3531,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16898:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3535,
												"initialValue": {
													"expression": {
														"id": 3533,
														"name": "reserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "16915:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 3534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16924:6:13",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16915:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16898:32:13"
											},
											{
												"body": {
													"id": 3583,
													"nodeType": "Block",
													"src": "16975:407:13",
													"statements": [
														{
															"assignments": [
																3544
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3544,
																	"mutability": "mutable",
																	"name": "reserve",
																	"nameLocation": "16997:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 3583,
																	"src": "16989:15:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3543,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16989:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3548,
															"initialValue": {
																"baseExpression": {
																	"id": 3545,
																	"name": "reserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "17007:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 3547,
																"indexExpression": {
																	"id": 3546,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3537,
																	"src": "17016:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17007:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16989:29:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3549,
																	"name": "reserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3544,
																	"src": "17036:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17046:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17036:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3578,
															"nodeType": "IfStatement",
															"src": "17032:280:13",
															"trueBody": {
																"id": 3577,
																"nodeType": "Block",
																"src": "17049:263:13",
																"statements": [
																	{
																		"assignments": [
																			3553
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3553,
																				"mutability": "mutable",
																				"name": "token",
																				"nameLocation": "17075:5:13",
																				"nodeType": "VariableDeclaration",
																				"scope": 3577,
																				"src": "17067:13:13",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 3552,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "17067:7:13",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3557,
																		"initialValue": {
																			"baseExpression": {
																				"id": 3554,
																				"name": "tokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2569,
																				"src": "17083:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 3556,
																			"indexExpression": {
																				"id": 3555,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3537,
																				"src": "17090:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "17083:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "17067:25:13"
																	},
																	{
																		"assignments": [
																			3562
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3562,
																				"mutability": "mutable",
																				"name": "path",
																				"nameLocation": "17154:4:13",
																				"nodeType": "VariableDeclaration",
																				"scope": 3577,
																				"src": "17137:21:13",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 3560,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "17137:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 3561,
																					"nodeType": "ArrayTypeName",
																					"src": "17137:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[]"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3568,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 3565,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3553,
																					"src": "17185:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3566,
																					"name": "weth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3526,
																					"src": "17192:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 3563,
																					"name": "factoryInstance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3521,
																					"src": "17161:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IFactory_$2538",
																						"typeString": "contract IFactory"
																					}
																				},
																				"id": 3564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "17177:7:13",
																				"memberName": "getPath",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2418,
																				"src": "17161:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_pure$_t_address_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address,address) pure external returns (address[] memory)"
																				}
																			},
																			"id": 3567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17161:36:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "17137:60:13"
																	},
																	{
																		"expression": {
																			"id": 3575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3569,
																				"name": "totalReservedETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3517,
																				"src": "17233:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 3572,
																						"name": "reserve",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3544,
																						"src": "17283:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 3573,
																						"name": "path",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3562,
																						"src": "17292:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					],
																					"expression": {
																						"id": 3570,
																						"name": "factoryInstance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3521,
																						"src": "17253:15:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IFactory_$2538",
																							"typeString": "contract IFactory"
																						}
																					},
																					"id": 3571,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "17269:13:13",
																					"memberName": "getAmountsOut",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2408,
																					"src": "17253:29:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
																						"typeString": "function (uint256,address[] memory) view external returns (uint256)"
																					}
																				},
																				"id": 3574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17253:44:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17233:64:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3576,
																		"nodeType": "ExpressionStatement",
																		"src": "17233:64:13"
																	}
																]
															}
														},
														{
															"id": 3582,
															"nodeType": "UncheckedBlock",
															"src": "17326:46:13",
															"statements": [
																{
																	"expression": {
																		"id": 3580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "17354:3:13",
																		"subExpression": {
																			"id": 3579,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3537,
																			"src": "17356:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3581,
																	"nodeType": "ExpressionStatement",
																	"src": "17354:3:13"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3540,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3537,
														"src": "16961:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3541,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3532,
														"src": "16965:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16961:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3584,
												"initializationExpression": {
													"assignments": [
														3537
													],
													"declarations": [
														{
															"constant": false,
															"id": 3537,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "16954:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3584,
															"src": "16946:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3536,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16946:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3539,
													"initialValue": {
														"hexValue": "30",
														"id": 3538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16958:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16946:13:13"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "16941:441:13"
											}
										]
									},
									"documentation": {
										"id": 3514,
										"nodeType": "StructuredDocumentation",
										"src": "16507:179:13",
										"text": "@notice Calculates the total reserved ETH\n @dev Calculates the sum of all reserve values in WETH equivalent\n @return totalReservedETH Total reserve value in WETH"
									},
									"id": 3586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalReservedETH",
									"nameLocation": "16700:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16717:2:13"
									},
									"returnParameters": {
										"id": 3518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3517,
												"mutability": "mutable",
												"name": "totalReservedETH",
												"nameLocation": "16750:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 3586,
												"src": "16742:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16742:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16741:26:13"
									},
									"scope": 3587,
									"src": "16691:697:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3588,
							"src": "584:16806:13",
							"usedErrors": [
								30,
								35,
								211,
								214,
								1957,
								1962,
								1967,
								1976,
								1981,
								1986,
								2605,
								2608,
								2611,
								2616,
								2619
							],
							"usedEvents": [
								41,
								219,
								2094,
								2103,
								2596,
								2602
							]
						}
					],
					"src": "32:17359:13"
				},
				"id": 13
			}
		}
	}
}